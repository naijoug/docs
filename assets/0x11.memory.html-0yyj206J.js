const e=JSON.parse('{"key":"v-fd97868a","path":"/interview/ios/0x11.memory.html","title":"内存管理","lang":"zh-CN","frontmatter":{"title":"内存管理","icon":"hashtag","index":true,"description":"内存分配 ❓一个 objc 对象如何进行内存布局 💡 主要分为两大类：实例对象内存和类对象内存布局 实例对象内存布局：包括 isa 和实例变量。(通过 isa 可以找到类对象); 类对象内存布局：包括属性列表、方法列表、协议列表。; ❓OC 中一个 NSObject 对象，占几个字节 💡 一个 NSObject 对象应该就是存放这个对象的指针地址。...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/0x11.memory.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"内存管理"}],["meta",{"property":"og:description","content":"内存分配 ❓一个 objc 对象如何进行内存布局 💡 主要分为两大类：实例对象内存和类对象内存布局 实例对象内存布局：包括 isa 和实例变量。(通过 isa 可以找到类对象); 类对象内存布局：包括属性列表、方法列表、协议列表。; ❓OC 中一个 NSObject 对象，占几个字节 💡 一个 NSObject 对象应该就是存放这个对象的指针地址。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T00:35:43.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-01T00:35:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内存管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T00:35:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"内存分配","slug":"内存分配","link":"#内存分配","children":[{"level":3,"title":"❓一个 objc 对象如何进行内存布局","slug":"❓一个-objc-对象如何进行内存布局","link":"#❓一个-objc-对象如何进行内存布局","children":[]},{"level":3,"title":"❓OC 中一个 NSObject 对象，占几个字节","slug":"❓oc-中一个-nsobject-对象-占几个字节","link":"#❓oc-中一个-nsobject-对象-占几个字节","children":[]},{"level":3,"title":"❓OC 中如下类结构，占用几个字节","slug":"❓oc-中如下类结构-占用几个字节","link":"#❓oc-中如下类结构-占用几个字节","children":[]},{"level":3,"title":"❓C 中如下结构体，占用几个字节","slug":"❓c-中如下结构体-占用几个字节","link":"#❓c-中如下结构体-占用几个字节","children":[]},{"level":3,"title":"❓结构体的字节对齐和 OC 对象的字节对齐","slug":"❓结构体的字节对齐和-oc-对象的字节对齐","link":"#❓结构体的字节对齐和-oc-对象的字节对齐","children":[]},{"level":3,"title":"❓UIImage 使用 imageNamed 生成的对象什么时候被释放","slug":"❓uiimage-使用-imagenamed-生成的对象什么时候被释放","link":"#❓uiimage-使用-imagenamed-生成的对象什么时候被释放","children":[]},{"level":3,"title":"❓如何使用 UIImageView 显示一个超大图片，并且支持缩放功能","slug":"❓如何使用-uiimageview-显示一个超大图片-并且支持缩放功能","link":"#❓如何使用-uiimageview-显示一个超大图片-并且支持缩放功能","children":[]},{"level":3,"title":"❓C++ 中 placement new 特性，在 OC 中可以使用吗","slug":"❓c-中-placement-new-特性-在-oc-中可以使用吗","link":"#❓c-中-placement-new-特性-在-oc-中可以使用吗","children":[]},{"level":3,"title":"❓malloc 的指针两次 free 产生的异常与访问 freed 指针有可能产生的异常有什么区别","slug":"❓malloc-的指针两次-free-产生的异常与访问-freed-指针有可能产生的异常有什么区别","link":"#❓malloc-的指针两次-free-产生的异常与访问-freed-指针有可能产生的异常有什么区别","children":[]}]},{"level":2,"title":"内存管理","slug":"内存管理","link":"#内存管理","children":[{"level":3,"title":"❓ARC 是为了解决什么问题诞生的","slug":"❓arc-是为了解决什么问题诞生的","link":"#❓arc-是为了解决什么问题诞生的","children":[]},{"level":3,"title":"❓ARC 下哪些情况会造成内存泄漏","slug":"❓arc-下哪些情况会造成内存泄漏","link":"#❓arc-下哪些情况会造成内存泄漏","children":[]},{"level":3,"title":"❓ARC 的实现原理","slug":"❓arc-的实现原理","link":"#❓arc-的实现原理","children":[]},{"level":3,"title":"❓ARC 对 retain & release 做了哪些优化","slug":"❓arc-对-retain-release-做了哪些优化","link":"#❓arc-对-retain-release-做了哪些优化","children":[]},{"level":3,"title":"❓ARC 环境下如何用 C++ 标准库容器来管理 OC 对象","slug":"❓arc-环境下如何用-c-标准库容器来管理-oc-对象","link":"#❓arc-环境下如何用-c-标准库容器来管理-oc-对象","children":[]},{"level":3,"title":"❓OC 中的 dealloc 的实现机制","slug":"❓oc-中的-dealloc-的实现机制","link":"#❓oc-中的-dealloc-的实现机制","children":[]},{"level":3,"title":"❓ARC 下为什么不允许我们调用 [super dealloc]","slug":"❓arc-下为什么不允许我们调用-super-dealloc","link":"#❓arc-下为什么不允许我们调用-super-dealloc","children":[]},{"level":3,"title":"❓Swift 统一类型的变量可选值与非可选值内存有什么区别","slug":"❓swift-统一类型的变量可选值与非可选值内存有什么区别","link":"#❓swift-统一类型的变量可选值与非可选值内存有什么区别","children":[]},{"level":3,"title":"❓Swift 内存管理中的 pwt、vwt","slug":"❓swift-内存管理中的-pwt、vwt","link":"#❓swift-内存管理中的-pwt、vwt","children":[]}]},{"level":2,"title":"weak","slug":"weak","link":"#weak","children":[{"level":3,"title":"❓weak 修饰的对象在被释放的时候会发生什么","slug":"❓weak-修饰的对象在被释放的时候会发生什么","link":"#❓weak-修饰的对象在被释放的时候会发生什么","children":[]},{"level":3,"title":"❓weak 是怎么实现的，有没有性能问题","slug":"❓weak-是怎么实现的-有没有性能问题","link":"#❓weak-是怎么实现的-有没有性能问题","children":[]},{"level":3,"title":"❓weak 的实现原理，SideTable 的结构是什么样","slug":"❓weak-的实现原理-sidetable-的结构是什么样","link":"#❓weak-的实现原理-sidetable-的结构是什么样","children":[]},{"level":3,"title":"❓如果让你实现属性的 weak，如何实现","slug":"❓如果让你实现属性的-weak-如何实现","link":"#❓如果让你实现属性的-weak-如何实现","children":[]},{"level":3,"title":"❓IBOutlet 连出来的视图属性为什么可以被设置成 weak","slug":"❓iboutlet-连出来的视图属性为什么可以被设置成-weak","link":"#❓iboutlet-连出来的视图属性为什么可以被设置成-weak","children":[]},{"level":3,"title":"❓Swift 中 weak 和 unowned 的区别","slug":"❓swift-中-weak-和-unowned-的区别","link":"#❓swift-中-weak-和-unowned-的区别","children":[]}]},{"level":2,"title":"自动释放池","slug":"自动释放池","link":"#自动释放池","children":[{"level":3,"title":"❓@autorelease { NSString *s; } 和 NSString *s; 有什么区别","slug":"❓-autorelease-nsstring-s-和-nsstring-s-有什么区别","link":"#❓-autorelease-nsstring-s-和-nsstring-s-有什么区别","children":[]},{"level":3,"title":"❓说说你对 autorelease 的理解","slug":"❓说说你对-autorelease-的理解","link":"#❓说说你对-autorelease-的理解","children":[]},{"level":3,"title":"❓一个局部变量是什么时候释放的，autorelease 什么时候释放","slug":"❓一个局部变量是什么时候释放的-autorelease-什么时候释放","link":"#❓一个局部变量是什么时候释放的-autorelease-什么时候释放","children":[]},{"level":3,"title":"❓不手动指定 autoreleasepool 一个 autorealese 对象在什么时刻释放","slug":"❓不手动指定-autoreleasepool-一个-autorealese-对象在什么时刻释放","link":"#❓不手动指定-autoreleasepool-一个-autorealese-对象在什么时刻释放","children":[]},{"level":3,"title":"❓手动创建的 autoreleasepool 一个 autorealese 对象在什么时刻释放","slug":"❓手动创建的-autoreleasepool-一个-autorealese-对象在什么时刻释放","link":"#❓手动创建的-autoreleasepool-一个-autorealese-对象在什么时刻释放","children":[]},{"level":3,"title":"❓子线程中需要加 autoreleasepool 吗","slug":"❓子线程中需要加-autoreleasepool-吗","link":"#❓子线程中需要加-autoreleasepool-吗","children":[]},{"level":3,"title":"❓子线程中的 autorelease 变量什么时候释放","slug":"❓子线程中的-autorelease-变量什么时候释放","link":"#❓子线程中的-autorelease-变量什么时候释放","children":[]},{"level":3,"title":"❓什么情况下需要手动创建 autoreleasepool","slug":"❓什么情况下需要手动创建-autoreleasepool","link":"#❓什么情况下需要手动创建-autoreleasepool","children":[]},{"level":3,"title":"❓以下代码存在什么问题","slug":"❓以下代码存在什么问题","link":"#❓以下代码存在什么问题","children":[]},{"level":3,"title":"❓Runloop 与 autoreleasepool 的关系","slug":"❓runloop-与-autoreleasepool-的关系","link":"#❓runloop-与-autoreleasepool-的关系","children":[]},{"level":3,"title":"❓autoreleasepool 的底层实现？","slug":"❓autoreleasepool-的底层实现","link":"#❓autoreleasepool-的底层实现","children":[]}]},{"level":2,"title":"内存分析","slug":"内存分析","link":"#内存分析","children":[{"level":3,"title":"❓内存泄漏可能会出现的几种原因","slug":"❓内存泄漏可能会出现的几种原因","link":"#❓内存泄漏可能会出现的几种原因","children":[]},{"level":3,"title":"❓app 内存是如何分析的","slug":"❓app-内存是如何分析的","link":"#❓app-内存是如何分析的","children":[]},{"level":3,"title":"❓leak 工具使用","slug":"❓leak-工具使用","link":"#❓leak-工具使用","children":[]}]}],"git":{"createdTime":1704610269000,"updatedTime":1709253343000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":4}]},"readingTime":{"minutes":34.2,"words":10261},"filePathRelative":"interview/ios/0x11.memory.md","localizedDate":"2024年1月7日","autoDesc":true}');export{e as data};
