const e=JSON.parse('{"key":"v-139780fa","path":"/interview/ios/0x04.kvc-kvo.html","title":"KVC & KVO","lang":"zh-CN","frontmatter":{"title":"KVC & KVO","icon":"hashtag","index":true,"description":"KVC KVC (Key Value Coding) : 是 OC 的特性，可以直接通过键名访问属性和属性赋值。通过 NSObject 的扩展(NSKeyValueCoding)来实现，所有继承 NSObject 的类型都可以使用 KVC 特性。 ❓KVC 机制是如何通过 key 找到 value 💡 KVC，即 Key-Value Coding，是...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/0x04.kvc-kvo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"KVC & KVO"}],["meta",{"property":"og:description","content":"KVC KVC (Key Value Coding) : 是 OC 的特性，可以直接通过键名访问属性和属性赋值。通过 NSObject 的扩展(NSKeyValueCoding)来实现，所有继承 NSObject 的类型都可以使用 KVC 特性。 ❓KVC 机制是如何通过 key 找到 value 💡 KVC，即 Key-Value Coding，是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-22T13:43:15.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-02-22T13:43:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"KVC & KVO\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-22T13:43:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"KVC","slug":"kvc","link":"#kvc","children":[{"level":3,"title":"❓KVC 机制是如何通过 key 找到 value","slug":"❓kvc-机制是如何通过-key-找到-value","link":"#❓kvc-机制是如何通过-key-找到-value","children":[]},{"level":3,"title":"❓若一个类有实例变量 NSString *_foo，调用 setValue:forKey: 时，是以 foo 还是 _foo 作为 key","slug":"❓若一个类有实例变量-nsstring-foo-调用-setvalue-forkey-时-是以-foo-还是-foo-作为-key","link":"#❓若一个类有实例变量-nsstring-foo-调用-setvalue-forkey-时-是以-foo-还是-foo-作为-key","children":[]},{"level":3,"title":"❓KVC 的 keyPath 中的集合运算符如何使用","slug":"❓kvc-的-keypath-中的集合运算符如何使用","link":"#❓kvc-的-keypath-中的集合运算符如何使用","children":[]},{"level":3,"title":"❓KVC 有哪些实际应用","slug":"❓kvc-有哪些实际应用","link":"#❓kvc-有哪些实际应用","children":[]},{"level":3,"title":"❓KVC 的底层实现","slug":"❓kvc-的底层实现","link":"#❓kvc-的底层实现","children":[]}]},{"level":2,"title":"KVO","slug":"kvo","link":"#kvo","children":[{"level":3,"title":"❓addObserver:forKeyPath:options:context: 各个参数的作用是什么","slug":"❓addobserver-forkeypath-options-context-各个参数的作用是什么","link":"#❓addobserver-forkeypath-options-context-各个参数的作用是什么","children":[]},{"level":3,"title":"❓KVO 的优缺点","slug":"❓kvo-的优缺点","link":"#❓kvo-的优缺点","children":[]},{"level":3,"title":"❓如何手动触发一个 value 的 KVO","slug":"❓如何手动触发一个-value-的-kvo","link":"#❓如何手动触发一个-value-的-kvo","children":[]},{"level":3,"title":"❓如何取消系统默认的 KVO 并手动触发","slug":"❓如何取消系统默认的-kvo-并手动触发","link":"#❓如何取消系统默认的-kvo-并手动触发","children":[]},{"level":3,"title":"❓如何给 KVO 的触发设定条件","slug":"❓如何给-kvo-的触发设定条件","link":"#❓如何给-kvo-的触发设定条件","children":[]},{"level":3,"title":"❓KVO 失效了怎么办","slug":"❓kvo-失效了怎么办","link":"#❓kvo-失效了怎么办","children":[]},{"level":3,"title":"❓KVO 的底层实现","slug":"❓kvo-的底层实现","link":"#❓kvo-的底层实现","children":[]},{"level":3,"title":"❓KVO 为什么要创建一个子类来实现","slug":"❓kvo-为什么要创建一个子类来实现","link":"#❓kvo-为什么要创建一个子类来实现","children":[]},{"level":3,"title":"❓KVO 崩溃会是什么情况下发生，如何避免","slug":"❓kvo-崩溃会是什么情况下发生-如何避免","link":"#❓kvo-崩溃会是什么情况下发生-如何避免","children":[]}]},{"level":2,"title":"KVC & KVO","slug":"kvc-kvo","link":"#kvc-kvo","children":[{"level":3,"title":"❓KVC 和 KVO 的 keyPath 一定是属性吗","slug":"❓kvc-和-kvo-的-keypath-一定是属性吗","link":"#❓kvc-和-kvo-的-keypath-一定是属性吗","children":[]},{"level":3,"title":"❓KVC 成员变量会不会触发 KVO","slug":"❓kvc-成员变量会不会触发-kvo","link":"#❓kvc-成员变量会不会触发-kvo","children":[]},{"level":3,"title":"❓通过 KVC 修改属性会触发 KVO 吗","slug":"❓通过-kvc-修改属性会触发-kvo-吗","link":"#❓通过-kvc-修改属性会触发-kvo-吗","children":[]}]}],"git":{"createdTime":1704610269000,"updatedTime":1708609395000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":3}]},"readingTime":{"minutes":13.01,"words":3904},"filePathRelative":"interview/ios/0x04.kvc-kvo.md","localizedDate":"2024年1月7日","autoDesc":true}');export{e as data};
