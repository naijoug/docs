import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as i,c as a,a as d,b as e,e as n,d as s,f as l}from"./app-SDsRO-JA.js";const _={},h=l('<h2 id="_0000" tabindex="-1"><a class="header-anchor" href="#_0000" aria-hidden="true">#</a> 0000</h2><p>// #region 0000</p><ul><li><a href="">🟢🟠🔴 - </a></li></ul><details class="hint-container details"><summary>💡</summary></details><p>// #endregion 0000</p><h2 id="_0001" tabindex="-1"><a class="header-anchor" href="#_0001" aria-hidden="true">#</a> 0001</h2><p>// #region 0001</p>',7),c={href:"https://leetcode.cn/problems/two-sum",target:"_blank",rel:"noopener noreferrer"},u=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),p=e("p",null,"// #endregion 0001",-1),m=e("h2",{id:"_0002",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0002","aria-hidden":"true"},"#"),n(" 0002")],-1),b=e("p",null,"// #region 0002",-1),f={href:"https://leetcode.cn/problems/add-two-numbers",target:"_blank",rel:"noopener noreferrer"},g=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),k=e("p",null,"// #endregion 0002",-1),x=e("h2",{id:"_0003",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0003","aria-hidden":"true"},"#"),n(" 0003")],-1),y=e("p",null,"// #region 0003",-1),v={href:"https://leetcode.cn/problems/longest-substring-without-repeating-characters",target:"_blank",rel:"noopener noreferrer"},q=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),I=e("p",null,"// #endregion 0003",-1),w=e("h2",{id:"_0005",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0005","aria-hidden":"true"},"#"),n(" 0005")],-1),N=e("p",null,"// #region 0005",-1),Q={href:"https://leetcode.cn/problems/longest-palindromic-substring/",target:"_blank",rel:"noopener noreferrer"},V=e("blockquote",null,[e("p",null,"给定一个字符串，返回该字符串中最长的回文串。")],-1),j=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),B=e("p",null,"// #endregion 0005",-1),E=e("h2",{id:"_0007",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0007","aria-hidden":"true"},"#"),n(" 0007")],-1),C=e("p",null,"// #region 0007",-1),K={href:"https://leetcode.cn/problems/reverse-integer",target:"_blank",rel:"noopener noreferrer"},L=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),S=e("p",null,"// #endregion 0007",-1),P=e("h2",{id:"_0009",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0009","aria-hidden":"true"},"#"),n(" 0009")],-1),R=e("p",null,"// #region 0009",-1),T={href:"https://leetcode.cn/problems/palindrome-number",target:"_blank",rel:"noopener noreferrer"},z=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),A=e("p",null,"// #endregion 0009",-1),D=e("h2",{id:"_0013",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0013","aria-hidden":"true"},"#"),n(" 0013")],-1),F=e("p",null,"// #region 0013",-1),G={href:"https://leetcode.cn/problems/roman-to-integer",target:"_blank",rel:"noopener noreferrer"},H=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),J=e("p",null,"// #endregion 0013",-1),M=e("h2",{id:"_0014",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0014","aria-hidden":"true"},"#"),n(" 0014")],-1),O=e("p",null,"// #region 0014",-1),U={href:"https://leetcode.cn/problems/longest-common-prefix",target:"_blank",rel:"noopener noreferrer"},W=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),X=e("p",null,"// #endregion 0014",-1),Y=e("h2",{id:"_0015",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0015","aria-hidden":"true"},"#"),n(" 0015")],-1),Z=e("p",null,"// #region 0015",-1),$={href:"https://leetcode.cn/problems/3sum",target:"_blank",rel:"noopener noreferrer"},ee=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),ne=e("p",null,"// #endregion 0015",-1),te=e("h2",{id:"_0018",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0018","aria-hidden":"true"},"#"),n(" 0018")],-1),se=e("p",null,"// #region 0018",-1),le={href:"https://leetcode.cn/problems/4sum",target:"_blank",rel:"noopener noreferrer"},oe=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),re=e("p",null,"// #endregion 0018",-1),ie=e("h2",{id:"_0019",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0019","aria-hidden":"true"},"#"),n(" 0019")],-1),ae=e("p",null,"// #region 0019",-1),de={href:"https://leetcode.cn/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"},_e=e("blockquote",null,[e("p",null,"删除单链表的倒数第 N 个节点，并返回头结点。")],-1),he=e("details",{class:"hint-container details"},[e("summary",null,"详情")],-1),ce=e("p",null,"// #endregion 0019",-1),ue=e("h2",{id:"_0020",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0020","aria-hidden":"true"},"#"),n(" 0020")],-1),pe=e("p",null,"// #region 0020",-1),me={href:"https://leetcode.cn/problems/valid-parentheses",target:"_blank",rel:"noopener noreferrer"},be=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),fe=e("p",null,"// #endregion 0020",-1),ge=e("h2",{id:"_0021",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0021","aria-hidden":"true"},"#"),n(" 0021")],-1),ke=e("p",null,"// #region 0021",-1),xe={href:"https://leetcode.cn/problems/merge-two-sorted-lists",target:"_blank",rel:"noopener noreferrer"},ye=e("blockquote",null,[e("p",null,"合并两个有序的链表。")],-1),ve=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),qe=e("p",null,"// #endregion 0021",-1),Ie=e("h2",{id:"_0023",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0023","aria-hidden":"true"},"#"),n(" 0023")],-1),we=e("p",null,"// #region 0023",-1),Ne={href:"https://leetcode.cn/problems/merge-k-sorted-lists",target:"_blank",rel:"noopener noreferrer"},Qe=e("blockquote",null,[e("p",null,"给定一个升序链表数组，合并得到一个升序链表，并返回头结点。")],-1),Ve=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),je=e("p",null,"// #endregion 0023",-1),Be=e("h2",{id:"_0025",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0025","aria-hidden":"true"},"#"),n(" 0025")],-1),Ee=e("p",null,"// #region 0025",-1),Ce={href:"https://leetcode.cn/problems/reverse-nodes-in-k-group",target:"_blank",rel:"noopener noreferrer"},Ke=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Le=e("p",null,"// #endregion 0025",-1),Se=e("h2",{id:"_0026",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0026","aria-hidden":"true"},"#"),n(" 0026")],-1),Pe=e("p",null,"// #region 0026",-1),Re={href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-array",target:"_blank",rel:"noopener noreferrer"},Te=e("blockquote",null,[e("p",null,"给定一个有序数组，删除数组中的重复项，并返回数组新长度。")],-1),ze=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Ae=e("p",null,"// #endregion 0026",-1),De=e("h2",{id:"_0027",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0027","aria-hidden":"true"},"#"),n(" 0027")],-1),Fe=e("p",null,"// #region 0027",-1),Ge={href:"https://leetcode.cn/problems/remove-element",target:"_blank",rel:"noopener noreferrer"},He=e("blockquote",null,[e("p",null,"给定一个数组和目标值，需要将数组中的与目标值相等的元素移除，返回数组新长度。")],-1),Je=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Me=e("p",null,"// #endregion 0027",-1),Oe=e("h2",{id:"_0028",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0028","aria-hidden":"true"},"#"),n(" 0028")],-1),Ue=e("p",null,"// #region 0028",-1),We={href:"https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string",target:"_blank",rel:"noopener noreferrer"},Xe=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Ye=e("p",null,"// #endregion 0028",-1),Ze=e("h2",{id:"_0034",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0034","aria-hidden":"true"},"#"),n(" 0034")],-1),$e=e("p",null,"// #region 0034",-1),en={href:"https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array",target:"_blank",rel:"noopener noreferrer"},nn=e("blockquote",null,[e("p",null,"给定一个非递减数组和一个目标值，查找该目标值在数组中的开始位置和结束位置，如果存在则返回 [start, end]，如果不存在返回 [-1, -1]。")],-1),tn=l(`<details class="hint-container details"><summary>💡</summary><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">searchRange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>// #endregion 0034</p><h2 id="_0035" tabindex="-1"><a class="header-anchor" href="#_0035" aria-hidden="true">#</a> 0035</h2><p>// #region 0035</p>`,4),sn={href:"https://leetcode.cn/problems/search-insert-position",target:"_blank",rel:"noopener noreferrer"},ln=e("blockquote",null,[e("p",null,"给定一个升序数组和一个目标值，如果目标值在数组中存在返回目标值索引，如果不存在返回插入位置索引。")],-1),on=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),rn=e("p",null,"// #endregion 0035",-1),an=e("h2",{id:"_0038",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0038","aria-hidden":"true"},"#"),n(" 0038")],-1),dn=e("p",null,"// #region 0038",-1),_n={href:"https://leetcode.cn/problems/count-and-say",target:"_blank",rel:"noopener noreferrer"},hn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),cn=e("p",null,"// #endregion 0038",-1),un=e("h2",{id:"_0039",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0039","aria-hidden":"true"},"#"),n(" 0039")],-1),pn=e("p",null,"// #region 0039",-1),mn={href:"https://leetcode.cn/problems/combination-sum",target:"_blank",rel:"noopener noreferrer"},bn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),fn=e("p",null,"// #endregion 0039",-1),gn=e("h2",{id:"_0040",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0040","aria-hidden":"true"},"#"),n(" 0040")],-1),kn=e("p",null,"// #region 0040",-1),xn={href:"https://leetcode.cn/problems/combination-sum-ii",target:"_blank",rel:"noopener noreferrer"},yn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),vn=e("p",null,"// #endregion 0040",-1),qn=e("h2",{id:"_0041",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0041","aria-hidden":"true"},"#"),n(" 0041")],-1),In=e("p",null,"// #region 0041",-1),wn={href:"https://leetcode.cn/problems/first-missing-positive",target:"_blank",rel:"noopener noreferrer"},Nn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Qn=e("p",null,"// #endregion 0041",-1),Vn=e("h2",{id:"_0046",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0046","aria-hidden":"true"},"#"),n(" 0046")],-1),jn=e("p",null,"// #region 0046",-1),Bn={href:"https://leetcode.cn/problems/permutations",target:"_blank",rel:"noopener noreferrer"},En=e("blockquote",null,[e("p",null,"给定一个没有重复数字的数组，返回其所有可能的全排列。")],-1),Cn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Kn=e("p",null,"// #endregion 0046",-1),Ln=e("h2",{id:"_0047",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0047","aria-hidden":"true"},"#"),n(" 0047")],-1),Sn=e("p",null,"// #region 0047",-1),Pn={href:"https://leetcode.cn/problems/permutations-ii",target:"_blank",rel:"noopener noreferrer"},Rn=e("blockquote",null,[e("p",null,"给定一个包含重复数字的数组，返回所有不重复的全排列。")],-1),Tn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),zn=e("p",null,"// #endregion 0047",-1),An=e("h2",{id:"_0048",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0048","aria-hidden":"true"},"#"),n(" 0048")],-1),Dn=e("p",null,"// #region 0048",-1),Fn={href:"https://leetcode.cn/problems/rotate-image",target:"_blank",rel:"noopener noreferrer"},Gn=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Hn=e("p",null,"// #endregion 0048",-1),Jn=e("h2",{id:"_0050",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0050","aria-hidden":"true"},"#"),n(" 0050")],-1),Mn=e("p",null,"// #region 0050",-1),On={href:"https://leetcode.cn/problems/powx-n",target:"_blank",rel:"noopener noreferrer"},Un=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Wn=e("p",null,"// #endregion 0050",-1),Xn=e("h2",{id:"_0051",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0051","aria-hidden":"true"},"#"),n(" 0051")],-1),Yn=e("p",null,"// #region 0051",-1),Zn={href:"https://leetcode.cn/problems/n-queens",target:"_blank",rel:"noopener noreferrer"},$n=e("blockquote",null,[e("p",null,"将 n 个皇后棋子，放置在 nxn 的棋盘中。'Q'代表皇后，'.'代表空位，返回所有的不同的解决方案。")],-1),et=e("pre",null,[e("code",null,`  示例：
      输入：n = 4
      输出：[[".Q..","...Q","Q...","..Q."],["..Q.","Q...","...Q",".Q.."]]
      输入：n = 1
      输出：[["Q"]]
`)],-1),nt=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),tt=e("p",null,"// #endregion 0051",-1),st=e("h2",{id:"_0052",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0052","aria-hidden":"true"},"#"),n(" 0052")],-1),lt=e("p",null,"// #region 0052",-1),ot={href:"https://leetcode.cn/problems/n-queens-ii",target:"_blank",rel:"noopener noreferrer"},rt=e("blockquote",null,[e("p",null,"返回 N 皇后问题的解决方案数量")],-1),it=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),at=e("p",null,"// #endregion 0052",-1),dt=e("h2",{id:"_0054",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0054","aria-hidden":"true"},"#"),n(" 0054")],-1),_t=e("p",null,"// #region 0054",-1),ht={href:"https://leetcode.cn/problems/spiral-matrix",target:"_blank",rel:"noopener noreferrer"},ct=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),ut=e("p",null,"// #endregion 0054",-1),pt=e("h2",{id:"_0059",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0059","aria-hidden":"true"},"#"),n(" 0059")],-1),mt=e("p",null,"// #region 0059",-1),bt={href:"https://leetcode.cn/problems/spiral-matrix-ii",target:"_blank",rel:"noopener noreferrer"},ft=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),gt=e("p",null,"// #endregion 0059",-1),kt=e("h2",{id:"_0076",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0076","aria-hidden":"true"},"#"),n(" 0076")],-1),xt=e("p",null,"// #region 0076",-1),yt={href:"https://leetcode.cn/problems/minimum-window-substring",target:"_blank",rel:"noopener noreferrer"},vt=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),qt=e("p",null,"// #endregion 0076",-1),It=e("h2",{id:"_0077",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0077","aria-hidden":"true"},"#"),n(" 0077")],-1),wt=e("p",null,"// #region 0077",-1),Nt={href:"https://leetcode.cn/problems/combinations",target:"_blank",rel:"noopener noreferrer"},Qt=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Vt=e("p",null,"// #endregion 0077",-1),jt=e("h2",{id:"_0078",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0078","aria-hidden":"true"},"#"),n(" 0078")],-1),Bt=e("p",null,"// #region 0078",-1),Et={href:"https://leetcode.cn/problems/subsets",target:"_blank",rel:"noopener noreferrer"},Ct=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Kt=e("p",null,"// #endregion 0078",-1),Lt=e("h2",{id:"_0083",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0083","aria-hidden":"true"},"#"),n(" 0083")],-1),St=e("p",null,"// #region 0083",-1),Pt={href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-list",target:"_blank",rel:"noopener noreferrer"},Rt=e("blockquote",null,[e("p",null,"给定一个已排序的链表，删除链表中的重复元素。")],-1),Tt=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),zt=e("p",null,"// #endregion 0083",-1),At=e("h2",{id:"_0086",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0086","aria-hidden":"true"},"#"),n(" 0086")],-1),Dt=e("p",null,"// #region 0086",-1),Ft={href:"https://leetcode.cn/problems/partition-list",target:"_blank",rel:"noopener noreferrer"},Gt=e("blockquote",null,[e("p",null,"根据给定值将链表元素分割为小于和大于该值的两部分。并保持节点元素相对位置。")],-1),Ht=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Jt=e("p",null,"// #endregion 0086",-1),Mt=e("h2",{id:"_0090",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0090","aria-hidden":"true"},"#"),n(" 0090")],-1),Ot=e("p",null,"// #region 0090",-1),Ut={href:"https://leetcode.cn/problems/subsets-ii",target:"_blank",rel:"noopener noreferrer"},Wt=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),Xt=e("p",null,"// #endregion 0090",-1),Yt=e("h2",{id:"_0092",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0092","aria-hidden":"true"},"#"),n(" 0092")],-1),Zt=e("p",null,"// #region 0092",-1),$t={href:"https://leetcode.cn/problems/reverse-linked-list-ii/",target:"_blank",rel:"noopener noreferrer"},es=e("blockquote",null,[e("p",null,"通过单链表的头结点 head 和两个整数 left 和 right (left <= right)，反转链表从 left 到 right 位置的链表节点，返回反转后的链表。")],-1),ns=e("details",{class:"hint-container details"},[e("summary",null,"💡"),e("blockquote",null,[e("p",null,"如果使用迭代，上面两个题应该怎么处理？")])],-1),ts=e("p",null,"// #endregion 0092",-1);function ss(ls,os){const t=r("ExternalLinkIcon");return i(),a("div",null,[d(" more "),h,e("ul",null,[e("li",null,[e("a",c,[n("🟢 1 - 两数之和"),s(t)])])]),u,p,m,b,e("ul",null,[e("li",null,[e("a",f,[n("🟠 2 - 两数相加"),s(t)])])]),g,k,x,y,e("ul",null,[e("li",null,[e("a",v,[n("🟠 3 - 无重复字符的最长子串"),s(t)])])]),q,I,w,N,e("ul",null,[e("li",null,[e("a",Q,[n("🟠 5 - 最长回文子串"),s(t)]),V])]),j,B,E,C,e("ul",null,[e("li",null,[e("a",K,[n("🟠 7 - 整数反转"),s(t)])])]),L,S,P,R,e("ul",null,[e("li",null,[e("a",T,[n("🟢 9 - 回文数"),s(t)])])]),z,A,D,F,e("ul",null,[e("li",null,[e("a",G,[n("🟢 13 - 罗马数字转整数"),s(t)])])]),H,J,M,O,e("ul",null,[e("li",null,[e("a",U,[n("🟢 14 - 最长公共前缀"),s(t)])])]),W,X,Y,Z,e("ul",null,[e("li",null,[e("a",$,[n("🟠 15 - 三数之和"),s(t)])])]),ee,ne,te,se,e("ul",null,[e("li",null,[e("a",le,[n("🟠 18 - 四数之和"),s(t)])])]),oe,re,ie,ae,e("ul",null,[e("li",null,[e("a",de,[n("🟢 19 - 删除链表的倒数第 N 个结点"),s(t)]),_e])]),he,ce,ue,pe,e("ul",null,[e("li",null,[e("a",me,[n("🟢 20 - 有效的括号"),s(t)])])]),be,fe,ge,ke,e("ul",null,[e("li",null,[e("a",xe,[n("🟢 21 - 合并两个有序链表"),s(t)]),ye])]),ve,qe,Ie,we,e("ul",null,[e("li",null,[e("a",Ne,[n("🔴 23 - 合并 K 个升序链表"),s(t)]),Qe])]),Ve,je,Be,Ee,e("ul",null,[e("li",null,[e("a",Ce,[n("🔴 - K 个一组翻转链表"),s(t)])])]),Ke,Le,Se,Pe,e("ul",null,[e("li",null,[e("a",Re,[n("🟢 26 - 删除有序数组中的重复项"),s(t)]),Te])]),ze,Ae,De,Fe,e("ul",null,[e("li",null,[e("a",Ge,[n("🟢 27 - 移除元素"),s(t)]),He])]),Je,Me,Oe,Ue,e("ul",null,[e("li",null,[e("a",We,[n("🟢 28 - 找出字符串中第一个匹配项的下标"),s(t)])])]),Xe,Ye,Ze,$e,e("ul",null,[e("li",null,[e("a",en,[n("🟢 34 - 在排序数组中查找元素的第一个和最后一个位置"),s(t)]),nn])]),tn,e("ul",null,[e("li",null,[e("a",sn,[n("🟢 35 - 搜索插入位置"),s(t)]),ln])]),on,rn,an,dn,e("ul",null,[e("li",null,[e("a",_n,[n("🟠 38 - 外观数列"),s(t)])])]),hn,cn,un,pn,e("ul",null,[e("li",null,[e("a",mn,[n("🟠 39 - 组合总和"),s(t)])])]),bn,fn,gn,kn,e("ul",null,[e("li",null,[e("a",xn,[n("🟠 40 - 组合总和 II"),s(t)])])]),yn,vn,qn,In,e("ul",null,[e("li",null,[e("a",wn,[n("🔴 41 - 缺失的第一个正数"),s(t)])])]),Nn,Qn,Vn,jn,e("ul",null,[e("li",null,[e("a",Bn,[n("🟠 46 - 全排列"),s(t)]),En])]),Cn,Kn,Ln,Sn,e("ul",null,[e("li",null,[e("a",Pn,[n("🟠 47 - 全排列 II"),s(t)]),Rn])]),Tn,zn,An,Dn,e("ul",null,[e("li",null,[e("a",Fn,[n("🟠 48 - 旋转图像"),s(t)])])]),Gn,Hn,Jn,Mn,e("ul",null,[e("li",null,[e("a",On,[n("🟠 50 - Pow(x, n)"),s(t)])])]),Un,Wn,Xn,Yn,e("ul",null,[e("li",null,[e("p",null,[e("a",Zn,[n("🔴 51 - N 皇后"),s(t)])]),$n,et])]),nt,tt,st,lt,e("ul",null,[e("li",null,[e("a",ot,[n("🔴 52 - N 皇后 II"),s(t)]),rt])]),it,at,dt,_t,e("ul",null,[e("li",null,[e("a",ht,[n("🟠 54 - 螺旋矩阵"),s(t)])])]),ct,ut,pt,mt,e("ul",null,[e("li",null,[e("a",bt,[n("🟠 59 - 螺旋矩阵 II"),s(t)])])]),ft,gt,kt,xt,e("ul",null,[e("li",null,[e("a",yt,[n("🔴 76 - 最小覆盖子串"),s(t)])])]),vt,qt,It,wt,e("ul",null,[e("li",null,[e("a",Nt,[n("🟠 77 - 组合"),s(t)])])]),Qt,Vt,jt,Bt,e("ul",null,[e("li",null,[e("a",Et,[n("🟠 78 - 子集"),s(t)])])]),Ct,Kt,Lt,St,e("ul",null,[e("li",null,[e("a",Pt,[n("🟠 83 - 删除排序链表中的重复元素"),s(t)]),Rt])]),Tt,zt,At,Dt,e("ul",null,[e("li",null,[e("a",Ft,[n("🟠 86 - 分隔链表"),s(t)]),Gt])]),Ht,Jt,Mt,Ot,e("ul",null,[e("li",null,[e("a",Ut,[n("🟠 90 - 子集 II"),s(t)])])]),Wt,Xt,Yt,Zt,e("ul",null,[e("li",null,[e("a",$t,[n("🟠 92 - 反转链表 II"),s(t)]),es])]),ns,ts])}const as=o(_,[["render",ss],["__file","0x0000.html.vue"]]);export{as as default};
