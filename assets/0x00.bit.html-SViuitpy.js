import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as d,c as m,a as c,b as n,e as s,d as l,w as a,f as u}from"./app-tfDtes5s.js";const k={},b=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" reference")],-1),v={href:"https://visualgo.net/zh/bitmask/print",target:"_blank",rel:"noopener noreferrer"},h=u(`<hr><h2 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符" aria-hidden="true">#</a> 位运算符</h2><ul><li><code>|</code> : 与</li><li><code>&amp;</code> : 或</li><li><code>!</code> : 非</li><li><code>^</code> : 异或</li></ul><h3 id="如何最高效的计算-17-2" tabindex="-1"><a class="header-anchor" href="#如何最高效的计算-17-2" aria-hidden="true">#</a> 如何最高效的计算 <code>17 * 2</code></h3><details class="hint-container details"><summary>💡</summary><p>关于乘以 2 的一种高效方法，那可以使用位运算的左移操作，将一个数字向左位移一位等同于将这个数字乘以 2。</p><p><code>17 * 2</code> 可以通过将 17 向左位移一位来实现，也就是 <code>17 &lt;&lt; 1</code></p></details><hr><h2 id="n-n-0-n-0-n" tabindex="-1"><a class="header-anchor" href="#n-n-0-n-0-n" aria-hidden="true">#</a> <code>n ^ n = 0</code> &amp; <code>n ^ 0 = n</code></h2><p>对于一个整数 n 进行异或操作，存在以下两条结论</p><ul><li>数字 n 同自身进行异或操作结果为 0</li><li>数字 n 与 0 进行异或操作结果为 n</li></ul><h3 id="不使用临时变量交换两个数" tabindex="-1"><a class="header-anchor" href="#不使用临时变量交换两个数" aria-hidden="true">#</a> 不使用临时变量交换两个数</h3><details class="hint-container details"><summary>💡</summary><p>@code-tabs</p><p>@tab swift</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span>
a <span class="token operator">=</span> a<span class="token operator">^</span>b
b <span class="token operator">=</span> a<span class="token operator">^</span>b
a <span class="token operator">=</span> a<span class="token operator">^</span>b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="博弈论" tabindex="-1"><a class="header-anchor" href="#博弈论" aria-hidden="true">#</a> 博弈论</h3>`,12),_={href:"https://leetcode.cn/problems/chalkboard-xor-game",target:"_blank",rel:"noopener noreferrer"},g={class:"hint-container details"},f=n("summary",null,"💡",-1),w=n("p",null,"【思路】博弈论",-1),j=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"xorGame"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 偶数，必胜"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 异或结果为零，必胜"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" xor "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},":"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            xor `),n("span",{class:"token operator"},"^="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" xor "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("h3",{id:"single-number-只出现一次的数字",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#single-number-只出现一次的数字","aria-hidden":"true"},"#"),s(),n("code",null,"Single Number"),s(" - “只出现一次的数字”")],-1),y={href:"https://leetcode.cn/problems/single-number/",target:"_blank",rel:"noopener noreferrer"},A=n("blockquote",null,[n("p",null,"一个非空的整数数组，除了某个元素只出现一次外，其余元素均出现两次。找出只出现一次的数字")],-1),I={class:"hint-container details"},N=n("summary",null,"💡",-1),q=n("p",null,[s("【思路】 由于存在相同的元素均出现两次，刚好可以使用 "),n("code",null,"x ^ x = 0"),s(" 的特性。将所有数字进行异或操作，则相同的数字异或结果为 0，只出现一次的数与 0 进行异或结果就是只出现一次的数。 时间复杂度: O(n) 空间复杂度: O(1)")],-1),O=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),C={href:"https://leetcode.cn/problems/single-number-ii",target:"_blank",rel:"noopener noreferrer"},S=n("blockquote",null,[n("p",null,"一个非空的整数数组中，除了某个元素只出现一次外，其余元素均出现三次。找出只出现一次的数字 时间复杂度: O(n) 空间复杂度: O(1)")],-1),V={class:"hint-container details"},B=n("summary",null,"💡",-1),E=n("p",null,[s("【思路】 这道题是 136 的变形版本，不能使用 "),n("code",null,"x ^ x = 0"),s(" 特性。但是但是还是可以使用位运算的特性进行求解。")],-1),T=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),L={href:"https://leetcode.cn/problems/single-number-iii",target:"_blank",rel:"noopener noreferrer"},z=n("blockquote",null,[n("p",null,"一个非空的整数数组中，除了两个元素只出现一次外，其余元素均出现两次。找出两个只出现一次的数字 时间复杂度: O(n) 空间复杂度: O(1)")],-1),G={class:"hint-container details"},M=n("summary",null,"💡",-1),D=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),H=n("h3",{id:"missing-number-丢失的数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#missing-number-丢失的数","aria-hidden":"true"},"#"),s(),n("code",null,"Missing Number"),s(" - “丢失的数”")],-1),J={href:"https://leetcode.cn/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},K=n("blockquote",null,[n("p",null,"给定一个包含 [0, n] 中的 n 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的那个数。")],-1),P={class:"hint-container details"},Q=n("summary",null,"💡",-1),R=n("p",null,"【思路1】缺失的数 = 等差数列求和 - 数组的和",-1),U=n("p",null,[s("【思路2】位运算 由于这个数组的值范围为[0, n]，则表明刚好是长度为 n+1 长度的数组。数字刚好与所在的索引的位置匹配，而缺失的数表明该位置没有数。那么使用 "),n("code",null,"x ^ x = 0"),s(" 的特性。只要将数组中数值与所有的索引进行异或操作，那么结果刚好就是缺失的那个数。 代码实现时，必须要构造一个 0~n 的数组，可以在循环变量数组时，直接使用索引值。需要注意的是 nums 长度为 n，不是 n+1。所以遍历时索引值只能到 n-1，所以可以将进行异或操作的结果值初始值设置为 n。")],-1),W=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"missingNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" sum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 数组的和"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},":"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            sum `),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 缺失的数 = 数学等差数列求和 - 数组的和"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" len "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},"+"),s(" len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"*"),s("len"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"-"),s(" sum"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"missingNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" nums"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Int"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"let"),s(" count "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s(`count
        `),n("span",{class:"token keyword"},"var"),s(" result "),n("span",{class:"token operator"},"="),s(` count
        `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token operator"},"..<"),s("count "),n("span",{class:"token punctuation"},"{"),s(`
            result `),n("span",{class:"token operator"},"^="),s(` i
            result `),n("span",{class:"token operator"},"^="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` result
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Y=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Z=u(`<hr><h2 id="n-n-1-0-n-n-1-1" tabindex="-1"><a class="header-anchor" href="#n-n-1-0-n-n-1-1" aria-hidden="true">#</a> <code>n &amp; n-1 = 0</code> &amp; <code>n ^ n+1 = 1</code></h2><p>当 n 为 2 的幂次方时，会存在以下两条结论</p><ul><li>n 与 n-1 进行与操作结果为 0。</li><li>n 与 n+1 进行异或操作结果为 1</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token number">0</span> <span class="token operator">=</span> <span class="token number">0</span>b0000
<span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span>b0001
<span class="token number">2</span> <span class="token operator">=</span> <span class="token number">0</span>b0010
<span class="token number">3</span> <span class="token operator">=</span> <span class="token number">0</span>b0011
<span class="token number">4</span> <span class="token operator">=</span> <span class="token number">0</span>b0100
<span class="token number">5</span> <span class="token operator">=</span> <span class="token number">0</span>b0101
<span class="token number">6</span> <span class="token operator">=</span> <span class="token number">0</span>b0110
<span class="token number">7</span> <span class="token operator">=</span> <span class="token number">0</span>b0111
<span class="token number">8</span> <span class="token operator">=</span> <span class="token number">0</span>b1000
<span class="token number">9</span> <span class="token operator">=</span> <span class="token number">0</span>b1001
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),$={href:"https://leetcode.cn/problems/power-of-two",target:"_blank",rel:"noopener noreferrer"},nn=n("blockquote",null,[n("p",null,"判断一个整数是否为 2 的幂次方")],-1),sn={class:"hint-container details"},an=n("summary",null,"💡",-1),en=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),tn={href:"https://leetcode.cn/problems/power-of-four",target:"_blank",rel:"noopener noreferrer"},ln=n("blockquote",null,[n("p",null,"判断一个整数是否为 4 的幂次方")],-1),on=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1);function cn(rn,un){const o=r("ExternalLinkIcon"),i=r("CodeTabs");return d(),m("div",null,[c(" more "),b,n("ul",null,[n("li",null,[n("a",v,[s("位掩码"),l(o)])])]),h,c(" 黑板异或游戏 "),n("ul",null,[n("li",null,[n("a",_,[s("🔴 810 - 黑板异或游戏"),l(o)])])]),n("details",g,[f,w,l(i,{id:"95",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[j]),_:1})]),x,c(" 只出现一次的数字 "),n("ul",null,[n("li",null,[n("a",y,[s("🟢 136 - 只出现一次的数字"),l(o)]),A])]),n("details",I,[N,q,l(i,{id:"123",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[O]),_:1})]),c(" 只出现一次的数字 II "),n("ul",null,[n("li",null,[n("a",C,[s("🟠 137 - 只出现一次的数字 II"),l(o)]),S])]),n("details",V,[B,E,l(i,{id:"148",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[T]),_:1})]),c(" 只出现一次的数字 III "),n("ul",null,[n("li",null,[n("a",L,[s("🟠 260 - 只出现一次的数字 III"),l(o)]),z])]),n("details",G,[M,l(i,{id:"170",data:[{id:"java"},{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),title1:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[D]),tab1:a(({value:e,isActive:t})=>[F]),_:1})]),H,c(" 丢失的数字 "),n("ul",null,[n("li",null,[n("a",J,[s("🟢 268 - 丢失的数字"),l(o)]),K])]),n("details",P,[Q,R,U,l(i,{id:"211",data:[{id:"java 解法1"},{id:"swift 解法2"},{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java 解法1")]),title1:a(({value:e,isActive:t})=>[s("swift 解法2")]),title2:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[W]),tab1:a(({value:e,isActive:t})=>[X]),tab2:a(({value:e,isActive:t})=>[Y]),_:1})]),Z,n("ul",null,[n("li",null,[n("a",$,[s("🟢 231 - 2 的幂"),l(o)]),nn])]),n("details",sn,[an,l(i,{id:"265",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[en]),_:1})]),n("ul",null,[n("li",null,[n("a",tn,[s("🟢 342 - 4 的幂"),l(o)]),ln])]),on])}const mn=p(k,[["render",cn],["__file","0x00.bit.html.vue"]]);export{mn as default};
