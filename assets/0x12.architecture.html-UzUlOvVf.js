const e=JSON.parse('{"key":"v-213f66ac","path":"/interview/core/0x12.architecture.html","title":"architecture - “架构设计”","lang":"zh-CN","frontmatter":{"title":"architecture - “架构设计”","icon":"hashtag","index":true,"description":"设计模式 ❓设计模式的成员构成和工作机制是什么 💡 创建部分（Creational）：它涉及到类的实例化。它提供了一种在不指定具体类的情况下创建对象的方式。; 工厂方法：工厂方法设计模式通过在工厂接口中添加一个返回新对象的方法来实现。; 客户端可以调用这个方法获得一个新的对象，而不需要关心这个对象如何被创建或初始化。这对于需要创建多种类型的对象的情况...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/core/0x12.architecture.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"architecture - “架构设计”"}],["meta",{"property":"og:description","content":"设计模式 ❓设计模式的成员构成和工作机制是什么 💡 创建部分（Creational）：它涉及到类的实例化。它提供了一种在不指定具体类的情况下创建对象的方式。; 工厂方法：工厂方法设计模式通过在工厂接口中添加一个返回新对象的方法来实现。; 客户端可以调用这个方法获得一个新的对象，而不需要关心这个对象如何被创建或初始化。这对于需要创建多种类型的对象的情况..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-08T00:11:02.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-08T00:11:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"architecture - “架构设计”\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-08T00:11:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[{"level":3,"title":"❓设计模式的成员构成和工作机制是什么","slug":"❓设计模式的成员构成和工作机制是什么","link":"#❓设计模式的成员构成和工作机制是什么","children":[]},{"level":3,"title":"❓你最喜欢的设计模式","slug":"❓你最喜欢的设计模式","link":"#❓你最喜欢的设计模式","children":[]},{"level":3,"title":"❓设计模式的是为了解决什么问题","slug":"❓设计模式的是为了解决什么问题","link":"#❓设计模式的是为了解决什么问题","children":[]},{"level":3,"title":"❓设计模式的优缺点","slug":"❓设计模式的优缺点","link":"#❓设计模式的优缺点","children":[]},{"level":3,"title":"❓单例的弊端","slug":"❓单例的弊端","link":"#❓单例的弊端","children":[]}]},{"level":2,"title":"功能设计","slug":"功能设计","link":"#功能设计","children":[{"level":3,"title":"❓一个操作如果耗时 5s 后返回 nil，否则返回一个字符串，你怎么设计","slug":"❓一个操作如果耗时-5s-后返回-nil-否则返回一个字符串-你怎么设计","link":"#❓一个操作如果耗时-5s-后返回-nil-否则返回一个字符串-你怎么设计","children":[]},{"level":3,"title":"❓如何设计一个高效、线程安全的缓存","slug":"❓如何设计一个高效、线程安全的缓存","link":"#❓如何设计一个高效、线程安全的缓存","children":[]},{"level":3,"title":"❓如何设计一个网络库","slug":"❓如何设计一个网络库","link":"#❓如何设计一个网络库","children":[]},{"level":3,"title":"❓如何设计一个 git diff","slug":"❓如何设计一个-git-diff","link":"#❓如何设计一个-git-diff","children":[]},{"level":3,"title":"❓存一个通讯录，包括增删改查，用什么数据结构","slug":"❓存一个通讯录-包括增删改查-用什么数据结构","link":"#❓存一个通讯录-包括增删改查-用什么数据结构","children":[]},{"level":3,"title":"❓设计一个线程池，画出你的架构图","slug":"❓设计一个线程池-画出你的架构图","link":"#❓设计一个线程池-画出你的架构图","children":[]}]},{"level":2,"title":"接口设计","slug":"接口设计","link":"#接口设计","children":[{"level":3,"title":"❓RESTful 架构","slug":"❓restful-架构","link":"#❓restful-架构","children":[]},{"level":3,"title":"❓接口幂等如何解决","slug":"❓接口幂等如何解决","link":"#❓接口幂等如何解决","children":[]}]},{"level":2,"title":"系统设计","slug":"系统设计","link":"#系统设计","children":[{"level":3,"title":"❓如何设计一个高可用的系统，","slug":"❓如何设计一个高可用的系统","link":"#❓如何设计一个高可用的系统","children":[]},{"level":3,"title":"❓介绍一下限流算法","slug":"❓介绍一下限流算法","link":"#❓介绍一下限流算法","children":[]},{"level":3,"title":"❓密码哈希处理，如果暴力破解怎么办","slug":"❓密码哈希处理-如果暴力破解怎么办","link":"#❓密码哈希处理-如果暴力破解怎么办","children":[]}]},{"level":2,"title":"持续集成","slug":"持续集成","link":"#持续集成","children":[{"level":3,"title":"❓持续集成方案","slug":"❓持续集成方案","link":"#❓持续集成方案","children":[]},{"level":3,"title":"❓Git 工作流","slug":"❓git-工作流","link":"#❓git-工作流","children":[]}]}],"git":{"createdTime":1704610269000,"updatedTime":1709856662000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":5}]},"readingTime":{"minutes":25.06,"words":7517},"filePathRelative":"interview/core/0x12.architecture.md","localizedDate":"2024年1月7日","autoDesc":true}');export{e as data};
