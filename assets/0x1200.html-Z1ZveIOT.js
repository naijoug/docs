import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as c,c as _,a as h,b as e,e as n,d as t,w as a,f as u}from"./app-OU05m4gP.js";const p={},m=e("h2",{id:"_1200",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1200","aria-hidden":"true"},"#"),n(" 1200")],-1),f=e("p",null,"// #region 1200",-1),b={href:"https://leetcode.cn/problems/minimum-absolute-difference",target:"_blank",rel:"noopener noreferrer"},g=u(`<details class="hint-container details"><summary>💡</summary></details><p>// #endregion 1200</p><h2 id="_1201" tabindex="-1"><a class="header-anchor" href="#_1201" aria-hidden="true">#</a> 1201</h2><p>// #region 1201</p><ul><li><p>[🟠 1201 - 丑数 III(https://leetcode.cn/problems/ugly-number-iii)</p><blockquote><p>给你四个整数：n 、a 、b 、c ，请你设计一个算法来找出第 n 个丑数。 丑数是可以被 a 或 b 或 c 整除的 正整数 。</p></blockquote><pre><code>  🌰
      输入：n = 3, a = 2, b = 3, c = 5
      输出：4
      解释：丑数序列为 2, 3, 4, 5, 6, 8, 9, 10... 其中第 3 个是 4。
  🌰
      输入：n = 5, a = 2, b = 11, c = 13
      输出：10
      解释：丑数序列为 2, 4, 6, 8, 10, 11, 12, 13... 其中第 5 个是 10。
  🌰
      输入：n = 1000000000, a = 2, b = 217983653, c = 336916467
      输出：1999999984
</code></pre></li></ul>`,5),v={class:"hint-container details"},x=e("summary",null,"💡",-1),k=e("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[e("pre",{class:"language-swift"},[e("code",null,`
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),w=e("p",null,"// #endregion 1237",-1),y=e("h2",{id:"_1237",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1237","aria-hidden":"true"},"#"),n(" 1237")],-1),C=e("p",null,"// #region 1237",-1),I={href:"https://leetcode.cn/problems/find-positive-integer-solution-for-a-given-equation/",target:"_blank",rel:"noopener noreferrer"},N=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),V=e("p",null,"// #endregion 1237",-1),q=e("h2",{id:"_1254",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1254","aria-hidden":"true"},"#"),n(" 1254")],-1),B=e("p",null,"// #region 1254",-1),E={href:"https://leetcode.cn/problems/number-of-closed-islands",target:"_blank",rel:"noopener noreferrer"},T=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),A=e("p",null,"// #endregion 1254",-1),L=e("h2",{id:"_1288",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1288","aria-hidden":"true"},"#"),n(" 1288")],-1),S=e("p",null,"// #region 1288",-1),j={href:"https://leetcode.cn/problems/remove-covered-intervals",target:"_blank",rel:"noopener noreferrer"},z=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),D=e("p",null,"// #endregion 1288",-1);function F(G,H){const o=s("ExternalLinkIcon"),i=s("CodeTabs");return c(),_("div",null,[h(" more "),m,f,e("ul",null,[e("li",null,[e("a",b,[n("🟢 1200 - 最小绝对差"),t(o)])])]),g,e("details",v,[x,t(i,{id:"39",data:[{id:"swift"}]},{title0:a(({value:l,isActive:r})=>[n("swift")]),tab0:a(({value:l,isActive:r})=>[k]),_:1})]),w,y,C,e("ul",null,[e("li",null,[e("a",I,[n("🟠 1237 - 找出给定方程的正整数"),t(o)])])]),N,V,q,B,e("ul",null,[e("li",null,[e("a",E,[n("🟠 1254 - 统计封闭岛屿的数目"),t(o)])])]),T,A,L,S,e("ul",null,[e("li",null,[e("a",j,[n("🟠 1288 - 删除被覆盖区间"),t(o)])])]),z,D])}const M=d(p,[["render",F],["__file","0x1200.html.vue"]]);export{M as default};
