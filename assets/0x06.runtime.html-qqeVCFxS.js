const l=JSON.parse('{"key":"v-3c1e65f8","path":"/interview/ios/0x06.runtime.html","title":"Runtime","lang":"zh-CN","frontmatter":{"title":"Runtime","icon":"hashtag","index":true,"description":"运行时 对象模型 ❓OC 的对象模型 💡 Objective-C 类图 objc-class-diagram ❓isa 是什么 💡 isa： OC 对象的一个指针，它是每个 OC 对象的第一个成员变量，用于指向该对象的类对象。 Objective-C 的对象模型中，对象分为实例对象、类对象、元类、根元类对象。 实例对象: 实例对象的 isa 指向它...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/0x06.runtime.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Runtime"}],["meta",{"property":"og:description","content":"运行时 对象模型 ❓OC 的对象模型 💡 Objective-C 类图 objc-class-diagram ❓isa 是什么 💡 isa： OC 对象的一个指针，它是每个 OC 对象的第一个成员变量，用于指向该对象的类对象。 Objective-C 的对象模型中，对象分为实例对象、类对象、元类、根元类对象。 实例对象: 实例对象的 isa 指向它..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T00:35:43.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-01T00:35:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Runtime\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T00:35:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"对象模型","slug":"对象模型","link":"#对象模型","children":[{"level":3,"title":"❓OC 的对象模型","slug":"❓oc-的对象模型","link":"#❓oc-的对象模型","children":[]},{"level":3,"title":"❓isa 是什么","slug":"❓isa-是什么","link":"#❓isa-是什么","children":[]},{"level":3,"title":"❓类结构体的组成 isa 指针指向了什么","slug":"❓类结构体的组成-isa-指针指向了什么","link":"#❓类结构体的组成-isa-指针指向了什么","children":[]},{"level":3,"title":"❓isa 指针里面都存了什么，32和64位分别讲一下","slug":"❓isa-指针里面都存了什么-32和64位分别讲一下","link":"#❓isa-指针里面都存了什么-32和64位分别讲一下","children":[]},{"level":3,"title":"❓讲一下实例对象，类对象，元类对象，根元类对象的组成以及关联","slug":"❓讲一下实例对象-类对象-元类对象-根元类对象的组成以及关联","link":"#❓讲一下实例对象-类对象-元类对象-根元类对象的组成以及关联","children":[]},{"level":3,"title":"❓为什么要设计 metaclass","slug":"❓为什么要设计-metaclass","link":"#❓为什么要设计-metaclass","children":[]},{"level":3,"title":"❓supperclass 了解吗？","slug":"❓supperclass-了解吗","link":"#❓supperclass-了解吗","children":[]},{"level":3,"title":"❓super 是什么","slug":"❓super-是什么","link":"#❓super-是什么","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":"❓为什么对象方法没有保存的对象结构体里，而是保存在类对象的结构体里","slug":"❓为什么对象方法没有保存的对象结构体里-而是保存在类对象的结构体里","link":"#❓为什么对象方法没有保存的对象结构体里-而是保存在类对象的结构体里","children":[]},{"level":3,"title":"❓class_copyIvarList vs class_copyPropertyList","slug":"❓class-copyivarlist-vs-class-copypropertylist","link":"#❓class-copyivarlist-vs-class-copypropertylist","children":[]},{"level":3,"title":"❓class_ro_t vs class_rw_t","slug":"❓class-ro-t-vs-class-rw-t","link":"#❓class-ro-t-vs-class-rw-t","children":[]},{"level":3,"title":"❓能否向编译后得到的类中增加实例变量","slug":"❓能否向编译后得到的类中增加实例变量","link":"#❓能否向编译后得到的类中增加实例变量","children":[]},{"level":3,"title":"❓能否向运行时创建的类中添加实例变量","slug":"❓能否向运行时创建的类中添加实例变量","link":"#❓能否向运行时创建的类中添加实例变量","children":[]},{"level":3,"title":"❓在运行时创建类的方法 objc_allocateClassPair 的方法名尾部为什么是 Pair(成对)","slug":"❓在运行时创建类的方法-objc-allocateclasspair-的方法名尾部为什么是-pair-成对","link":"#❓在运行时创建类的方法-objc-allocateclasspair-的方法名尾部为什么是-pair-成对","children":[]}]},{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[{"level":3,"title":"❓分类的结构体里面有哪些成员","slug":"❓分类的结构体里面有哪些成员","link":"#❓分类的结构体里面有哪些成员","children":[]},{"level":3,"title":"❓分类中如何添加属性","slug":"❓分类中如何添加属性","link":"#❓分类中如何添加属性","children":[]}]},{"level":2,"title":"关联对象","slug":"关联对象","link":"#关联对象","children":[{"level":3,"title":"❓关联对象如何进行内存管理","slug":"❓关联对象如何进行内存管理","link":"#❓关联对象如何进行内存管理","children":[]},{"level":3,"title":"❓关联对象如何实现 weak 策略","slug":"❓关联对象如何实现-weak-策略","link":"#❓关联对象如何实现-weak-策略","children":[]},{"level":3,"title":"❓关联对象的底层实现","slug":"❓关联对象的底层实现","link":"#❓关联对象的底层实现","children":[]},{"level":3,"title":"❓关联对象需要在主对象 dealloc 的时候手动释放吗","slug":"❓关联对象需要在主对象-dealloc-的时候手动释放吗","link":"#❓关联对象需要在主对象-dealloc-的时候手动释放吗","children":[]},{"level":3,"title":"❓关联对象有什么实际应用","slug":"❓关联对象有什么实际应用","link":"#❓关联对象有什么实际应用","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"❓OC 底层方法列表的数据结构是什么","slug":"❓oc-底层方法列表的数据结构是什么","link":"#❓oc-底层方法列表的数据结构是什么","children":[]},{"level":3,"title":"❓method_t 里包含什么","slug":"❓method-t-里包含什么","link":"#❓method-t-里包含什么","children":[]},{"level":3,"title":"❓对象方法 与 类方法存放在哪","slug":"❓对象方法-与-类方法存放在哪","link":"#❓对象方法-与-类方法存放在哪","children":[]},{"level":3,"title":"❓class、objc_getClass、object_getClass 三个方法的区别","slug":"❓class、objc-getclass、object-getclass-三个方法的区别","link":"#❓class、objc-getclass、object-getclass-三个方法的区别","children":[]}]},{"level":2,"title":"Method Swizzling","slug":"method-swizzling","link":"#method-swizzling","children":[{"level":3,"title":"❓Method Swizzling 原理","slug":"❓method-swizzling-原理","link":"#❓method-swizzling-原理","children":[]},{"level":3,"title":"❓Method Swizzling 时，不替换父类，只替换子类，怎么处理","slug":"❓method-swizzling-时-不替换父类-只替换子类-怎么处理","link":"#❓method-swizzling-时-不替换父类-只替换子类-怎么处理","children":[]},{"level":3,"title":"❓Method Swizzling 的优缺点，缺点会导致什么问题","slug":"❓method-swizzling-的优缺点-缺点会导致什么问题","link":"#❓method-swizzling-的优缺点-缺点会导致什么问题","children":[]},{"level":3,"title":"❓如何安全的进行方法替换","slug":"❓如何安全的进行方法替换","link":"#❓如何安全的进行方法替换","children":[]},{"level":3,"title":"❓方法交换和分类同时去 hook 一个方法，结果会怎么样，具体交换的是什么，交换时是如何处理传参数","slug":"❓方法交换和分类同时去-hook-一个方法-结果会怎么样-具体交换的是什么-交换时是如何处理传参数","link":"#❓方法交换和分类同时去-hook-一个方法-结果会怎么样-具体交换的是什么-交换时是如何处理传参数","children":[]}]},{"level":2,"title":"其它知识点","slug":"其它知识点","link":"#其它知识点","children":[{"level":3,"title":"❓runtime 中的 SideTables 了解吗","slug":"❓runtime-中的-sidetables-了解吗","link":"#❓runtime-中的-sidetables-了解吗","children":[]},{"level":3,"title":"❓runtime 中的 fastpath、slowpath 是什么","slug":"❓runtime-中的-fastpath、slowpath-是什么","link":"#❓runtime-中的-fastpath、slowpath-是什么","children":[]},{"level":3,"title":"❓OC 运行时在工程中的有过实践运用吗","slug":"❓oc-运行时在工程中的有过实践运用吗","link":"#❓oc-运行时在工程中的有过实践运用吗","children":[]}]}],"git":{"createdTime":1704610269000,"updatedTime":1709253343000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":4}]},"readingTime":{"minutes":29.01,"words":8702},"filePathRelative":"interview/ios/0x06.runtime.md","localizedDate":"2024年1月7日","autoDesc":true}');export{l as data};
