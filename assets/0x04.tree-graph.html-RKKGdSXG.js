const e=JSON.parse('{"key":"v-34b9936e","path":"/leetcode/books/cracking-the-coding-interview/0x04.tree-graph.html","title":"树 & 图","lang":"zh-CN","frontmatter":{"title":"树 & 图","icon":"hashtag","index":true,"description":"04 树 & 图 (12) 4.1 节点间通路 给定有向图，设计一个算法，找出两个节点之间是否存在一条路径。 4.2 最小高度树 给定一个有序整数数组，元素各不相同且按升序排列，编写一个算法，创建一棵高度最小的二叉搜索树。 4.3 特定深度节点链表 给定一棵二叉树，设计一个算法，创建含有某一深度上所有节点的链表（比如，若一棵树的深度为D，则会创建出D个...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/leetcode/books/cracking-the-coding-interview/0x04.tree-graph.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"树 & 图"}],["meta",{"property":"og:description","content":"04 树 & 图 (12) 4.1 节点间通路 给定有向图，设计一个算法，找出两个节点之间是否存在一条路径。 4.2 最小高度树 给定一个有序整数数组，元素各不相同且按升序排列，编写一个算法，创建一棵高度最小的二叉搜索树。 4.3 特定深度节点链表 给定一棵二叉树，设计一个算法，创建含有某一深度上所有节点的链表（比如，若一棵树的深度为D，则会创建出D个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T04:36:23.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-01-24T04:36:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树 & 图\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-24T04:36:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"4.1 节点间通路","slug":"_4-1-节点间通路","link":"#_4-1-节点间通路","children":[]},{"level":2,"title":"4.2 最小高度树","slug":"_4-2-最小高度树","link":"#_4-2-最小高度树","children":[]},{"level":2,"title":"4.3 特定深度节点链表","slug":"_4-3-特定深度节点链表","link":"#_4-3-特定深度节点链表","children":[]},{"level":2,"title":"4.4 检查平衡性","slug":"_4-4-检查平衡性","link":"#_4-4-检查平衡性","children":[]},{"level":2,"title":"4.5 合法二叉搜索树","slug":"_4-5-合法二叉搜索树","link":"#_4-5-合法二叉搜索树","children":[]},{"level":2,"title":"4.6 后继者","slug":"_4-6-后继者","link":"#_4-6-后继者","children":[]},{"level":2,"title":"4.7 编译顺序","slug":"_4-7-编译顺序","link":"#_4-7-编译顺序","children":[]},{"level":2,"title":"4.8 首个共同祖先","slug":"_4-8-首个共同祖先","link":"#_4-8-首个共同祖先","children":[]},{"level":2,"title":"4.9 二叉搜索树序列","slug":"_4-9-二叉搜索树序列","link":"#_4-9-二叉搜索树序列","children":[]},{"level":2,"title":"4.10 检查子树","slug":"_4-10-检查子树","link":"#_4-10-检查子树","children":[]},{"level":2,"title":"4.11 随机节点","slug":"_4-11-随机节点","link":"#_4-11-随机节点","children":[]},{"level":2,"title":"4.12 求和路径","slug":"_4-12-求和路径","link":"#_4-12-求和路径","children":[]}],"git":{"createdTime":1706070983000,"updatedTime":1706070983000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":1}]},"readingTime":{"minutes":2.99,"words":897},"filePathRelative":"leetcode/books/cracking-the-coding-interview/0x04.tree-graph.md","localizedDate":"2024年1月24日","autoDesc":true}');export{e as data};
