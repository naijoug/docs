import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as u,c as p,a as d,b as n,e as s,d as e,w as l}from"./app-Gy2q6lTd.js";const _={},h=n("h2",{id:"_0600",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0600","aria-hidden":"true"},"#"),s(" 0600")],-1),k=n("p",null,"// #region 0600",-1),m={href:"https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},b=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),v=n("p",null,"// #endregion 0600",-1),f=n("h2",{id:"_0637",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0637","aria-hidden":"true"},"#"),s(" 0637")],-1),g=n("p",null,"// #region 0637",-1),y={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},w=n("pre",null,[n("code",null,`  🌰
      输入：root = [3,9,20,null,null,15,7]
      输出：[3, 14.5, 11]
          3
         / \\
        9  20
           / \\
          15  7 
`)],-1),x={class:"hint-container details"},N=n("summary",null,"💡",-1),T=n("p",null,"【思路】按照层序遍历思路，计算每一层的平均值进行返回",-1),q=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for a binary tree node.
 * public class TreeNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
 *     TreeNode(int val) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; "),n("span",{class:"token punctuation"},"}"),s(`
 *     TreeNode(int val, TreeNode left, TreeNode right) `),n("span",{class:"token punctuation"},"{"),s(`
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     `),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"averageOfLevels"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),s(" root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},">")]),s(" queue "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        queue`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isEmpty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" count "),n("span",{class:"token operator"},"="),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" levelCount "),n("span",{class:"token operator"},"="),s(" count"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"double"),s(" levelSum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("count "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token class-name"},"TreeNode"),s(" node "),n("span",{class:"token operator"},"="),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeFirst"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                levelSum `),n("span",{class:"token operator"},"+="),s(" node"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                count `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("levelSum"),n("span",{class:"token operator"},"/"),s("levelCount"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("p",null,"// #endregion 0637",-1),C=n("h2",{id:"_0645",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0645","aria-hidden":"true"},"#"),s(" 0645")],-1),j=n("p",null,"// #region 0645",-1),E={href:"https://leetcode.cn/problems/set-mismatch",target:"_blank",rel:"noopener noreferrer"},I=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),S=n("p",null,"// #endregion 0645",-1),V=n("h2",{id:"_0648",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0648","aria-hidden":"true"},"#"),s(" 0648")],-1),B=n("p",null,"// #region 0648",-1),D={href:"https://leetcode.cn/problems/replace-words",target:"_blank",rel:"noopener noreferrer"},A=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),z=n("p",null,"// #endregion 0648",-1),F=n("h2",{id:"_0651",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0651","aria-hidden":"true"},"#"),s(" 0651")],-1),O=n("p",null,"// #region 0651",-1),G={href:"https://leetcode.cn/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},H=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),J=n("p",null,"// #endregion 0651",-1),K=n("h2",{id:"_0652",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0652","aria-hidden":"true"},"#"),s(" 0652")],-1),M=n("p",null,"// #region 0652",-1),P={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},Q=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),R=n("p",null,"// #endregion 0652",-1),U=n("h2",{id:"_0654",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0654","aria-hidden":"true"},"#"),s(" 0654")],-1),W=n("p",null,"// #region 0654",-1),X={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},Y=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Z=n("p",null,"// #endregion 0654",-1),$=n("h2",{id:"_0659",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0659","aria-hidden":"true"},"#"),s(" 0659")],-1),nn=n("p",null,"// #region 0659",-1),sn={href:"https://leetcode.cn/problems/split-array-into-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},en=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),an=n("p",null,"// #endregion 0659",-1),tn=n("h2",{id:"_0677",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0677","aria-hidden":"true"},"#"),s(" 0677")],-1),on=n("p",null,"// #region 0677",-1),ln={href:"https://leetcode.cn/problems/map-sum-pairs",target:"_blank",rel:"noopener noreferrer"},cn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),rn=n("p",null,"// #endregion 0677",-1),un=n("h2",{id:"_0680-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0680-✅","aria-hidden":"true"},"#"),s(" 0680 ✅")],-1),pn=n("p",null,"// #region 0680",-1),dn={href:"https://leetcode.cn/problems/valid-palindrome-ii",target:"_blank",rel:"noopener noreferrer"},_n=n("blockquote",null,[n("p",null,"给定一个字符串，判断改字符(在最多可以删除一个字符的情况下)是否可以成为回文串。")],-1),hn={class:"hint-container details"},kn=n("summary",null,"💡",-1),mn=n("p",null,"// #endregion 0680",-1),bn=n("h2",{id:"_0694",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0694","aria-hidden":"true"},"#"),s(" 0694")],-1),vn=n("p",null,"// #region 0694",-1),fn={href:"https://leetcode.cn/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},gn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),yn=n("p",null,"// #endregion 0694",-1),wn=n("h2",{id:"_0695",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0695","aria-hidden":"true"},"#"),s(" 0695")],-1),xn=n("p",null,"// #region 0695",-1),Nn={href:"https://leetcode.cn/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Tn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),qn=n("p",null,"// #endregion 0695",-1),Ln=n("h2",{id:"_0698",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0698","aria-hidden":"true"},"#"),s(" 0698")],-1),Cn=n("p",null,"// #region 0698",-1),jn={href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},En=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),In=n("p",null,"// #endregion 0698",-1);function Sn(Vn,Bn){const a=o("ExternalLinkIcon"),t=o("CodeTabs");return u(),p("div",null,[d(" more "),h,k,n("ul",null,[n("li",null,[n("a",m,[s("🔴 600 - 不含连续1的非负整数"),e(a)])])]),b,v,f,g,n("ul",null,[n("li",null,[n("p",null,[n("a",y,[s("🟢 637 - 二叉树的层平均值"),e(a)])]),w])]),n("details",x,[N,T,e(t,{id:"37",data:[{id:"java"}]},{title0:l(({value:c,isActive:i})=>[s("java")]),tab0:l(({value:c,isActive:i})=>[q]),_:1})]),L,C,j,n("ul",null,[n("li",null,[n("a",E,[s("🟢 645 - 错误的集合"),e(a)])])]),I,S,V,B,n("ul",null,[n("li",null,[n("a",D,[s("🟠 648 - 单词替换"),e(a)])])]),A,z,F,O,n("ul",null,[n("li",null,[n("a",G,[s("🟠 651 - 4键键盘"),e(a)])])]),H,J,K,M,n("ul",null,[n("li",null,[n("a",P,[s("🟠 652 - 寻找重复的子树"),e(a)])])]),Q,R,U,W,n("ul",null,[n("li",null,[n("a",X,[s("🟠 654 - 最大二叉树"),e(a)])])]),Y,Z,$,nn,n("ul",null,[n("li",null,[n("a",sn,[s("🟠 659 - 分割数组为连续子序列"),e(a)])])]),en,an,tn,on,n("ul",null,[n("li",null,[n("a",ln,[s("🟠 677 - 键值映射"),e(a)])])]),cn,rn,un,pn,n("ul",null,[n("li",null,[n("a",dn,[s("🟢 680 - 验证回文串 II"),e(a)]),_n])]),n("details",hn,[kn,e(t,{id:"191",data:[]})]),mn,bn,vn,n("ul",null,[n("li",null,[n("a",fn,[s("🟠 694 - 不同岛屿的数量"),e(a)])])]),gn,yn,wn,xn,n("ul",null,[n("li",null,[n("a",Nn,[s("🟠 695 - 岛屿的最大面积"),e(a)])])]),Tn,qn,Ln,Cn,n("ul",null,[n("li",null,[n("a",jn,[s("🟠 698 - 划分为k个相等的子集"),e(a)])])]),En,In])}const zn=r(_,[["render",Sn],["__file","0x0600.html.vue"]]);export{zn as default};
