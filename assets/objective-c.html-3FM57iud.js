const e=JSON.parse('{"key":"v-436f6033","path":"/interview/ios/objective-c.html","title":"Objective-C","lang":"zh-CN","frontmatter":{"title":"Objective-C","icon":"hashtag","index":true,"order":1,"description":"OC 设计理念 OC 底层是使用 C/C++ 实现。定一个继承 NSObject 的类，这个类底层使用 C 语言中的 struct 结构体来实现的。 ❓OC 的动态性 💡 首先理解两个“动态语言与静态语言” OC 的 runtime 文档中介绍中就详细写明了，runtime 的设计是为了将 OC 中的更多的处理延迟到编译后。 动态类型 (Dynami...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/objective-c.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Objective-C"}],["meta",{"property":"og:description","content":"OC 设计理念 OC 底层是使用 C/C++ 实现。定一个继承 NSObject 的类，这个类底层使用 C 语言中的 struct 结构体来实现的。 ❓OC 的动态性 💡 首先理解两个“动态语言与静态语言” OC 的 runtime 文档中介绍中就详细写明了，runtime 的设计是为了将 OC 中的更多的处理延迟到编译后。 动态类型 (Dynami..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-13T03:52:26.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2023-12-13T03:52:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Objective-C\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-13T03:52:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"OC 设计理念","slug":"oc-设计理念","link":"#oc-设计理念","children":[{"level":3,"title":"❓OC 的动态性","slug":"❓oc-的动态性","link":"#❓oc-的动态性","children":[]},{"level":3,"title":"❓类结构体的组成，isa 指针指向了什么？","slug":"❓类结构体的组成-isa-指针指向了什么","link":"#❓类结构体的组成-isa-指针指向了什么","children":[]},{"level":3,"title":"❓OC 底层方法列表的数据结构是什么？","slug":"❓oc-底层方法列表的数据结构是什么","link":"#❓oc-底层方法列表的数据结构是什么","children":[]},{"level":3,"title":"❓id、nil、NULL 区别","slug":"❓id、nil、null-区别","link":"#❓id、nil、null-区别","children":[]},{"level":3,"title":"❓+load 与 +initialize 区别","slug":"❓-load-与-initialize-区别","link":"#❓-load-与-initialize-区别","children":[]},{"level":3,"title":"❓@Property 本质是什么？","slug":"❓-property-本质是什么","link":"#❓-property-本质是什么","children":[]},{"level":3,"title":"❓OC 中的三种字符串？","slug":"❓oc-中的三种字符串","link":"#❓oc-中的三种字符串","children":[]},{"level":3,"title":"❓NSDictionary 大致实现原理","slug":"❓nsdictionary-大致实现原理","link":"#❓nsdictionary-大致实现原理","children":[]}]},{"level":2,"title":"block","slug":"block","link":"#block","children":[{"level":3,"title":"❓block 与 函数指针","slug":"❓block-与-函数指针","link":"#❓block-与-函数指针","children":[]},{"level":3,"title":"❓block 底层实现？","slug":"❓block-底层实现","link":"#❓block-底层实现","children":[]}]},{"level":2,"title":"Category","slug":"category","link":"#category","children":[{"level":3,"title":"❓如果分类中添加与类相同的方法签名会发生什么？","slug":"❓如果分类中添加与类相同的方法签名会发生什么","link":"#❓如果分类中添加与类相同的方法签名会发生什么","children":[]},{"level":3,"title":"❓分类是如何实现的？它为什么会覆盖掉原来的方法？","slug":"❓分类是如何实现的-它为什么会覆盖掉原来的方法","link":"#❓分类是如何实现的-它为什么会覆盖掉原来的方法","children":[]},{"level":3,"title":"❓分类中如何添加属性？","slug":"❓分类中如何添加属性","link":"#❓分类中如何添加属性","children":[]}]},{"level":2,"title":"runtime","slug":"runtime","link":"#runtime","children":[{"level":3,"title":"❓runtime 如何通过 selector 找到对应的 IMP 地址","slug":"❓runtime-如何通过-selector-找到对应的-imp-地址","link":"#❓runtime-如何通过-selector-找到对应的-imp-地址","children":[]},{"level":3,"title":"❓super 是什么？","slug":"❓super-是什么","link":"#❓super-是什么","children":[]},{"level":3,"title":"isa, 消息转发, 弱引用表","slug":"isa-消息转发-弱引用表","link":"#isa-消息转发-弱引用表","children":[]}]},{"level":2,"title":"RunLoop","slug":"runloop","link":"#runloop","children":[{"level":3,"title":"❓RunLoop 有几种事件源？有几种模式？","slug":"❓runloop-有几种事件源-有几种模式","link":"#❓runloop-有几种事件源-有几种模式","children":[]},{"level":3,"title":"❓Runloop 内部实现逻辑？","slug":"❓runloop-内部实现逻辑","link":"#❓runloop-内部实现逻辑","children":[]}]}],"git":{"createdTime":1702384983000,"updatedTime":1702439546000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":2}]},"readingTime":{"minutes":11.31,"words":3392},"filePathRelative":"interview/ios/objective-c.md","localizedDate":"2023年12月12日","autoDesc":true}');export{e as data};
