import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as r,c as s,b as e,e as n,d as a,f as l}from"./app-_jE41G-y.js";const d={},i=l(`<h2 id="是个啥" tabindex="-1"><a class="header-anchor" href="#是个啥" aria-hidden="true">#</a> 是个啥？</h2><p>是 <code>iOS</code> 中一种管理线程执行流程的机制。</p><h2 id="能干啥" tabindex="-1"><a class="header-anchor" href="#能干啥" aria-hidden="true">#</a> 能干啥？</h2><blockquote><p>线程保活</p></blockquote><blockquote><p>性能检测</p></blockquote><p>通过监听主 <code>RunLoop</code> 各个 <code>Activity</code> 状态变化，通过观察每种状态变化时间点来确认性能问题。通过计算进入和退出每次 <code>RunLoop</code> 的时间差，来确认是否超过了屏幕刷新阈值(60FP = 1/60s = 16.7ms)，如果超过这个值可以知晓每次 <code>UI</code> 刷新低于 <code>60FP</code> 存在卡顿情况。</p><h2 id="底层实现" tabindex="-1"><a class="header-anchor" href="#底层实现" aria-hidden="true">#</a> 底层实现</h2><blockquote><p>runloop 的定义</p></blockquote><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),u={href:"https://github.com/apple/swift-corelibs-foundation/blob/main/Sources/Foundation/RunLoop.swift",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/gnustep/libs-base/blob/master/Source/NSRunLoop.m",target:"_blank",rel:"noopener noreferrer"},h=e("div",{class:"language-objc line-numbers-mode","data-ext":"objc"},[e("pre",{class:"language-objc"},[e("code",null,`
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1);function b(m,_){const o=c("ExternalLinkIcon");return r(),s("div",null,[i,e("blockquote",null,[e("p",null,[e("a",u,[n("Swift - RunLoop"),a(o)])])]),e("blockquote",null,[e("p",null,[e("a",p,[n("GUNStep 中的实现"),a(o)])])]),h])}const g=t(d,[["render",b],["__file","runloop.html.vue"]]);export{g as default};
