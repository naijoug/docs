import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c as p,a as c,b as n,e as s,d as l,f as i}from"./app-KOLbvikU.js";const r={},k=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" reference")],-1),u={href:"http://www.runoob.com/sqlite/sqlite-tutorial.html",target:"_blank",rel:"noopener noreferrer"},d=i(`<h2 id="sqlite" tabindex="-1"><a class="header-anchor" href="#sqlite" aria-hidden="true">#</a> SQLite</h2><ul><li><p>SQLite数据存储类型：</p><ul><li><code>integer</code> : 整型值</li><li><code>real</code> : 浮点值</li><li><code>text</code> : 文本字符串</li><li><code>blob</code> : 二进制数据（比如文件）</li></ul></li><li><p>注 : 实际上<code>SQLite</code>是无类型的，就算声明为<code>integer</code>类型，还是能存储字符串文本（主键除外），建表时声明啥类型或者不声明类型都可以。</p></li></ul><h2 id="c-函数接口" tabindex="-1"><a class="header-anchor" href="#c-函数接口" aria-hidden="true">#</a> C 函数接口</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 打开数据库</span>
<span class="token keyword">int</span> <span class="token function">sqlite3_open</span><span class="token punctuation">(</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>filename<span class="token punctuation">,</span>   <span class="token comment">// 数据库的文件路径</span>
    sqlite3 <span class="token operator">*</span><span class="token operator">*</span>ppDb          <span class="token comment">// 数据库实例</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 执行 SQL 语句</span>
<span class="token keyword">int</span> <span class="token function">sqlite3_exec</span><span class="token punctuation">(</span>
    sqlite3<span class="token operator">*</span><span class="token punctuation">,</span>                                   <span class="token comment">// 一个打开的数据库实例</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>sql<span class="token punctuation">,</span>                            <span class="token comment">// 需要执行的SQL语句</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>callback<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// SQL语句执行完毕后的回调</span>
    <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span>                                     <span class="token comment">// 回调函数的第1个参数</span>
    <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>errmsg                               <span class="token comment">// 错误信息</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 检查 SQL 语句的合法性（查询前的准备）</span>
<span class="token keyword">int</span> <span class="token function">sqlite3_prepare_v2</span><span class="token punctuation">(</span>
    sqlite3 <span class="token operator">*</span>db<span class="token punctuation">,</span>            <span class="token comment">// 数据库实例</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>zSql<span class="token punctuation">,</span>       <span class="token comment">// 需要检查的SQL语句</span>
    <span class="token keyword">int</span> nByte<span class="token punctuation">,</span>              <span class="token comment">// SQL语句的最大字节长度</span>
    sqlite3_stmt <span class="token operator">*</span><span class="token operator">*</span>ppStmt<span class="token punctuation">,</span>  <span class="token comment">// sqlite3_stmt实例，用来获得数据库数据</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>pzTail
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询一行数据</span>
<span class="token keyword">int</span> <span class="token function">sqlite3_step</span><span class="token punctuation">(</span>sqlite3_stmt<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果查询到一行数据，就会返回SQLITE_ROW</span>

<span class="token comment">// 利用 stmt 获得某一字段的值（从下标 0 开始)</span>
<span class="token keyword">int</span> <span class="token function">sqlite3_column_int</span><span class="token punctuation">(</span>sqlite3_stmt<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> iCol<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 整型数据</span>
sqlite3_int64 <span class="token function">sqlite3_column_int64</span><span class="token punctuation">(</span>sqlite3_stmt<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> iCol<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 长整型数据</span>
<span class="token keyword">double</span> <span class="token function">sqlite3_column_double</span><span class="token punctuation">(</span>sqlite3_stmt<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> iCol<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// 浮点数据</span>
<span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">sqlite3_column_blob</span><span class="token punctuation">(</span>sqlite3_stmt<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> iCol<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 二进制文本数据</span>
<span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">sqlite3_column_text</span><span class="token punctuation">(</span>sqlite3_stmt<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> iCol<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 字符串数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function m(v,b){const a=t("ExternalLinkIcon");return o(),p("div",null,[c(" more "),k,n("ul",null,[n("li",null,[n("a",u,[s("菜鸟教程 - SQLite"),l(a)])])]),d])}const w=e(r,[["render",m],["__file","sqlite.html.vue"]]);export{w as default};
