import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as a,c as l,a as i,b as e,e as t,d as o}from"./app-y-ZZp_0I.js";const c={},_=e("h2",{id:"_1300",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1300","aria-hidden":"true"},"#"),t(" 1300")],-1),d=e("p",null,"// #region 1300",-1),h={href:"https://leetcode.cn/problems/sum-of-mutated-array-closest-to-target",target:"_blank",rel:"noopener noreferrer"},m=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),u=e("p",null,"// #endregion 1300",-1),p=e("h2",{id:"_1312",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1312","aria-hidden":"true"},"#"),t(" 1312")],-1),f=e("p",null,"// #region 1312",-1),x={href:"https://leetcode.cn/problems/minimum-insertion-steps-to-make-a-string-palindrome",target:"_blank",rel:"noopener noreferrer"},g=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),b=e("p",null,"// #endregion 1312",-1);function k(N,V){const n=s("ExternalLinkIcon");return a(),l("div",null,[i(" more "),_,d,e("ul",null,[e("li",null,[e("a",h,[t("🟠 1300 - 转变数组后最接近目标值的数组和"),o(n)])])]),m,u,p,f,e("ul",null,[e("li",null,[e("a",x,[t("🔴 1312 - 让字符串成为回文串的最少插入次数"),o(n)])])]),g,b])}const B=r(c,[["render",k],["__file","0x1300.html.vue"]]);export{B as default};
