const t=JSON.parse('{"key":"v-29467b5f","path":"/leetcode/books/cracking-the-coding-interview/tip/data-structure.html","title":"数据结构","lang":"zh-CN","frontmatter":{"title":"数据结构","icon":"hashtag","index":true,"order":1,"description":"0 ~ 99 #1. 1.2 描述两个字符串是否互为字符重排的含义。现在，看看你提供的定义，你能否根据这个定义检查字符串？ #2. 3.1 栈只是一个数据结构，其中最近添加的元素首先被删除。你能用一个数组来模拟单个栈吗？请记住，有很多可能的解法且每个解法都有其利弊。 #3. 2.4 这个问题有很多解法，其中大部分都有最优的运行时间。有些代码比其他代码更...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/leetcode/books/cracking-the-coding-interview/tip/data-structure.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"数据结构"}],["meta",{"property":"og:description","content":"0 ~ 99 #1. 1.2 描述两个字符串是否互为字符重排的含义。现在，看看你提供的定义，你能否根据这个定义检查字符串？ #2. 3.1 栈只是一个数据结构，其中最近添加的元素首先被删除。你能用一个数组来模拟单个栈吗？请记住，有很多可能的解法且每个解法都有其利弊。 #3. 2.4 这个问题有很多解法，其中大部分都有最优的运行时间。有些代码比其他代码更..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-24T04:36:23.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-01-24T04:36:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据结构\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-24T04:36:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"0 ~ 99","slug":"_0-99","link":"#_0-99","children":[]},{"level":2,"title":"100 ~ 136","slug":"_100-136","link":"#_100-136","children":[]}],"git":{"createdTime":1706070983000,"updatedTime":1706070983000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":1}]},"readingTime":{"minutes":22.25,"words":6674},"filePathRelative":"leetcode/books/cracking-the-coding-interview/tip/data-structure.md","localizedDate":"2024年1月24日","autoDesc":true}');export{t as data};
