import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c,a,f as n}from"./app-GvBJK9_k.js";const t={},s=n(`<h2 id="dart" tabindex="-1"><a class="header-anchor" href="#dart" aria-hidden="true">#</a> <code>Dart</code></h2><blockquote><p><code>final</code> 与 <code>const</code> 区别？</p></blockquote><ul><li><code>const</code> : 是编译时常量，必须初始化。</li><li><code>final</code> : 运行时常量，支持惰性初始化，只能被赋值一次的变量。</li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">final</span> date <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ✅</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ❌ 编译错误</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>Dart</code> 中 <code>..</code> 表示什么意思？</p></blockquote><blockquote><p><code>Dart</code> 的作用域?</p></blockquote><blockquote><p><code>mixin</code> <code>extends</code> <code>implement</code> 之间的关系</p></blockquote><blockquote><p><code>await for</code> 如何使用</p></blockquote><blockquote><p><code>isolate</code> <code>compute</code> 是如何运行的？</p></blockquote><blockquote><p>如何使用反射?</p></blockquote><p>使用 <code>Mirror</code></p><ul><li><code>ClassMirror</code> : 类</li><li><code>InstanceMirror</code> : 实例</li><li><code>ClosureMirror</code> : 闭包</li><li><code>DeclarationMirror</code> : 类属性</li><li><code>IsolateMirror</code> : Isolate</li><li><code>MethodMirror</code> : 方法</li></ul><blockquote><p><code>Dart</code> 为啥没有反射？</p></blockquote><p>因为发射会影响 <code>Dart</code> 的 <code>tree shaking</code>(摇树优化)。这是一种无用代码裁剪技术，有利于优化发布版本的 <code>App</code> 体积。如果反射机制存在，会存在隐式代码，<code>tree shaking</code> 时无法准确定位运行时哪些代码不会被调用，冗余代码就没法被裁剪。</p><blockquote><p>说一下 Future？</p></blockquote><blockquote><p><code>Dart</code> 是不是单线程模型？是如何运行的？</p></blockquote><blockquote><p><code>Dart</code> 多任务如何并行的？</p></blockquote><blockquote><p>说一下 Stream？</p></blockquote><blockquote><p>说一下 mixin？</p></blockquote>`,19);function l(p,d){return e(),c("div",null,[a(" more "),s])}const u=o(t,[["render",l],["__file","dart.html.vue"]]);export{u as default};
