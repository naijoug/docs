import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as s,c as a,a as i,b as e,e as n,d as l,f as d}from"./app-_KbMDiSB.js";const _={},c=e("h2",{id:"_0410",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0410","aria-hidden":"true"},"#"),n(" 0410")],-1),h=e("p",null,"// #region 0410",-1),u={href:"https://leetcode.cn/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},p=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),m=e("p",null,"// #endregion 0410",-1),f=e("h2",{id:"_0416",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0416","aria-hidden":"true"},"#"),n(" 0416")],-1),b=e("p",null,"// #region 0416",-1),g={href:"https://leetcode.cn/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},x=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),k=e("p",null,"// #endregion 0416",-1),y=e("h2",{id:"_0442",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0442","aria-hidden":"true"},"#"),n(" 0442")],-1),v=e("p",null,"// #region 0442",-1),N={href:"https://leetcode.cn/problems/find-all-duplicates-in-an-array",target:"_blank",rel:"noopener noreferrer"},V=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),L=e("p",null,"// #endregion 0442",-1),q=e("h2",{id:"_0448",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0448","aria-hidden":"true"},"#"),n(" 0448")],-1),B=e("p",null,"// #region 0448",-1),E={href:"https://leetcode.cn/problems/find-all-numbers-disappeared-in-an-array",target:"_blank",rel:"noopener noreferrer"},I=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),O=e("p",null,"// #endregion 0448",-1),w=e("h2",{id:"_0435",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0435","aria-hidden":"true"},"#"),n(" 0435")],-1),C=e("p",null,"// #region 0435",-1),U={href:"https://leetcode.cn/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},F=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),R=e("p",null,"// #endregion 0435",-1),S=e("h2",{id:"_0438",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0438","aria-hidden":"true"},"#"),n(" 0438")],-1),T=e("p",null,"// #region 0438",-1),j={href:"https://leetcode.cn/problems/find-all-anagrams-in-a-string",target:"_blank",rel:"noopener noreferrer"},z=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),A=e("p",null,"// #endregion 0438",-1),D=e("h2",{id:"_0450",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0450","aria-hidden":"true"},"#"),n(" 0450")],-1),G=e("p",null,"// #region 0450",-1),H={href:"https://leetcode.cn/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},J=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),K=e("p",null,"// #endregion 0450",-1),M=e("h2",{id:"_0452",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0452","aria-hidden":"true"},"#"),n(" 0452")],-1),P=e("p",null,"// #region 0452",-1),Q={href:"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},W=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),X=e("p",null,"// #endregion 0452",-1),Y=e("h2",{id:"_0460",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0460","aria-hidden":"true"},"#"),n(" 0460")],-1),Z=e("p",null,"// #region 0460",-1),$={href:"https://leetcode.cn/problems/lfu-cache",target:"_blank",rel:"noopener noreferrer"},ee=e("blockquote",null,[e("p",null,[e("code",null,"get"),n(),e("code",null,"put"),n(" 操作需要 O(1) 的时间复杂度")])],-1),ne=d('<details class="hint-container details"><summary>💡</summary><p>【思路】: 双哈希表</p><ul><li>数据缓存的问题。同 <code>LRU</code> 一样需要哈希表来保证数据存取的 O(1) 的时间复杂度。</li><li>最不经常时间的问题。这个需要为没有数据加上一个 frequency 使用频率计数值来进行标记。关键点在于需要 O(1) 时间复杂度，那么使用</li></ul></details><p>// #endregion 0460</p><h2 id="_0486" tabindex="-1"><a class="header-anchor" href="#_0486" aria-hidden="true">#</a> 0486</h2><p>// #region 0486</p>',4),te={href:"https://leetcode.cn/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},le=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),oe=e("p",null,"// #endregion 0486",-1),re=e("h2",{id:"_0493",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0493","aria-hidden":"true"},"#"),n(" 0493")],-1),se=e("p",null,"// #region 0493",-1),ae={href:"https://leetcode.cn/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},ie=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),de=e("p",null,"// #endregion 0493",-1),_e=e("h2",{id:"_0494",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0494","aria-hidden":"true"},"#"),n(" 0494")],-1),ce=e("p",null,"// #region 0494",-1),he={href:"https://leetcode.cn/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},ue=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),pe=e("p",null,"// #endregion 0494",-1),me=e("h2",{id:"_0496",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0496","aria-hidden":"true"},"#"),n(" 0496")],-1),fe=e("p",null,"// #region 0496",-1),be={href:"https://leetcode.cn/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},ge=e("details",{class:"hint-container details"},[e("summary",null,"💡")],-1),xe=e("p",null,"// #endregion 0496",-1);function ke(ye,ve){const t=r("ExternalLinkIcon");return s(),a("div",null,[i(" more "),c,h,e("ul",null,[e("li",null,[e("a",u,[n("🔴 410 - 分割数组的最大值"),l(t)])])]),p,m,f,b,e("ul",null,[e("li",null,[e("a",g,[n("🟠 416 - 分割等和子集"),l(t)])])]),x,k,y,v,e("ul",null,[e("li",null,[e("a",N,[n("🟠 442 - 数组中重复的数据"),l(t)])])]),V,L,q,B,e("ul",null,[e("li",null,[e("a",E,[n("🟢 448 - 找到所有数组中消失的数字"),l(t)])])]),I,O,w,C,e("ul",null,[e("li",null,[e("a",U,[n("🟠 435 - 无重叠区间"),l(t)])])]),F,R,S,T,e("ul",null,[e("li",null,[e("a",j,[n("🟠 438 - 找到字符串中所有字母异位词"),l(t)])])]),z,A,D,G,e("ul",null,[e("li",null,[e("a",H,[n("🟠 450 - 删除二叉搜索树中的节点"),l(t)])])]),J,K,M,P,e("ul",null,[e("li",null,[e("a",Q,[n("🟠 452 - 用最少数量的箭引爆气球"),l(t)])])]),W,X,Y,Z,e("ul",null,[e("li",null,[e("a",$,[n("🔴 460 - LFU 缓存"),l(t)]),ee])]),ne,e("ul",null,[e("li",null,[e("a",te,[n("🟠 486 - 预测赢家"),l(t)])])]),le,oe,re,se,e("ul",null,[e("li",null,[e("a",ae,[n("🔴 493 - 翻转对"),l(t)])])]),ie,de,_e,ce,e("ul",null,[e("li",null,[e("a",he,[n("🟠 494 - 目标和"),l(t)])])]),ue,pe,me,fe,e("ul",null,[e("li",null,[e("a",be,[n("🟢 496 - 下一个更大元素 I"),l(t)])])]),ge,xe])}const Le=o(_,[["render",ke],["__file","0x0400.html.vue"]]);export{Le as default};
