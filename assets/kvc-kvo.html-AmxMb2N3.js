import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,a as e,f as o}from"./app-YAxt81r4.js";const t={},c=o(`<h2 id="kvc" tabindex="-1"><a class="header-anchor" href="#kvc" aria-hidden="true">#</a> <code>KVC</code></h2><p><code>KVC</code>(Key Value Coding) : 是 <code>OC</code> 的特性，可以直接通过键名访问属性和属性赋值。是通过 <code>NSObject</code> 的扩展(<code>NSKeyValueCoding</code>)来实现，所有继承 <code>NSObject</code> 的类型都可以使用 <code>KVC</code> 特性。</p><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// 通过 key 读取值</span>
<span class="token operator">-</span> <span class="token punctuation">(</span>nullable id<span class="token punctuation">)</span>valueForKey<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>key<span class="token punctuation">;</span>                          
<span class="token comment">//通过 key 来赋值</span>
<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>setValue<span class="token punctuation">:</span><span class="token punctuation">(</span>nullable id<span class="token punctuation">)</span>value forKey<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>key<span class="token punctuation">;</span>          
<span class="token comment">// keyPath 读取值</span>
<span class="token operator">-</span> <span class="token punctuation">(</span>nullable id<span class="token punctuation">)</span>valueForKeyPath<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>keyPath<span class="token punctuation">;</span>                  
<span class="token comment">// keyPath 来赋值</span>
<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>setValue<span class="token punctuation">:</span><span class="token punctuation">(</span>nullable id<span class="token punctuation">)</span>value forKeyPath<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>keyPath<span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>KVC</code> 有哪些实际应用？</p><ul><li>动态取值或赋值</li><li>可以读取或修改类的私有属性</li></ul><h2 id="kvo" tabindex="-1"><a class="header-anchor" href="#kvo" aria-hidden="true">#</a> <code>KVO</code></h2><p><code>KVO</code>(Key Value Observer) : 是一种观察者模式的实现。</p><blockquote><p><code>KVO</code> 失效了怎么办？</p></blockquote>`,8);function p(l,u){return a(),s("div",null,[e(" more "),c])}const r=n(t,[["render",p],["__file","kvc-kvo.html.vue"]]);export{r as default};
