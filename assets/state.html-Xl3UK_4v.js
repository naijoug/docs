import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,a as p,b as n,e as s,d as e,f as i}from"./app-byZOQQPG.js";const r={},u=n("h2",{id:"provider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#provider","aria-hidden":"true"},"#"),s(" Provider")],-1),d={href:"https://pub.dev/packages/provider",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/rrousselGit/provider",target:"_blank",rel:"noopener noreferrer"},k=n("blockquote",null,[n("p",null,"InheritedWidgets, but simple")],-1),m=n("hr",null,null,-1),v={href:"https://juejin.cn/post/6844903864852807694",target:"_blank",rel:"noopener noreferrer"},b=i(`<h3 id="concept" tabindex="-1"><a class="header-anchor" href="#concept" aria-hidden="true">#</a> concept</h3><ul><li><code>ChangeNotifier</code> : 用于发送变化通知，模型数据改变时调用 <code>notifyListeners()</code> 通知订阅者。</li><li><code>ChangeNotifierProvider</code> : 用于向子节点提供一个 <code>ChangeNotifier</code> 实例。</li><li><code>Consumer</code> : 订阅 <code>ChangeNotifier</code> 的变化通知，发生变化时会调用 <code>builder</code> 函数。</li></ul><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> usage</h3><blockquote><p>添加依赖</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>flutter pub <span class="token function">add</span> provider
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
<span class="token comment">// 上层 Widget 注入</span>
<span class="token class-name">ChangeNotifierProvider</span><span class="token punctuation">(</span>
  create<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">MyModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">TopWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token comment">// 下层 Widget 使用</span>
<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyModel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
  builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> model<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">BottomWidget</span><span class="token punctuation">(</span>model<span class="token punctuation">:</span> model<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token comment">// Consumer - child 属于可以指定不需要刷新重建的子组件 </span>
<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyModel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
  builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> model<span class="token punctuation">,</span> child<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">BottomWidget</span><span class="token punctuation">(</span>model<span class="token punctuation">:</span> model<span class="token punctuation">,</span> child<span class="token punctuation">:</span> child<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  child<span class="token punctuation">:</span> <span class="token class-name">ChildWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="riverpod" tabindex="-1"><a class="header-anchor" href="#riverpod" aria-hidden="true">#</a> RiverPod</h2>`,8),_={href:"https://riverpod.dev",target:"_blank",rel:"noopener noreferrer"},g={href:"https://pub.dev/packages/riverpod",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/rrousselGit/riverpod",target:"_blank",rel:"noopener noreferrer"},x=n("blockquote",null,[n("p",null,"A reactive caching and data-binding framework. Riverpod makes working with asynchronous code a breeze.")],-1),C=n("hr",null,null,-1),y=n("h2",{id:"bloc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bloc","aria-hidden":"true"},"#"),s(" Bloc")],-1),N={href:"https://bloclibrary.dev",target:"_blank",rel:"noopener noreferrer"},w={href:"https://pub.dev/packages/bloc",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/felangel/bloc",target:"_blank",rel:"noopener noreferrer"},W=n("blockquote",null,[n("p",null,"A predictable state management library that helps implement the BLoC design pattern")],-1),q=n("hr",null,null,-1),M=n("h2",{id:"getx",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getx","aria-hidden":"true"},"#"),s(" GetX")],-1),P={href:"https://pub.dev/packages/getx",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/jonataslaw/getx",target:"_blank",rel:"noopener noreferrer"},V=n("blockquote",null,[n("p",null,"Open screens/snackbars/dialogs/bottomSheets without context, manage states and inject dependencies easily with Get.")],-1);function j(L,E){const a=o("ExternalLinkIcon");return c(),l("div",null,[p(" more "),u,n("ul",null,[n("li",null,[n("a",d,[s("provider"),e(a)]),s(" 👉🏻 "),n("a",h,[s("🐙"),e(a)]),k])]),m,n("ul",null,[n("li",null,[n("a",v,[s("2019-06-13 状态管理指南篇——Provider"),e(a)])])]),b,n("ul",null,[n("li",null,[n("a",_,[s("RiverPod"),e(a)]),s(" 👉🏻 "),n("a",g,[s("pub"),e(a)]),s(),n("a",f,[s("🐙"),e(a)]),x])]),C,y,n("ul",null,[n("li",null,[n("a",N,[s("Bloc"),e(a)]),s(" 👉🏻 "),n("a",w,[s("pub"),e(a)]),s(),n("a",B,[s("🐙"),e(a)]),W])]),q,M,n("ul",null,[n("li",null,[n("a",P,[s("GetX"),e(a)]),s(" 👉🏻 "),n("a",G,[s("🐙"),e(a)]),V])])])}const A=t(r,[["render",j],["__file","state.html.vue"]]);export{A as default};
