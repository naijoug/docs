import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as c,c as r,a as p,b as n,d as a,w as d,e,f as l}from"./app-8wVbLcw5.js";const m={},u=n("blockquote",null,[n("p",null,"Linux is not Unix")],-1),k=n("h2",{id:"catalog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#catalog","aria-hidden":"true"},"#"),e(" catalog")],-1),b=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),e(" reference")],-1),v={href:"https://snapcraft.io/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.kernel.org/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/billie66/TLCL",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/me115/linuxtools_rst",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/jaywcjlove/linux-command",target:"_blank",rel:"noopener noreferrer"},x={href:"http://www.apelearn.com/study_v2/",target:"_blank",rel:"noopener noreferrer"},$=n("h2",{id:"linux-tools",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#linux-tools","aria-hidden":"true"},"#"),e(" Linux Tools")],-1),y={href:"https://github.com/netdata/netdata",target:"_blank",rel:"noopener noreferrer"},L=n("blockquote",null,[n("p",null,"Real-time performance monitoring, done right!")],-1),q={href:"https://github.com/nicolargo/glances",target:"_blank",rel:"noopener noreferrer"},w=n("blockquote",null,[n("p",null,"Glances an Eye on your system. A top/htop alternative for GNU/Linux, BSD, Mac OS and Windows operating systems.")],-1),P={href:"https://github.com/tariqbuilds/linux-dash",target:"_blank",rel:"noopener noreferrer"},D=n("blockquote",null,[n("p",null,"A beautiful web dashboard for Linux")],-1),R={href:"https://github.com/brndnmtthws/conky",target:"_blank",rel:"noopener noreferrer"},M=n("blockquote",null,[n("p",null,"Light-weight system monitor for X, Wayland, and other things, too")],-1),N={href:"https://github.com/Rudolf-Barbu/Ward",target:"_blank",rel:"noopener noreferrer"},C=n("blockquote",null,[n("p",null,"Server dashboard")],-1),B={href:"https://github.com/prometheus/prometheus",target:"_blank",rel:"noopener noreferrer"},S=n("blockquote",null,[n("p",null,"The Prometheus monitoring system and time series database.")],-1),T={href:"https://github.com/grafana/grafana",target:"_blank",rel:"noopener noreferrer"},V=n("blockquote",null,[n("p",null,"The open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, InfluxDB, Postgres and many more.")],-1),A=n("h2",{id:"init-d-service-systemd",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#init-d-service-systemd","aria-hidden":"true"},"#"),e(" init.d & service & systemd")],-1),E={href:"https://askubuntu.com/questions/919054/how-do-i-run-a-single-command-at-startup-using-systemd",target:"_blank",rel:"noopener noreferrer"},G=l(`<table><thead><tr><th>-</th><th>-</th></tr></thead><tbody><tr><td><code>init</code></td><td>最初的 Linux 启动进程 <code>PID = 0</code>，启动参数在 <code>/etc/init.d</code> 目录下</td></tr><tr><td><code>service</code></td><td>命令 <code>System V init</code>，可以理解为 <code>init</code> 的一个别名</td></tr><tr><td><code>systemd</code></td><td>最新的 Linux 初始化系统 <code>PID = 1</code>，d (daemon 守护进程)</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># systemd </span>
<span class="token comment">#   - systemctl : 控制系统的主命令</span>
$ systemctl <span class="token parameter variable">--version</span> <span class="token comment"># 查看版本信息</span>
$ <span class="token function">sudo</span> systemctl <span class="token function">reboot</span>           <span class="token comment"># 重启系统</span>
$ <span class="token function">sudo</span> systemctl rescue           <span class="token comment"># 进入救援模式</span>
$ <span class="token function">sudo</span> systemctl daemon-reload    <span class="token comment"># 重新加载配置文件</span>
$ <span class="token function">sudo</span> systemctl <span class="token function">cat</span> xxx.service  <span class="token comment"># 查看服务信息</span>
<span class="token comment">#   - hostnamectl : 当前主机相关</span>
$ hostnamectl <span class="token comment"># 显示当前主机信息</span>
$ <span class="token function">sudo</span> <span class="token function">hostname</span> set-hostname <span class="token builtin class-name">test</span> <span class="token comment"># 设置主机名</span>
<span class="token comment">#   - localectl : 本地化相关</span>
$ localectl <span class="token comment"># 显示本地化设置</span>
$ <span class="token function">sudo</span> localctl set-locale <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>zh_CN.utf8 <span class="token comment"># 设置本地化参数</span>
<span class="token comment">#   - timedatectl : 时间相关</span>
$ timedatectl <span class="token comment"># 显示当前时间设置</span>
$ timedatectl list-timezones <span class="token comment"># 显示所有可用的时区</span>
$ <span class="token function">sudo</span> timedatectl set-timezone Asia/Shanghai <span class="token comment"># 设置当前时区</span>
$ <span class="token function">sudo</span> timedatectl set-time yyyy-MM-dd
$ <span class="token function">sudo</span> timedatectl set-time HH:mm:ss

<span class="token comment"># 启动 nginx 三种方式</span>
$ <span class="token function">sudo</span> /etc/init.d/nginx start
$ <span class="token function">service</span> nginx start
$ <span class="token function">sudo</span> systemctl start nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),I=l(`<h2 id="rpm-redhat-package-manager" tabindex="-1"><a class="header-anchor" href="#rpm-redhat-package-manager" aria-hidden="true">#</a> RPM (Redhat Package Manager)</h2><blockquote><p>Red Hat 公司定义的包管理器 Linux : RedHat、CentOS</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> package.rpm  <span class="token comment"># 安装 rpm 包</span>
$ <span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> package.rpm  <span class="token comment"># 升级 rpm 包</span>
$ <span class="token function">rpm</span> <span class="token parameter variable">-ev</span> package       <span class="token comment"># 卸载 rpm 包</span>
$ <span class="token function">rpm</span> <span class="token parameter variable">-qlp</span> package.rpm  <span class="token comment"># 查看包中的文件列表</span>
$ <span class="token function">rpm</span> <span class="token parameter variable">-qip</span> package.rpm  <span class="token comment"># 查看包中的内容信息</span>
$ <span class="token function">rpm</span> <span class="token parameter variable">-qa</span>               <span class="token comment"># 查询系统中已安装 rpm 包</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>yum</code> (Yellowdog Updater Modified)</p><blockquote><p>基于 RPM 的包管理工具，能够从指定的软件源自动下载目标 RPM 包并安装，可以自动处理下载相关依赖包。</p></blockquote><ul><li>软件源配置文件 : <code>/etc/yum.repos.d/xxx.repo</code></li><li>yum 配置文件 : <code>/etc/yum.conf</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ yum list  <span class="token comment"># 列出系统中已安装软件</span>
$ yum <span class="token function">install</span> package <span class="token comment"># 安装指定软件</span>
$ yum check-update <span class="token comment"># 检查系统可升级软件列表</span>
$ yum update <span class="token comment"># 升级系统中可升级软件</span>
$ yum update package <span class="token comment"># 升级指定软件</span>
$ yum remove package <span class="token comment"># 卸载软件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="dpkg-debian-package" tabindex="-1"><a class="header-anchor" href="#dpkg-debian-package" aria-hidden="true">#</a> DPKG (Debian Package)</h2><blockquote><p>Debian Linux 系统定义的包管理器 Linux : Debian、Ubuntu</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ dpkg <span class="token parameter variable">-i</span> package.deb       <span class="token comment"># 安装 deb 包</span>
$ dpkg <span class="token parameter variable">-i</span> package.deb       <span class="token comment"># 升级 deb 包 (同安装)</span>
$ dpkg <span class="token parameter variable">-r</span> package.deb       <span class="token comment"># 卸载 deb 包 (不卸载配置文件)</span>
$ dpkg <span class="token parameter variable">-P</span> package.deb       <span class="token comment"># 卸载 deb 包 (卸载配置文件)</span>
$ dpkg <span class="token parameter variable">-c</span> package.deb       <span class="token comment"># 查看包中包含文件信息</span>
$ dpkg <span class="token parameter variable">--info</span> package.deb   <span class="token comment"># 查看包中内容信息</span>
$ dpkg <span class="token parameter variable">-l</span> package           <span class="token comment"># 查看系统中已安装的包</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>apt</code> (Advanced Packaging Tool)</p><blockquote><p>功能与 yum 类型，通过 apt-rpm 支持 rpm 包管理。</p></blockquote><ul><li>软件源配置文件 :<code> /etc/apt/sources.list</code></li><li>apt 配置文件 : <code>/etc/apt/apt.conf.d</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">apt-get</span> update <span class="token comment"># 更新软件源索引</span>
$ <span class="token function">apt-get</span> <span class="token function">install</span> package <span class="token comment"># 安装指定软件</span>
$ <span class="token function">apt-get</span> <span class="token builtin class-name">source</span> package <span class="token comment"># 下载指定软件源代码</span>
$ <span class="token function">apt-get</span> upgrade <span class="token comment"># 升级所有软件到最新版本</span>
$ <span class="token function">apt-get</span> dist-upgrade <span class="token comment"># 升级系统和所有软件</span>
$ <span class="token function">apt-get</span> remove package <span class="token comment"># 卸载指定软件</span>

$ <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token assign-left variable">package</span><span class="token operator">=</span>version   <span class="token comment"># 安装指定版本软件</span>
$ <span class="token function">apt-cache</span> madison package         <span class="token comment"># 列出软件的所有来源</span>
$ <span class="token function">apt-cache</span> policy package          <span class="token comment"># 列出软件的所有来源</span>
$ <span class="token function">apt-cache</span> showpkg package         <span class="token comment"># 列出软件的所有来源</span>
$ <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-s</span> package        <span class="token comment"># 模拟安装软件     </span>
$ apt-show-versions <span class="token parameter variable">-a</span> package      <span class="token comment"># 列出所有版本   </span>

$ <span class="token function">apt-get</span> <span class="token function">install</span> python-flask  <span class="token comment"># 安装 flask</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="alien" tabindex="-1"><a class="header-anchor" href="#alien" aria-hidden="true">#</a> Alien</h2><blockquote><p>RPM 包与 DEB 包相互转换工具</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ alien <span class="token parameter variable">-d</span> package.rpm <span class="token comment"># rpm -&gt; deb</span>
$ alien <span class="token parameter variable">-r</span> package.deb <span class="token comment"># deb -&gt; rpm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function z(H,U){const o=t("RouterLink"),s=t("ExternalLinkIcon");return c(),r("div",null,[u,p(" more "),k,n("ul",null,[n("li",null,[a(o,{to:"/programmer/system/linux/command.html"},{default:d(()=>[e("Linux 命令")]),_:1})])]),b,n("ul",null,[n("li",null,[n("a",v,[e("snapcraft"),a(s)]),e(" : The app store for Linux")]),n("li",null,[n("a",h,[e("Linux 内核"),a(s)])]),n("li",null,[n("a",g,[e("快乐的 Linux 命令行"),a(s)])]),n("li",null,[n("a",f,[e("Linux 工具快速教程"),a(s)])]),n("li",null,[n("a",_,[e("Linux Command"),a(s)])]),n("li",null,[n("a",x,[e("跟阿铭学 Linux（第2版）"),a(s)])])]),$,n("ul",null,[n("li",null,[n("a",y,[e("NetData"),a(s)]),L]),n("li",null,[n("a",q,[e("Glances"),a(s)]),w]),n("li",null,[n("a",P,[e("Linux Dash"),a(s)]),D]),n("li",null,[n("a",R,[e("Conky"),a(s)]),M]),n("li",null,[n("a",N,[e("Ward"),a(s)]),C]),n("li",null,[n("a",B,[e("Prometheus"),a(s)]),S]),n("li",null,[n("a",T,[e("Grafana"),a(s)]),V])]),A,n("ul",null,[n("li",null,[n("p",null,[n("a",E,[e("How do I run a single command at startup using systemd?"),a(s)])]),G])]),I])}const O=i(m,[["render",z],["__file","index.html.vue"]]);export{O as default};
