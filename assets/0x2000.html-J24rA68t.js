import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c as r,a as k,b as n,e as s,d as a,w as o}from"./app-uICv6wD2.js";const m={},d=n("h2",{id:"_2000",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2000","aria-hidden":"true"},"#"),s(" 2000")],-1),_=n("p",null,"// #region 2000",-1),b={href:"https://leetcode.cn/problems/reverse-prefix-of-word",target:"_blank",rel:"noopener noreferrer"},v=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),h=n("p",null,"// #endregion 2000",-1),f=n("h2",{id:"_2016-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2016-✅","aria-hidden":"true"},"#"),s(" 2016 ✅")],-1),w=n("p",null,"// #region 2016",-1),x={href:"https://leetcode.cn/problems/maximum-difference-between-increasing-elements",target:"_blank",rel:"noopener noreferrer"},j=n("blockquote",null,[n("p",null,"给你一个下标从 0 开始的整数数组 nums ，该数组的大小为 n ，请你计算 nums[j] - nums[i] 能求得的 最大差值 ，其中 0 <= i < j < n 且 nums[i] < nums[j] 。 返回 最大差值 。如果不存在满足要求的 i 和 j ，返回 -1 。")],-1),y=n("pre",null,[n("code",null,`  🌰
      输入：nums = [7,1,5,4]
      输出：4  (解释：5 - 1 = 4)
  🌰
      输入：nums = [9,4,3,2]
      输出：-1
  🌰
      输入：nums = [1,5,2,10]
      输出：9  (解释：10 - 1 = 9)
`)],-1),g={class:"hint-container details"},C=n("summary",null,"💡",-1),I=n("p",null,"【思路】遍历过程中，通过两个指针指向目前遍历过程中的最小值和最大值索引；如果最小值的索引改变之后，需要将最大值索引与其对齐，需要满足最大值的索引大于最小值索引的条件；遍历的过程中进行最大值的对比保存。",-1),N=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"maximumDifference"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" nums"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Int"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 保存最小值索引"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" j "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 保存最大值索引"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token comment"},"// 结果值"),s(`
        `),n("span",{class:"token keyword"},"for"),s(" k "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token operator"},"..<"),s("nums"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" nums"),n("span",{class:"token punctuation"},"["),s("k"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 该值比当前 i 索引下值小"),s(`
                i `),n("span",{class:"token operator"},"="),s(` k
                `),n("span",{class:"token comment"},"// 如果 i 索引改变之后，j 小于 i，将 j 与 i 对齐"),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("j "),n("span",{class:"token operator"},"<"),s(" i"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    j `),n("span",{class:"token operator"},"="),s(` i
                `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(` 
            `),n("span",{class:"token keyword"},"if"),s(" nums"),n("span",{class:"token punctuation"},"["),s("k"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},">"),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 该值比当前 j 索引下值大"),s(`
                j `),n("span",{class:"token operator"},"="),s(` k
            `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token comment"},"// 遍历的过程中，进行结果最大值的替换"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" i "),n("span",{class:"token operator"},"<"),s(" j"),n("span",{class:"token punctuation"},","),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
                result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},","),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"-"),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"?"),s(" result "),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=n("p",null,"// #endregion 2000",-1);function B(E,T){const e=t("ExternalLinkIcon"),c=t("CodeTabs");return p(),r("div",null,[k(" more "),d,_,n("ul",null,[n("li",null,[n("a",b,[s("🟢 2000 - 反转单词前缀"),a(e)])])]),v,h,f,w,n("ul",null,[n("li",null,[n("p",null,[n("a",x,[s("🟢 2016 - 增量元素之间的最大差值"),a(e)])]),j,y])]),n("details",g,[C,I,a(c,{id:"42",data:[{id:"swift"}]},{title0:o(({value:l,isActive:i})=>[s("swift")]),tab0:o(({value:l,isActive:i})=>[N]),_:1})]),V])}const q=u(m,[["render",B],["__file","0x2000.html.vue"]]);export{q as default};
