const e=JSON.parse('{"key":"v-b797caa8","path":"/interview/ios/0x14.architecture.html","title":"架构设计","lang":"zh-CN","frontmatter":{"title":"架构设计","icon":"hashtag","index":true,"description":"设计模式 ❓iOS 中常用设计模式实践有哪些 💡 Delegate: 委托模式; 一个简单的行为抽象模式，允许一个对象将某些决策权和行为放在其它对象上。这个模式被广泛应用于 UIKit 中。 Singleton: 单例模式; 保证一个类只有一个实例在任何时候都是可访问的，这在 iOS 开发中适用于那些提供全局访问点或重用某个资源的场景，比如 UIAp...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/0x14.architecture.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"架构设计"}],["meta",{"property":"og:description","content":"设计模式 ❓iOS 中常用设计模式实践有哪些 💡 Delegate: 委托模式; 一个简单的行为抽象模式，允许一个对象将某些决策权和行为放在其它对象上。这个模式被广泛应用于 UIKit 中。 Singleton: 单例模式; 保证一个类只有一个实例在任何时候都是可访问的，这在 iOS 开发中适用于那些提供全局访问点或重用某个资源的场景，比如 UIAp..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-04T09:01:35.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-04T09:01:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-04T09:01:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[{"level":3,"title":"❓iOS 中常用设计模式实践有哪些","slug":"❓ios-中常用设计模式实践有哪些","link":"#❓ios-中常用设计模式实践有哪些","children":[]},{"level":3,"title":"❓iOS 为什么没有类似于 Java 的 Builder 的构造模式","slug":"❓ios-为什么没有类似于-java-的-builder-的构造模式","link":"#❓ios-为什么没有类似于-java-的-builder-的构造模式","children":[]},{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]}]},{"level":2,"title":"项目架构","slug":"项目架构","link":"#项目架构","children":[{"level":3,"title":"❓从 0 开始做一个项目，你是如何架构思考的","slug":"❓从-0-开始做一个项目-你是如何架构思考的","link":"#❓从-0-开始做一个项目-你是如何架构思考的","children":[]},{"level":3,"title":"资源管理","slug":"资源管理","link":"#资源管理","children":[]},{"level":3,"title":"MVC","slug":"mvc","link":"#mvc","children":[]},{"level":3,"title":"MVVM","slug":"mvvm","link":"#mvvm","children":[]},{"level":3,"title":"单向数据流","slug":"单向数据流","link":"#单向数据流","children":[]}]},{"level":2,"title":"组件化","slug":"组件化","link":"#组件化","children":[{"level":3,"title":"❓组件化设计思路","slug":"❓组件化设计思路","link":"#❓组件化设计思路","children":[]},{"level":3,"title":"❓组件之间如何解耦","slug":"❓组件之间如何解耦","link":"#❓组件之间如何解耦","children":[]},{"level":3,"title":"❓下层组件需要调用上层组件怎样处理","slug":"❓下层组件需要调用上层组件怎样处理","link":"#❓下层组件需要调用上层组件怎样处理","children":[]},{"level":3,"title":"CTMediator","slug":"ctmediator","link":"#ctmediator","children":[]}]},{"level":2,"title":"模块设计","slug":"模块设计","link":"#模块设计","children":[{"level":3,"title":"缓存方案","slug":"缓存方案","link":"#缓存方案","children":[]},{"level":3,"title":"埋点方案","slug":"埋点方案","link":"#埋点方案","children":[]},{"level":3,"title":"❓设计实现一个时长统计模块","slug":"❓设计实现一个时长统计模块","link":"#❓设计实现一个时长统计模块","children":[]},{"level":3,"title":"❓设计实现一个日志记录模块","slug":"❓设计实现一个日志记录模块","link":"#❓设计实现一个日志记录模块","children":[]},{"level":3,"title":"❓设计实现一个网络请求模块","slug":"❓设计实现一个网络请求模块","link":"#❓设计实现一个网络请求模块","children":[]},{"level":3,"title":"❓设计实现一个数据存储模块","slug":"❓设计实现一个数据存储模块","link":"#❓设计实现一个数据存储模块","children":[]}]},{"level":2,"title":"单元测试","slug":"单元测试","link":"#单元测试","children":[{"level":3,"title":"❓如何编写单元测试","slug":"❓如何编写单元测试","link":"#❓如何编写单元测试","children":[]}]},{"level":2,"title":"持续集成","slug":"持续集成","link":"#持续集成","children":[{"level":3,"title":"❓使用过什么持续集成方式","slug":"❓使用过什么持续集成方式","link":"#❓使用过什么持续集成方式","children":[]},{"level":3,"title":"❓Jenkins 怎么备份恢复","slug":"❓jenkins-怎么备份恢复","link":"#❓jenkins-怎么备份恢复","children":[]},{"level":3,"title":"❓Jenkins 使用过哪些插件","slug":"❓jenkins-使用过哪些插件","link":"#❓jenkins-使用过哪些插件","children":[]}]}],"git":{"createdTime":1704610269000,"updatedTime":1709542895000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":5}]},"readingTime":{"minutes":34.55,"words":10364},"filePathRelative":"interview/ios/0x14.architecture.md","localizedDate":"2024年1月7日","autoDesc":true}');export{e as data};
