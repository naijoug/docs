import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as u,c as d,a as p,b as n,e,d as s,w as t}from"./app-6DSXLXls.js";const _={},h=n("h2",{id:"_0600",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0600","aria-hidden":"true"},"#"),e(" 0600")],-1),k=n("p",null,"// #region 0600",-1),m={href:"https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},b=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),v=n("p",null,"// #endregion 0600",-1),f=n("h2",{id:"_0633",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0633","aria-hidden":"true"},"#"),e(" 0633")],-1),g=n("p",null,"// #region 0633",-1),y={href:"https://leetcode.cn/problems/sum-of-square-numbers",target:"_blank",rel:"noopener noreferrer"},w=n("blockquote",null,[n("p",null,[e("给定一个非负整数 c ，判断是否存在两个整数 a 和 b，使得 "),n("code",null,"a² + b² = c"),e(" ？")])],-1),x={class:"hint-container details"},j=n("summary",null,"💡",-1),N=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),T=n("p",null,"// #endregion 0633",-1),q=n("h2",{id:"_0637-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0637-✅","aria-hidden":"true"},"#"),e(" 0637 ✅")],-1),A=n("p",null,"// #region 0637",-1),L={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},C=n("pre",null,[n("code",null,`  🌰
      输入：root = [3,9,20,null,null,15,7]
      输出：[3, 14.5, 11]
          3
         / \\
        9  20
           / \\
          15  7 
`)],-1),E={class:"hint-container details"},I=n("summary",null,"💡",-1),S=n("p",null,"【思路】按照层序遍历思路，计算每一层的平均值进行返回",-1),V=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * Definition for a binary tree node.
 * public class TreeNode `),n("span",{class:"token punctuation"},"{"),e(`
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),e(`
 *     TreeNode(int val) `),n("span",{class:"token punctuation"},"{"),e(" this.val = val; "),n("span",{class:"token punctuation"},"}"),e(`
 *     TreeNode(int val, TreeNode left, TreeNode right) `),n("span",{class:"token punctuation"},"{"),e(`
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     `),n("span",{class:"token punctuation"},"}"),e(`
 * `),n("span",{class:"token punctuation"},"}"),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Solution"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token function"},"averageOfLevels"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),e(" root"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},">")]),e(" result "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("root "),n("span",{class:"token operator"},"=="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token keyword"},"return"),e(" result"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},">")]),e(" queue "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        queue`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("root"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),e("queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isEmpty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token keyword"},"int"),e(" count "),n("span",{class:"token operator"},"="),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"int"),e(" levelCount "),n("span",{class:"token operator"},"="),e(" count"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"double"),e(" levelSum "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e("count "),n("span",{class:"token operator"},">"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
                `),n("span",{class:"token class-name"},"TreeNode"),e(" node "),n("span",{class:"token operator"},"="),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeFirst"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
                levelSum `),n("span",{class:"token operator"},"+="),e(" node"),n("span",{class:"token punctuation"},"."),e("val"),n("span",{class:"token punctuation"},";"),e(`
                `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("left "),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
                `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("right "),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
                count `),n("span",{class:"token operator"},"-="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(`
            result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("levelSum"),n("span",{class:"token operator"},"/"),e("levelCount"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token keyword"},"return"),e(" result"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=n("p",null,"// #endregion 0637",-1),D=n("h2",{id:"_0645",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0645","aria-hidden":"true"},"#"),e(" 0645")],-1),z=n("p",null,"// #region 0645",-1),F={href:"https://leetcode.cn/problems/set-mismatch",target:"_blank",rel:"noopener noreferrer"},O={class:"hint-container details"},G=n("summary",null,"💡",-1),H=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),J=n("p",null,"// #endregion 0645",-1),K=n("h2",{id:"_0648",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0648","aria-hidden":"true"},"#"),e(" 0648")],-1),M=n("p",null,"// #region 0648",-1),P={href:"https://leetcode.cn/problems/replace-words",target:"_blank",rel:"noopener noreferrer"},Q=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),R=n("p",null,"// #endregion 0648",-1),U=n("h2",{id:"_0651",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0651","aria-hidden":"true"},"#"),e(" 0651")],-1),W=n("p",null,"// #region 0651",-1),X={href:"https://leetcode.cn/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},Y=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Z=n("p",null,"// #endregion 0651",-1),$=n("h2",{id:"_0652",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0652","aria-hidden":"true"},"#"),e(" 0652")],-1),nn=n("p",null,"// #region 0652",-1),en={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},sn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),an=n("p",null,"// #endregion 0652",-1),tn=n("h2",{id:"_0654",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0654","aria-hidden":"true"},"#"),e(" 0654")],-1),on=n("p",null,"// #region 0654",-1),ln={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},cn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),rn=n("p",null,"// #endregion 0654",-1),un=n("h2",{id:"_0659",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0659","aria-hidden":"true"},"#"),e(" 0659")],-1),dn=n("p",null,"// #region 0659",-1),pn={href:"https://leetcode.cn/problems/split-array-into-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},_n=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),hn=n("p",null,"// #endregion 0659",-1),kn=n("h2",{id:"_0672",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0672","aria-hidden":"true"},"#"),e(" 0672")],-1),mn=n("p",null,"// #region 0672",-1),bn={href:"https://leetcode.cn/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},vn=n("blockquote",null,[n("p",null,[e("有 n 个灯泡，四个开关。开关1，控制所有灯泡反转(开变为关，关变为开)；开关2，控制所有偶数灯泡反转；开关3，控制所有奇数灯泡反转；开关4，控制 "),n("code",null,"3*i + 1"),e(" 的灯泡反转。给定按压次数，请问一种能按出几种可能开关状态？")])],-1),fn=n("pre",null,[n("code",null,`  🌰
      输入：n = 3, presses = 1
      输出：4
      解释：状态可以是：
      - 按压开关 1 ，[关, 关, 关]
      - 按压开关 2 ，[关, 开, 关]
      - 按压开关 3 ，[开, 关, 开]
      - 按压开关 4 ，[关, 开, 开]
`)],-1),gn={class:"hint-container details"},yn=n("summary",null,"💡",-1),wn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),xn=n("p",null,"// #endregion 0672",-1),jn=n("h2",{id:"_0677",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0677","aria-hidden":"true"},"#"),e(" 0677")],-1),Nn=n("p",null,"// #region 0677",-1),Tn={href:"https://leetcode.cn/problems/map-sum-pairs",target:"_blank",rel:"noopener noreferrer"},qn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),An=n("p",null,"// #endregion 0677",-1),Ln=n("h2",{id:"_0680-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0680-✅","aria-hidden":"true"},"#"),e(" 0680 ✅")],-1),Cn=n("p",null,"// #region 0680",-1),En={href:"https://leetcode.cn/problems/valid-palindrome-ii",target:"_blank",rel:"noopener noreferrer"},In=n("blockquote",null,[n("p",null,"给定一个字符串，判断改字符(在最多可以删除一个字符的情况下)是否可以成为回文串。")],-1),Sn={class:"hint-container details"},Vn=n("summary",null,"💡",-1),Bn=n("p",null,"// #endregion 0680",-1),Dn=n("h2",{id:"_0694",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0694","aria-hidden":"true"},"#"),e(" 0694")],-1),zn=n("p",null,"// #region 0694",-1),Fn={href:"https://leetcode.cn/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},On=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Gn=n("p",null,"// #endregion 0694",-1),Hn=n("h2",{id:"_0695",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0695","aria-hidden":"true"},"#"),e(" 0695")],-1),Jn=n("p",null,"// #region 0695",-1),Kn={href:"https://leetcode.cn/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Mn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Pn=n("p",null,"// #endregion 0695",-1),Qn=n("h2",{id:"_0698",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0698","aria-hidden":"true"},"#"),e(" 0698")],-1),Rn=n("p",null,"// #region 0698",-1),Un={href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Wn={class:"hint-container details"},Xn=n("summary",null,"💡",-1),Yn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Zn=n("p",null,"// #endregion 0698",-1);function $n(ne,ee){const a=c("ExternalLinkIcon"),i=c("CodeTabs");return u(),d("div",null,[p(" more "),h,k,n("ul",null,[n("li",null,[n("a",m,[e("🔴 600 - 不含连续1的非负整数"),s(a)])])]),b,v,f,g,n("ul",null,[n("li",null,[n("a",y,[e("🟠 633 - 平方数之和"),s(a)]),w])]),n("details",x,[j,s(i,{id:"38",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[N]),_:1})]),T,q,A,n("ul",null,[n("li",null,[n("p",null,[n("a",L,[e("🟢 637 - 二叉树的层平均值"),s(a)])]),C])]),n("details",E,[I,S,s(i,{id:"65",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[V]),_:1})]),B,D,z,n("ul",null,[n("li",null,[n("a",F,[e("🟢 645 - 错误的集合"),s(a)])])]),n("details",O,[G,s(i,{id:"88",data:[{id:"swift"}]},{title0:t(({value:o,isActive:l})=>[e("swift")]),tab0:t(({value:o,isActive:l})=>[H]),_:1})]),J,K,M,n("ul",null,[n("li",null,[n("a",P,[e("🟠 648 - 单词替换"),s(a)])])]),Q,R,U,W,n("ul",null,[n("li",null,[n("a",X,[e("🟠 651 - 4键键盘"),s(a)])])]),Y,Z,$,nn,n("ul",null,[n("li",null,[n("a",en,[e("🟠 652 - 寻找重复的子树"),s(a)])])]),sn,an,tn,on,n("ul",null,[n("li",null,[n("a",ln,[e("🟠 654 - 最大二叉树"),s(a)])])]),cn,rn,un,dn,n("ul",null,[n("li",null,[n("a",pn,[e("🟠 659 - 分割数组为连续子序列"),s(a)])])]),_n,hn,kn,mn,n("ul",null,[n("li",null,[n("p",null,[n("a",bn,[e("🟠 672 - 灯泡开关 Ⅱ"),s(a)])]),vn,fn])]),n("details",gn,[yn,s(i,{id:"207",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[wn]),_:1})]),xn,jn,Nn,n("ul",null,[n("li",null,[n("a",Tn,[e("🟠 677 - 键值映射"),s(a)])])]),qn,An,Ln,Cn,n("ul",null,[n("li",null,[n("a",En,[e("🟢 680 - 验证回文串 II"),s(a)]),In])]),n("details",Sn,[Vn,s(i,{id:"253",data:[]})]),Bn,Dn,zn,n("ul",null,[n("li",null,[n("a",Fn,[e("🟠 694 - 不同岛屿的数量"),s(a)])])]),On,Gn,Hn,Jn,n("ul",null,[n("li",null,[n("a",Kn,[e("🟠 695 - 岛屿的最大面积"),s(a)])])]),Mn,Pn,Qn,Rn,n("ul",null,[n("li",null,[n("a",Un,[e("🟠 698 - 划分为k个相等的子集"),s(a)])])]),n("details",Wn,[Xn,s(i,{id:"313",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[Yn]),_:1})]),Zn])}const te=r(_,[["render",$n],["__file","0x0600.html.vue"]]);export{te as default};
