import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as h,a as r,f as d}from"./app-03m8YoZv.js";const i={},s=d('<h3 id="时间复杂度分析" tabindex="-1"><a class="header-anchor" href="#时间复杂度分析" aria-hidden="true">#</a> 时间复杂度分析</h3><details class="hint-container details"><summary>💡</summary><ul><li>最好时间复杂度</li><li>最坏时间复杂度</li><li>平均时间复杂度</li><li>摊还分析法 : 均摊时间复杂度，一种特殊的平均时间复杂度</li></ul></details><h2 id="冒泡排序和插入排序的时间复杂度是多少-为什么实际开发中会更多选择插入排序" tabindex="-1"><a class="header-anchor" href="#冒泡排序和插入排序的时间复杂度是多少-为什么实际开发中会更多选择插入排序" aria-hidden="true">#</a> 冒泡排序和插入排序的时间复杂度是多少？=&gt; 为什么实际开发中会更多选择插入排序？</h2><details class="hint-container details"><summary>💡</summary><p>两者的时间复杂度相同 O(n²)</p><p>插入排序是稳定的排序，对于相同的元素排序前后的相对位置不会发生变化。</p></details><h2 id="介绍哈希算法的原理" tabindex="-1"><a class="header-anchor" href="#介绍哈希算法的原理" aria-hidden="true">#</a> 介绍哈希算法的原理？</h2><blockquote><p>大数相加</p></blockquote><h2 id="随机数生成-真随机数和伪随机数" tabindex="-1"><a class="header-anchor" href="#随机数生成-真随机数和伪随机数" aria-hidden="true">#</a> 随机数生成，真随机数和伪随机数？</h2><h2 id="哈希" tabindex="-1"><a class="header-anchor" href="#哈希" aria-hidden="true">#</a> 哈希</h2><h3 id="什么是-hash" tabindex="-1"><a class="header-anchor" href="#什么是-hash" aria-hidden="true">#</a> 什么是 <code>hash</code>?</h3><h3 id="hash-的具体实现-程序里面一个对象怎么通过-hash-定位到具体的内存区" tabindex="-1"><a class="header-anchor" href="#hash-的具体实现-程序里面一个对象怎么通过-hash-定位到具体的内存区" aria-hidden="true">#</a> <code>hash</code> 的具体实现，程序里面一个对象怎么通过 <code>hash</code> 定位到具体的内存区？</h3><h3 id="hash-数组扩容" tabindex="-1"><a class="header-anchor" href="#hash-数组扩容" aria-hidden="true">#</a> <code>hash</code> 数组扩容？</h3>',11);function t(c,n){return e(),h("div",null,[r(" more "),s])}const m=a(i,[["render",t],["__file","0x01.algorithm.html.vue"]]);export{m as default};
