const t=JSON.parse('{"key":"v-21a6d43c","path":"/interview/book/cracking-the-coding-interview/0x02.linked-list.html","title":"","lang":"zh-CN","frontmatter":{"description":"2 链表 (7) 2.1 链表去重; 编写代码，移除未排序链表中的重复结点。 进阶 如果不得使用临时缓冲区，又该怎么解决？ 解法 空间复杂度 时间复杂度 思路 --- --- --- --- 2.2 链表中倒数第 k 个节点; 实现一个算法，找出单向链表中倒数第 k 个结点。 解法 空间复杂度 时间复杂度 思路 --- --- --- --- 1 O(...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/book/cracking-the-coding-interview/0x02.linked-list.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:description","content":"2 链表 (7) 2.1 链表去重; 编写代码，移除未排序链表中的重复结点。 进阶 如果不得使用临时缓冲区，又该怎么解决？ 解法 空间复杂度 时间复杂度 思路 --- --- --- --- 2.2 链表中倒数第 k 个节点; 实现一个算法，找出单向链表中倒数第 k 个结点。 解法 空间复杂度 时间复杂度 思路 --- --- --- --- 1 O(..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-13T23:40:19.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2023-12-13T23:40:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-13T23:40:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"2 链表 (7)","slug":"_2-链表-7","link":"#_2-链表-7","children":[]}],"git":{"createdTime":1702510819000,"updatedTime":1702510819000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":1}]},"readingTime":{"minutes":2,"words":599},"filePathRelative":"interview/book/cracking-the-coding-interview/0x02.linked-list.md","localizedDate":"2023年12月13日","autoDesc":true}');export{t as data};
