import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as u,c as d,a as p,b as n,e as s,d as e,w as l,f as _}from"./app-Gy2q6lTd.js";const h={},k=n("h2",{id:"_0400",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0400","aria-hidden":"true"},"#"),s(" 0400")],-1),m=n("p",null,"// #region 0400",-1),b={href:"https://leetcode.cn/problems/nth-digit",target:"_blank",rel:"noopener noreferrer"},v=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),f=n("p",null,"// #endregion 0400",-1),g=n("h2",{id:"_0410",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0410","aria-hidden":"true"},"#"),s(" 0410")],-1),y=n("p",null,"// #region 0410",-1),x={href:"https://leetcode.cn/problems/split-array-largest-sum",target:"_blank",rel:"noopener noreferrer"},w=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),L=n("p",null,"// #endregion 0410",-1),N=n("h2",{id:"_0416",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0416","aria-hidden":"true"},"#"),s(" 0416")],-1),q=n("p",null,"// #region 0416",-1),C={href:"https://leetcode.cn/problems/partition-equal-subset-sum",target:"_blank",rel:"noopener noreferrer"},I=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),j=n("p",null,"// #endregion 0416",-1),A=n("h2",{id:"_0429-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0429-✅","aria-hidden":"true"},"#"),s(" 0429 ✅")],-1),V=n("p",null,"// #region 0000",-1),O={href:"https://leetcode.cn/problems/n-ary-tree-level-order-traversal",target:"_blank",rel:"noopener noreferrer"},B={class:"hint-container details"},E=n("summary",null,"💡",-1),T=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},`/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/`),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"levelOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Node"),s(" root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Node"),n("span",{class:"token punctuation"},">")]),s(" queue "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        queue`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" levelCount "),n("span",{class:"token operator"},"="),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" levelList "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("levelCount "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token class-name"},"Node"),s(" node "),n("span",{class:"token operator"},"="),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeFirst"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                levelList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Node"),s(" child "),n("span",{class:"token operator"},":"),s(" node"),n("span",{class:"token punctuation"},"."),s("children"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    queue`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(`
                levelCount `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("levelList"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("p",null,"// #endregion 0429",-1),F=n("h2",{id:"_0442",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0442","aria-hidden":"true"},"#"),s(" 0442")],-1),S=n("p",null,"// #region 0442",-1),U={href:"https://leetcode.cn/problems/find-all-duplicates-in-an-array",target:"_blank",rel:"noopener noreferrer"},D=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),R=n("p",null,"// #endregion 0442",-1),G=n("h2",{id:"_0448",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0448","aria-hidden":"true"},"#"),s(" 0448")],-1),H=n("p",null,"// #region 0448",-1),J={href:"https://leetcode.cn/problems/find-all-numbers-disappeared-in-an-array",target:"_blank",rel:"noopener noreferrer"},K=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),M=n("p",null,"// #endregion 0448",-1),P=n("h2",{id:"_0435",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0435","aria-hidden":"true"},"#"),s(" 0435")],-1),Q=n("p",null,"// #region 0435",-1),W={href:"https://leetcode.cn/problems/non-overlapping-intervals",target:"_blank",rel:"noopener noreferrer"},X=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Y=n("p",null,"// #endregion 0435",-1),Z=n("h2",{id:"_0438",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0438","aria-hidden":"true"},"#"),s(" 0438")],-1),$=n("p",null,"// #region 0438",-1),nn={href:"https://leetcode.cn/problems/find-all-anagrams-in-a-string",target:"_blank",rel:"noopener noreferrer"},sn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),en=n("p",null,"// #endregion 0438",-1),an=n("h2",{id:"_0450",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0450","aria-hidden":"true"},"#"),s(" 0450")],-1),tn=n("p",null,"// #region 0450",-1),ln={href:"https://leetcode.cn/problems/delete-node-in-a-bst",target:"_blank",rel:"noopener noreferrer"},on=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),cn=n("p",null,"// #endregion 0450",-1),rn=n("h2",{id:"_0452",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0452","aria-hidden":"true"},"#"),s(" 0452")],-1),un=n("p",null,"// #region 0452",-1),dn={href:"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons",target:"_blank",rel:"noopener noreferrer"},pn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),_n=n("p",null,"// #endregion 0452",-1),hn=n("h2",{id:"_0460",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0460","aria-hidden":"true"},"#"),s(" 0460")],-1),kn=n("p",null,"// #region 0460",-1),mn={href:"https://leetcode.cn/problems/lfu-cache",target:"_blank",rel:"noopener noreferrer"},bn=n("blockquote",null,[n("p",null,[n("code",null,"get"),s(),n("code",null,"put"),s(" 操作需要 O(1) 的时间复杂度")])],-1),vn=_('<details class="hint-container details"><summary>💡</summary><p>【思路】: 双哈希表</p><ul><li>数据缓存的问题。同 <code>LRU</code> 一样需要哈希表来保证数据存取的 O(1) 的时间复杂度。</li><li>最不经常时间的问题。这个需要为没有数据加上一个 frequency 使用频率计数值来进行标记。关键点在于需要 O(1) 时间复杂度，那么使用</li></ul></details><p>// #endregion 0460</p><h2 id="_0486" tabindex="-1"><a class="header-anchor" href="#_0486" aria-hidden="true">#</a> 0486</h2><p>// #region 0486</p>',4),fn={href:"https://leetcode.cn/problems/predict-the-winner",target:"_blank",rel:"noopener noreferrer"},gn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),yn=n("p",null,"// #endregion 0486",-1),xn=n("h2",{id:"_0493",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0493","aria-hidden":"true"},"#"),s(" 0493")],-1),wn=n("p",null,"// #region 0493",-1),Ln={href:"https://leetcode.cn/problems/reverse-pairs",target:"_blank",rel:"noopener noreferrer"},Nn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),qn=n("p",null,"// #endregion 0493",-1),Cn=n("h2",{id:"_0494",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0494","aria-hidden":"true"},"#"),s(" 0494")],-1),In=n("p",null,"// #region 0494",-1),jn={href:"https://leetcode.cn/problems/target-sum",target:"_blank",rel:"noopener noreferrer"},An=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Vn=n("p",null,"// #endregion 0494",-1),On=n("h2",{id:"_0496",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0496","aria-hidden":"true"},"#"),s(" 0496")],-1),Bn=n("p",null,"// #region 0496",-1),En={href:"https://leetcode.cn/problems/next-greater-element-i",target:"_blank",rel:"noopener noreferrer"},Tn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),zn=n("p",null,"// #endregion 0496",-1);function Fn(Sn,Un){const a=t("ExternalLinkIcon"),o=t("CodeTabs");return u(),d("div",null,[p(" more "),k,m,n("ul",null,[n("li",null,[n("a",b,[s("🟠 400 - 第 N 位数字"),e(a)])])]),v,f,g,y,n("ul",null,[n("li",null,[n("a",x,[s("🔴 410 - 分割数组的最大值"),e(a)])])]),w,L,N,q,n("ul",null,[n("li",null,[n("a",C,[s("🟠 416 - 分割等和子集"),e(a)])])]),I,j,A,V,n("ul",null,[n("li",null,[n("a",O,[s("🟠 429 - N 叉树的层序遍历"),e(a)])])]),n("details",B,[E,e(o,{id:"69",data:[{id:"java"}]},{title0:l(({value:i,isActive:c})=>[s("java")]),tab0:l(({value:i,isActive:c})=>[T]),_:1})]),z,F,S,n("ul",null,[n("li",null,[n("a",U,[s("🟠 442 - 数组中重复的数据"),e(a)])])]),D,R,G,H,n("ul",null,[n("li",null,[n("a",J,[s("🟢 448 - 找到所有数组中消失的数字"),e(a)])])]),K,M,P,Q,n("ul",null,[n("li",null,[n("a",W,[s("🟠 435 - 无重叠区间"),e(a)])])]),X,Y,Z,$,n("ul",null,[n("li",null,[n("a",nn,[s("🟠 438 - 找到字符串中所有字母异位词"),e(a)])])]),sn,en,an,tn,n("ul",null,[n("li",null,[n("a",ln,[s("🟠 450 - 删除二叉搜索树中的节点"),e(a)])])]),on,cn,rn,un,n("ul",null,[n("li",null,[n("a",dn,[s("🟠 452 - 用最少数量的箭引爆气球"),e(a)])])]),pn,_n,hn,kn,n("ul",null,[n("li",null,[n("a",mn,[s("🔴 460 - LFU 缓存"),e(a)]),bn])]),vn,n("ul",null,[n("li",null,[n("a",fn,[s("🟠 486 - 预测赢家"),e(a)])])]),gn,yn,xn,wn,n("ul",null,[n("li",null,[n("a",Ln,[s("🔴 493 - 翻转对"),e(a)])])]),Nn,qn,Cn,In,n("ul",null,[n("li",null,[n("a",jn,[s("🟠 494 - 目标和"),e(a)])])]),An,Vn,On,Bn,n("ul",null,[n("li",null,[n("a",En,[s("🟢 496 - 下一个更大元素 I"),e(a)])])]),Tn,zn])}const Gn=r(h,[["render",Fn],["__file","0x0400.html.vue"]]);export{Gn as default};
