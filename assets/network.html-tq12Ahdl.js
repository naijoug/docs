import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as d,a as c,f as r}from"./app-jZxpMbcW.js";const o={},h=r('<h2 id="网络模型了解么-有哪几种-说说你的看法" tabindex="-1"><a class="header-anchor" href="#网络模型了解么-有哪几种-说说你的看法" aria-hidden="true">#</a> 网络模型了解么？有哪几种？说说你的看法？</h2><h2 id="如果手机应用与服务器通过-tcp-连接-这个时候手机切换为飞行模式-服务器可以短时间内知道到手机离线状态吗" tabindex="-1"><a class="header-anchor" href="#如果手机应用与服务器通过-tcp-连接-这个时候手机切换为飞行模式-服务器可以短时间内知道到手机离线状态吗" aria-hidden="true">#</a> 如果手机应用与服务器通过 <code>TCP</code> 连接，这个时候手机切换为飞行模式，服务器可以短时间内知道到手机离线状态吗？</h2><details class="hint-container details"><summary>💡</summary><p>服务器通过 <code>TCP</code> 短时间内是不能知晓手机的离线状态的。因为 <code>TCP</code> 主要是为了保证数据的可靠传输，通信双方是通过数据交换来了解对方状态。而 <code>TCP</code> 并没有设计心跳检测机制，所有就没有实时检测对方是否离线的能力。</p></details><h2 id="三次握手可以携带数据吗" tabindex="-1"><a class="header-anchor" href="#三次握手可以携带数据吗" aria-hidden="true">#</a> 三次握手可以携带数据吗？</h2><h2 id="打开浏览器-输入网址到看到网站首页都经历那些过程" tabindex="-1"><a class="header-anchor" href="#打开浏览器-输入网址到看到网站首页都经历那些过程" aria-hidden="true">#</a> 打开浏览器，输入网址到看到网站首页都经历那些过程？</h2><h2 id="使用-ssh-连接云服务器-整个网络通信过程" tabindex="-1"><a class="header-anchor" href="#使用-ssh-连接云服务器-整个网络通信过程" aria-hidden="true">#</a> 使用 <code>ssh</code> 连接云服务器，整个网络通信过程？</h2><h2 id="charles-抓包软件的原理" tabindex="-1"><a class="header-anchor" href="#charles-抓包软件的原理" aria-hidden="true">#</a> <code>Charles</code> 抓包软件的原理</h2><details class="hint-container details"><summary>💡</summary><p>可以将它理解成中间人攻击。客户端将 <code>Charles</code> 作为代理服务器(中间人)。客户端所有请求都会先发送给 <code>Charles</code>，<code>Charles</code> 再将客户端的请求转发给服务器。<code>Charles</code> 收到服务器响应之后，再将从服务器收到的回复内容转发给客户端。这样请求和响应数据都被 <code>Charles</code> 记录下来，再通过界面展示即可。</p><p>对于 <code>HTTP</code> 相对来说比较简单，直接进行接收和转发即可。而 <code>HTTPS</code> 中涉及 <code>CA</code> 认证，所以客户端需要进行的操作信任 <code>Charles</code> 的证书，这样通过 <code>Charles</code> 发送给客户端的公钥就可以通过这个证书校验成功，从而完成通信。</p></details>',8);function s(t,i){return a(),d("div",null,[c(" more "),h])}const m=e(o,[["render",s],["__file","network.html.vue"]]);export{m as default};
