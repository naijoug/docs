import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as l,c as a,a as i,b as t,e as d,d as o,f as h}from"./app-_WX39KL7.js";const n={},p=t("blockquote",null,[t("p",null,"Hyper Text Transfer Protocol，超文本传输协议"),t("p",null,"TCP 默认端口 : 80")],-1),s=t("h2",{id:"reference",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),d(" reference")],-1),u={href:"https://github.com/interagent/http-api-design",target:"_blank",rel:"noopener noreferrer"},b={href:"https://httpbin.org",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/postmanlabs/httpbin",target:"_blank",rel:"noopener noreferrer"},f=t("blockquote",null,[t("p",null,"HTTP Request & Response Service, written in Python + Flask.")],-1),_=h('<h2 id="concept" tabindex="-1"><a class="header-anchor" href="#concept" aria-hidden="true">#</a> concept</h2><ul><li><p><code>URL</code></p><blockquote><p>Uniform Resource Locator (统一资源定位器)</p><p><strong>语法规则</strong> : <code>scheme://host.domain:port/path/filename</code></p></blockquote><ul><li><code>scheme</code> : 定义网络服务类型 <ul><li><code>http</code> : 超文本传输协议，普通网页。</li><li><code>https</code> : 安全超文本传输协议，安全加密网页。</li><li><code>ftp</code> : 文件传输协议，文件上传或下载。</li><li><code>file</code> : 访问本机文件。</li></ul></li><li><code>host</code> : 定义主机域 (http默认主机域 : www)</li><li><code>domain</code> : 域名 (google.com)</li><li><code>port</code> : 主机端口号 (http默认端口号 : 80)</li><li><code>path</code> : 资源在中服务器路径</li><li><code>filename</code> : 资源名称</li></ul></li><li><p><code>URL Encoding</code></p><blockquote><p>URL只能使用<code>ASCII</code>字符集来通过英特网进行发送。</p><p>URL中包含的<code>ASCII</code>之外的字符，需要转化为<code>ASCII</code>格式。</p></blockquote><ul><li>非<code>ASCII</code>字符 : 转化为<code>%</code> + <code>两位十六进制数</code></li><li>空格 : 使用<code>+</code>替换</li></ul></li><li><p><code>HTTP</code> 字段信息</p><table><thead><tr><th>字段</th><th>含义</th><th>说明</th></tr></thead><tbody><tr><td><code>Header</code></td><td>请求头</td><td>HTTP客户程序（浏览器），向服务器发送请求的时候必须指明请求类型，一般是GET或者POST</td></tr><tr><td><code>Content-Type</code></td><td>内容类型</td><td>一般是指网页中存在的Content-Type，用于定义网络文件或网络请求的类型</td></tr><tr><td><code>Content-Length</code></td><td>内容长度</td><td>表示请求消息正文的长度</td></tr><tr><td><code>Authorization</code></td><td>授权信息</td><td></td></tr><tr><td><code>Cookie</code></td><td>在服务端生成，发送给客户端，客户端会将Cookie的key/value保存到某个目录下的文本文件内，下次请求同一网站时就发送该Cookie给服务器。在浏览器中非常重要，主要应用于用户登录和购物车等，移动应用开发不建议使用</td><td></td></tr><tr><td><code>User-Agent</code></td><td>浏览器类型</td><td>服务器可以根据浏览器的类型选择推送不同的内容给客户端</td></tr></tbody></table></li><li><p><code>HTTP</code> 请求方式</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>GET</code></td><td>获取指定资源</td></tr><tr><td><code>POST</code></td><td>向指定资源提交数据进行处理请求，在RESTful风格中用于新增资源</td></tr><tr><td><code>HEAD</code></td><td>获取指定资源头部信息</td></tr><tr><td><code>PUT</code></td><td>替换指定资源(不支持浏览器操作)</td></tr><tr><td><code>DELETE</code></td><td>删除指定资源</td></tr><tr><td><code>OPTIONS</code></td><td>允许客户端查看服务器的性能</td></tr><tr><td><code>TRACE</code></td><td>回显服务器收到的请求，主要用于测试或诊断</td></tr><tr><td><code>CONNECT</code></td><td>预留给能够将连接改为管道方式的代理服务器(HTTP代理使用)</td></tr></tbody></table></li><li><p><code>Content-Type</code> 类型</p><table><thead><tr><th><code>Content-Type</code></th><th>浏览器支持</th><th>说明</th></tr></thead><tbody><tr><td><code>application/x-www-form-urlencoded</code></td><td>√</td><td>提交的数据按照key1=val1&amp;key2=val2的方式进行编码</td></tr><tr><td><code>multipart/form-data</code></td><td>√</td><td>采用这种方式上传文件(支持二进制文件)</td></tr><tr><td><code>application/json</code></td><td>×</td><td>表明服务端消息主体是序列化后的JSON字符串</td></tr><tr><td><code>text/xml</code></td><td>×</td><td>文本</td></tr></tbody></table></li><li><p>网络请求状态码</p><table><thead><tr><th>状态码</th><th>说明</th></tr></thead><tbody><tr><td>1xx</td><td>代表临时响应，需要请求者继续执行操作的状态代码。</td></tr><tr><td>2xx</td><td>代表的多是操作成功。</td></tr><tr><td><code>200</code></td><td>请求成功</td></tr><tr><td>3xx</td><td>代表重定向，表示要完成请求，需要进一步操作</td></tr><tr><td>4xx</td><td>代表请求错误，表示请求可能出错，妨碍了服务器的处理。</td></tr><tr><td><code>404</code></td><td>NotFound</td></tr><tr><td>5xx</td><td>代表服务器错误，表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错</td></tr><tr><td><code>500</code></td><td>服务器内部错误</td></tr></tbody></table></li></ul><h2 id="get-vs-post" tabindex="-1"><a class="header-anchor" href="#get-vs-post" aria-hidden="true">#</a> GET vs POST</h2><blockquote><p>幂等性 : 同一方法执行多次和执行一次效果相同</p></blockquote><table><thead><tr><th>类型</th><th>参数位置</th><th>参数长度</th><th>幂等性</th><th>缓存性</th></tr></thead><tbody><tr><td><code>GET</code></td><td>以 ? 拼接</td><td>最长 2048 字符</td><td>幂等</td><td>可缓存</td></tr><tr><td><code>POST</code></td><td>请求体内</td><td>没有限制</td><td>不幂等</td><td>不可缓存</td></tr></tbody></table><h2 id="http-常见报文" tabindex="-1"><a class="header-anchor" href="#http-常见报文" aria-hidden="true">#</a> <code>HTTP</code> 常见报文</h2><table><thead><tr><th>abbr</th><th>full</th><th>description</th></tr></thead><tbody><tr><td><code>SYN</code></td><td>synchronize</td><td>同步报文，用于建立连接</td></tr><tr><td><code>ACK</code></td><td>acknowledge</td><td>确认报文，用于确认已接收</td></tr><tr><td><code>FIN</code></td><td>finish</td><td>传输完成报文，用于结束连接</td></tr><tr><td><code>RST</code></td><td>reset</td><td>重置报文，用于重置连接</td></tr><tr><td><code>PSH</code></td><td>push</td><td>推送报文，用于直接将数据推送给接收端，而不是先放在缓存区</td></tr><tr><td><code>URG</code></td><td>urgent</td><td>紧急报文，用于传输紧急数据，接收端会优先处理该数据</td></tr></tbody></table><h2 id="三次握手-创建连接" tabindex="-1"><a class="header-anchor" href="#三次握手-创建连接" aria-hidden="true">#</a> “三次握手” - 创建连接</h2><ul><li>客户端发给服务端 SYN 报文 =&gt; (服务端: 客户端的发送功能正常)</li><li>服务端接受 SYN 报文之后，给客户端发送 SYN+ACK 报文 =&gt; (客户端: 服务端接受、发送功能正常)</li><li>客户端收到 SYN+ACK 报文之后，给服务度发送 ACK 报文 =&gt; (服务单: 客户端接受功能正常)</li></ul><p>三次握手的核心点 : 开始数据通信前，确认双方发送和接受功能是否都正常。</p><h2 id="四次挥手-断开连接" tabindex="-1"><a class="header-anchor" href="#四次挥手-断开连接" aria-hidden="true">#</a> “四次挥手” - 断开连接</h2><ul><li>一方完成数据发送发给另一方 FIN 报文 (一方: 数据传输完成)</li><li>另一方接受 FIN 报文之后，给对方发送 ACK 报文 (另一方: 确认对方数据传输完成，并已关闭)</li><li>另一方进行数据确认已完成，则也给对方发送 FIN 报文 (另一方: 如果有数据还未传输，传输完，保证数据传输完成。)</li><li>对方收到 FIN 报文之后，回复 ACK 报文 (一方: 确认对方数据传输完成)</li></ul><p>四次挥手的核心点 : 断开连接前，确认双方数据均发送完毕。</p>',13);function m(x,C){const e=c("ExternalLinkIcon");return l(),a("div",null,[i(" more "),p,s,t("ul",null,[t("li",null,[t("a",u,[d("HTTP API Design Guide"),o(e)])]),t("li",null,[t("a",b,[d("httpbin"),o(e)]),d(" 👉🏻 "),t("a",T,[d("🐙"),o(e)]),f])]),_])}const y=r(n,[["render",m],["__file","http.html.vue"]]);export{y as default};
