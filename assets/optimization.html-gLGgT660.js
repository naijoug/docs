import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as d,a as i,f as c}from"./app-3jL1FZzb.js";const r={},s=c('<h2 id="优化你一般从哪几方面着手" tabindex="-1"><a class="header-anchor" href="#优化你一般从哪几方面着手" aria-hidden="true">#</a> 优化你一般从哪几方面着手？</h2><h2 id="❓uitableview-优化方案" tabindex="-1"><a class="header-anchor" href="#❓uitableview-优化方案" aria-hidden="true">#</a> ❓<code>UITableView</code> 优化方案</h2><details class="hint-container details"><summary>💡</summary><ul><li>最核心的优化其实苹果已经帮我们做了 <code>Cell</code> 的复用机制。</li><li>对于不等高 Cell，缓存 Cell 高度应该基本操作，还可以配合高度预先计算一起使用。</li><li>Cell 内部的优化，就是比较通用的视图优化，图片圆角处理等。</li><li>滚动过程中，如果涉及 Cell 中数据刷新，比如图片下载，或者定时器刷新数据等。需要根据是否出现在屏幕中，进行网络请求的暂停，定时器的暂停等。</li></ul></details><h2 id="❓ios-启动优化方案-如何检测-如何监控" tabindex="-1"><a class="header-anchor" href="#❓ios-启动优化方案-如何检测-如何监控" aria-hidden="true">#</a> ❓<code>iOS</code> 启动优化方案，如何检测，如何监控？</h2><details class="hint-container details"><summary>💡</summary></details><h2 id="❓ios-界面卡顿优化方案-如何检测-如何监控" tabindex="-1"><a class="header-anchor" href="#❓ios-界面卡顿优化方案-如何检测-如何监控" aria-hidden="true">#</a> ❓<code>iOS</code> 界面卡顿优化方案，如何检测，如何监控？</h2><details class="hint-container details"><summary>💡</summary><p><code>GPU</code> 的刷新率超过了屏幕 <code>60Hz</code> 刷新率</p></details><h3 id="ios-耗电量优化方案-如何检测-如何监控" tabindex="-1"><a class="header-anchor" href="#ios-耗电量优化方案-如何检测-如何监控" aria-hidden="true">#</a> <code>iOS</code> 耗电量优化方案，如何检测，如何监控？</h3><h3 id="ios-网络优化方案-如何检测-如何监控" tabindex="-1"><a class="header-anchor" href="#ios-网络优化方案-如何检测-如何监控" aria-hidden="true">#</a> <code>iOS</code> 网络优化方案，如何检测，如何监控？</h3><h2 id="ios-安装包体积优化方案" tabindex="-1"><a class="header-anchor" href="#ios-安装包体积优化方案" aria-hidden="true">#</a> <code>iOS</code> 安装包体积优化方案？</h2><h2 id="调试" tabindex="-1"><a class="header-anchor" href="#调试" aria-hidden="true">#</a> 调试</h2><h3 id="bad-access-在什么情况下出现-如何调试-bad-access-错误" tabindex="-1"><a class="header-anchor" href="#bad-access-在什么情况下出现-如何调试-bad-access-错误" aria-hidden="true">#</a> <code>BAD_ACCESS</code> 在什么情况下出现？如何调试 <code>BAD_ACCESS</code> 错误？</h3><h3 id="lldb-gdb-常用的调试命令" tabindex="-1"><a class="header-anchor" href="#lldb-gdb-常用的调试命令" aria-hidden="true">#</a> <code>lldb (gdb)</code> 常用的调试命令？</h3>',13);function o(h,t){return a(),d("div",null,[i(" more "),s])}const m=e(r,[["render",o],["__file","optimization.html.vue"]]);export{m as default};
