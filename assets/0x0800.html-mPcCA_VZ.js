import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as d,c as u,a as p,b as n,e as s,d as e,w as t}from"./app-J1yPHcPX.js";const _={},h=n("h2",{id:"_0800",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0800","aria-hidden":"true"},"#"),s(" 0800")],-1),m=n("p",null,"// #region 0800",-1),k={href:"https://leetcode.cn/problems/similar-rgb-color",target:"_blank",rel:"noopener noreferrer"},b=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),v=n("p",null,"// #endregion 0800",-1),f=n("h2",{id:"_0828",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0828","aria-hidden":"true"},"#"),s(" 0828")],-1),g=n("p",null,"// #region 0828",-1),x={href:"https://leetcode.cn/problems/count-unique-characters-of-all-substrings-of-a-given-string",target:"_blank",rel:"noopener noreferrer"},w=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),y=n("p",null,"// #endregion 0828",-1),N=n("h2",{id:"_0855",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0855","aria-hidden":"true"},"#"),s(" 0855")],-1),L=n("p",null,"// #region 0855",-1),j={href:"https://leetcode.cn/problems/exam-room",target:"_blank",rel:"noopener noreferrer"},C=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),I=n("p",null,"// #endregion 0855",-1),A=n("h2",{id:"_0870",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0870","aria-hidden":"true"},"#"),s(" 0870")],-1),B=n("p",null,"// #region 0870",-1),V={href:"https://leetcode.cn/problems/advantage-shuffle",target:"_blank",rel:"noopener noreferrer"},E=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),T=n("p",null,"// #endregion 0870",-1),q=n("h2",{id:"_0875",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0875","aria-hidden":"true"},"#"),s(" 0875")],-1),D=n("p",null,"// #region 0875",-1),S={href:"https://leetcode.cn/problems/koko-eating-bananas",target:"_blank",rel:"noopener noreferrer"},G=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),R=n("p",null,"// #endregion 0875",-1),z=n("h2",{id:"_0876-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0876-✅","aria-hidden":"true"},"#"),s(" 0876 ✅")],-1),F=n("p",null,"// #region 0876",-1),H={href:"https://leetcode.cn/problems/middle-of-the-linked-list/",target:"_blank",rel:"noopener noreferrer"},J=n("blockquote",null,[n("p",null,"给定一个单链表，返回链表的中间节点。")],-1),K={class:"hint-container details"},M=n("summary",null,"💡",-1),O=n("p",null,"【思路】使用快慢指针，快指针每次走两步，慢指针每次走一步。当快指针走完时",-1),P=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     ListNode next;
 *     ListNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; "),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val, ListNode next) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; this.next = next; "),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token function"},"middleNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" fast "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" slow "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 需要校验 fast.next 为空，表明已经是最后一个节点"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" fast "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"&&"),s(" fast"),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// fast 未走到最后，fast 走两步，slow 走一步"),s(`
            fast `),n("span",{class:"token operator"},"="),s(" fast"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            slow `),n("span",{class:"token operator"},"="),s(" slow"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" slow"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token comment"},`/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init() { self.val = 0; self.next = nil; }
 *     public init(_ val: Int) { self.val = val; self.next = nil; }
 *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }
 * }
 */`),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"middleNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" head"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" p "),n("span",{class:"token operator"},"="),s(` head
        `),n("span",{class:"token keyword"},"var"),s(" mid "),n("span",{class:"token operator"},"="),s(` head
        `),n("span",{class:"token keyword"},"while"),s(" p"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token nil constant"},"nil"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// swift 的可选类型，简化了 p 指针边界条件的判断"),s(`
            p `),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},"."),s(`next
            mid `),n("span",{class:"token operator"},"="),s(" mid"),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},"."),s(`next
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` mid
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("p",null,"// #endregion 0876",-1),W=n("h2",{id:"_0877",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0877","aria-hidden":"true"},"#"),s(" 0877")],-1),X=n("p",null,"// #region 0877",-1),Y={href:"https://leetcode.cn/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},Z=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),$=n("p",null,"// #endregion 0877",-1),nn=n("h2",{id:"_0886",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0886","aria-hidden":"true"},"#"),s(" 0886")],-1),sn=n("p",null,"// #region 0886",-1),en={href:"https://leetcode.cn/problems/possible-bipartition",target:"_blank",rel:"noopener noreferrer"},an=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),tn=n("p",null,"// #endregion 0886",-1),ln=n("h2",{id:"_0887",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0887","aria-hidden":"true"},"#"),s(" 0887")],-1),on=n("p",null,"// #region 0887",-1),cn={href:"https://leetcode.cn/problems/super-egg-drop",target:"_blank",rel:"noopener noreferrer"},rn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),dn=n("p",null,"// #endregion 0887",-1),un=n("h2",{id:"_0889",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0889","aria-hidden":"true"},"#"),s(" 0889")],-1),pn=n("p",null,"// #region 0889",-1),_n={href:"https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-postorder-traversal",target:"_blank",rel:"noopener noreferrer"},hn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),mn=n("p",null,"// #endregion 0889",-1);function kn(bn,vn){const a=i("ExternalLinkIcon"),c=i("CodeTabs");return d(),u("div",null,[p(" more "),h,m,n("ul",null,[n("li",null,[n("a",k,[s("🟢 800 - 相似 RGB 颜色"),e(a)])])]),b,v,f,g,n("ul",null,[n("li",null,[n("a",x,[s("🔴 828 - 统计子串中的唯一字符"),e(a)])])]),w,y,N,L,n("ul",null,[n("li",null,[n("a",j,[s("🟠 855 - 考场就座"),e(a)])])]),C,I,A,B,n("ul",null,[n("li",null,[n("a",V,[s("🟠 870 - 优势洗牌"),e(a)])])]),E,T,q,D,n("ul",null,[n("li",null,[n("a",S,[s("🟠 875 - 爱吃香蕉的珂珂"),e(a)])])]),G,R,z,F,n("ul",null,[n("li",null,[n("a",H,[s("🟢 876 链表的中间节点"),e(a)]),J])]),n("details",K,[M,O,e(c,{id:"113",data:[{id:"java"},{id:"swift"}]},{title0:t(({value:l,isActive:o})=>[s("java")]),title1:t(({value:l,isActive:o})=>[s("swift")]),tab0:t(({value:l,isActive:o})=>[P]),tab1:t(({value:l,isActive:o})=>[Q]),_:1})]),U,W,X,n("ul",null,[n("li",null,[n("a",Y,[s("🟠 877 - 石子游戏"),e(a)])])]),Z,$,nn,sn,n("ul",null,[n("li",null,[n("a",en,[s("🟠 886 - 可能的二分法"),e(a)])])]),an,tn,ln,on,n("ul",null,[n("li",null,[n("a",cn,[s("🔴 887 - 鸡蛋掉落"),e(a)])])]),rn,dn,un,pn,n("ul",null,[n("li",null,[n("a",_n,[s("🟠 889 - 根据前序和后序遍历构造二叉树"),e(a)])])]),hn,mn])}const xn=r(_,[["render",kn],["__file","0x0800.html.vue"]]);export{xn as default};
