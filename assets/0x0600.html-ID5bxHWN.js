import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as u,c as d,a as p,b as n,e,d as s,w as t}from"./app-cpyxwLMh.js";const _={},h=n("h2",{id:"_0600",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0600","aria-hidden":"true"},"#"),e(" 0600")],-1),k=n("p",null,"// #region 0600",-1),m={href:"https://leetcode.cn/problems/non-negative-integers-without-consecutive-ones",target:"_blank",rel:"noopener noreferrer"},b=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),v=n("p",null,"// #endregion 0600",-1),f=n("h2",{id:"_0633",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0633","aria-hidden":"true"},"#"),e(" 0633")],-1),g=n("p",null,"// #region 0633",-1),y={href:"https://leetcode.cn/problems/sum-of-square-numbers",target:"_blank",rel:"noopener noreferrer"},x=n("blockquote",null,[n("p",null,[e("给定一个非负整数 c ，判断是否存在两个整数 a 和 b，使得 "),n("code",null,"a² + b² = c"),e(" ？")])],-1),w={class:"hint-container details"},j=n("summary",null,"💡",-1),N=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),T=n("p",null,"// #endregion 0633",-1),q=n("h2",{id:"_0637-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0637-✅","aria-hidden":"true"},"#"),e(" 0637 ✅")],-1),L=n("p",null,"// #region 0637",-1),A={href:"https://leetcode.cn/problems/average-of-levels-in-binary-tree",target:"_blank",rel:"noopener noreferrer"},C=n("pre",null,[n("code",null,`  🌰
      输入：root = [3,9,20,null,null,15,7]
      输出：[3, 14.5, 11]
          3
         / \\
        9  20
           / \\
          15  7 
`)],-1),E={class:"hint-container details"},I=n("summary",null,"💡",-1),S=n("p",null,"【思路】按照层序遍历思路，计算每一层的平均值进行返回",-1),V=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * Definition for a binary tree node.
 * public class TreeNode `),n("span",{class:"token punctuation"},"{"),e(`
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),e(`
 *     TreeNode(int val) `),n("span",{class:"token punctuation"},"{"),e(" this.val = val; "),n("span",{class:"token punctuation"},"}"),e(`
 *     TreeNode(int val, TreeNode left, TreeNode right) `),n("span",{class:"token punctuation"},"{"),e(`
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     `),n("span",{class:"token punctuation"},"}"),e(`
 * `),n("span",{class:"token punctuation"},"}"),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Solution"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token function"},"averageOfLevels"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),e(" root"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Double"),n("span",{class:"token punctuation"},">")]),e(" result "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("root "),n("span",{class:"token operator"},"=="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token keyword"},"return"),e(" result"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},">")]),e(" queue "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        queue`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("root"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),e("queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isEmpty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token keyword"},"int"),e(" count "),n("span",{class:"token operator"},"="),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"int"),e(" levelCount "),n("span",{class:"token operator"},"="),e(" count"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"double"),e(" levelSum "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e("count "),n("span",{class:"token operator"},">"),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
                `),n("span",{class:"token class-name"},"TreeNode"),e(" node "),n("span",{class:"token operator"},"="),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeFirst"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
                levelSum `),n("span",{class:"token operator"},"+="),e(" node"),n("span",{class:"token punctuation"},"."),e("val"),n("span",{class:"token punctuation"},";"),e(`
                `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("left "),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
                `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("right "),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("node"),n("span",{class:"token punctuation"},"."),e("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
                count `),n("span",{class:"token operator"},"-="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(`
            result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),e("levelSum"),n("span",{class:"token operator"},"/"),e("levelCount"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token keyword"},"return"),e(" result"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=n("p",null,"// #endregion 0637",-1),D=n("h2",{id:"_0645",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0645","aria-hidden":"true"},"#"),e(" 0645")],-1),z=n("p",null,"// #region 0645",-1),F={href:"https://leetcode.cn/problems/set-mismatch",target:"_blank",rel:"noopener noreferrer"},O=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),G=n("p",null,"// #endregion 0645",-1),H=n("h2",{id:"_0648",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0648","aria-hidden":"true"},"#"),e(" 0648")],-1),J=n("p",null,"// #region 0648",-1),K={href:"https://leetcode.cn/problems/replace-words",target:"_blank",rel:"noopener noreferrer"},M=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),P=n("p",null,"// #endregion 0648",-1),Q=n("h2",{id:"_0651",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0651","aria-hidden":"true"},"#"),e(" 0651")],-1),R=n("p",null,"// #region 0651",-1),U={href:"https://leetcode.cn/problems/4-keys-keyboard",target:"_blank",rel:"noopener noreferrer"},W=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),X=n("p",null,"// #endregion 0651",-1),Y=n("h2",{id:"_0652",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0652","aria-hidden":"true"},"#"),e(" 0652")],-1),Z=n("p",null,"// #region 0652",-1),$={href:"https://leetcode.cn/problems/find-duplicate-subtrees",target:"_blank",rel:"noopener noreferrer"},nn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),en=n("p",null,"// #endregion 0652",-1),sn=n("h2",{id:"_0654",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0654","aria-hidden":"true"},"#"),e(" 0654")],-1),an=n("p",null,"// #region 0654",-1),tn={href:"https://leetcode.cn/problems/maximum-binary-tree",target:"_blank",rel:"noopener noreferrer"},on=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ln=n("p",null,"// #endregion 0654",-1),cn=n("h2",{id:"_0659",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0659","aria-hidden":"true"},"#"),e(" 0659")],-1),rn=n("p",null,"// #region 0659",-1),un={href:"https://leetcode.cn/problems/split-array-into-consecutive-subsequences",target:"_blank",rel:"noopener noreferrer"},dn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),pn=n("p",null,"// #endregion 0659",-1),_n=n("h2",{id:"_0672",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0672","aria-hidden":"true"},"#"),e(" 0672")],-1),hn=n("p",null,"// #region 0672",-1),kn={href:"https://leetcode.cn/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},mn=n("blockquote",null,[n("p",null,[e("有 n 个灯泡，四个开关。开关1，控制所有灯泡反转(开变为关，关变为开)；开关2，控制所有偶数灯泡反转；开关3，控制所有奇数灯泡反转；开关4，控制 "),n("code",null,"3*i + 1"),e(" 的灯泡反转。给定按压次数，请问一种能按出几种可能开关状态？")])],-1),bn=n("pre",null,[n("code",null,`  🌰
      输入：n = 3, presses = 1
      输出：4
      解释：状态可以是：
      - 按压开关 1 ，[关, 关, 关]
      - 按压开关 2 ，[关, 开, 关]
      - 按压开关 3 ，[开, 关, 开]
      - 按压开关 4 ，[关, 开, 开]
`)],-1),vn={class:"hint-container details"},fn=n("summary",null,"💡",-1),gn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),yn=n("p",null,"// #endregion 0672",-1),xn=n("h2",{id:"_0677",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0677","aria-hidden":"true"},"#"),e(" 0677")],-1),wn=n("p",null,"// #region 0677",-1),jn={href:"https://leetcode.cn/problems/map-sum-pairs",target:"_blank",rel:"noopener noreferrer"},Nn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Tn=n("p",null,"// #endregion 0677",-1),qn=n("h2",{id:"_0680-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0680-✅","aria-hidden":"true"},"#"),e(" 0680 ✅")],-1),Ln=n("p",null,"// #region 0680",-1),An={href:"https://leetcode.cn/problems/valid-palindrome-ii",target:"_blank",rel:"noopener noreferrer"},Cn=n("blockquote",null,[n("p",null,"给定一个字符串，判断改字符(在最多可以删除一个字符的情况下)是否可以成为回文串。")],-1),En={class:"hint-container details"},In=n("summary",null,"💡",-1),Sn=n("p",null,"// #endregion 0680",-1),Vn=n("h2",{id:"_0694",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0694","aria-hidden":"true"},"#"),e(" 0694")],-1),Bn=n("p",null,"// #region 0694",-1),Dn={href:"https://leetcode.cn/problems/number-of-distinct-islands",target:"_blank",rel:"noopener noreferrer"},zn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Fn=n("p",null,"// #endregion 0694",-1),On=n("h2",{id:"_0695",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0695","aria-hidden":"true"},"#"),e(" 0695")],-1),Gn=n("p",null,"// #region 0695",-1),Hn={href:"https://leetcode.cn/problems/max-area-of-island",target:"_blank",rel:"noopener noreferrer"},Jn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Kn=n("p",null,"// #endregion 0695",-1),Mn=n("h2",{id:"_0698",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0698","aria-hidden":"true"},"#"),e(" 0698")],-1),Pn=n("p",null,"// #region 0698",-1),Qn={href:"https://leetcode.cn/problems/partition-to-k-equal-sum-subsets",target:"_blank",rel:"noopener noreferrer"},Rn={class:"hint-container details"},Un=n("summary",null,"💡",-1),Wn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Xn=n("p",null,"// #endregion 0698",-1);function Yn(Zn,$n){const a=c("ExternalLinkIcon"),i=c("CodeTabs");return u(),d("div",null,[p(" more "),h,k,n("ul",null,[n("li",null,[n("a",m,[e("🔴 600 - 不含连续1的非负整数"),s(a)])])]),b,v,f,g,n("ul",null,[n("li",null,[n("a",y,[e("🟠 633 - 平方数之和"),s(a)]),x])]),n("details",w,[j,s(i,{id:"38",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[N]),_:1})]),T,q,L,n("ul",null,[n("li",null,[n("p",null,[n("a",A,[e("🟢 637 - 二叉树的层平均值"),s(a)])]),C])]),n("details",E,[I,S,s(i,{id:"65",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[V]),_:1})]),B,D,z,n("ul",null,[n("li",null,[n("a",F,[e("🟢 645 - 错误的集合"),s(a)])])]),O,G,H,J,n("ul",null,[n("li",null,[n("a",K,[e("🟠 648 - 单词替换"),s(a)])])]),M,P,Q,R,n("ul",null,[n("li",null,[n("a",U,[e("🟠 651 - 4键键盘"),s(a)])])]),W,X,Y,Z,n("ul",null,[n("li",null,[n("a",$,[e("🟠 652 - 寻找重复的子树"),s(a)])])]),nn,en,sn,an,n("ul",null,[n("li",null,[n("a",tn,[e("🟠 654 - 最大二叉树"),s(a)])])]),on,ln,cn,rn,n("ul",null,[n("li",null,[n("a",un,[e("🟠 659 - 分割数组为连续子序列"),s(a)])])]),dn,pn,_n,hn,n("ul",null,[n("li",null,[n("p",null,[n("a",kn,[e("🟠 672 - 灯泡开关 Ⅱ"),s(a)])]),mn,bn])]),n("details",vn,[fn,s(i,{id:"202",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[gn]),_:1})]),yn,xn,wn,n("ul",null,[n("li",null,[n("a",jn,[e("🟠 677 - 键值映射"),s(a)])])]),Nn,Tn,qn,Ln,n("ul",null,[n("li",null,[n("a",An,[e("🟢 680 - 验证回文串 II"),s(a)]),Cn])]),n("details",En,[In,s(i,{id:"248",data:[]})]),Sn,Vn,Bn,n("ul",null,[n("li",null,[n("a",Dn,[e("🟠 694 - 不同岛屿的数量"),s(a)])])]),zn,Fn,On,Gn,n("ul",null,[n("li",null,[n("a",Hn,[e("🟠 695 - 岛屿的最大面积"),s(a)])])]),Jn,Kn,Mn,Pn,n("ul",null,[n("li",null,[n("a",Qn,[e("🟠 698 - 划分为k个相等的子集"),s(a)])])]),n("details",Rn,[Un,s(i,{id:"308",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[e("java")]),tab0:t(({value:o,isActive:l})=>[Wn]),_:1})]),Xn])}const se=r(_,[["render",Yn],["__file","0x0600.html.vue"]]);export{se as default};
