import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as r,a as o,f as t}from"./app-iOSvjNff.js";const a={},i=t("<p>大多数据编程语言来说，基础的数据类型就是 <code>int</code>、<code>float</code>、<code>double</code>、<code>char</code>、<code>string</code>、<code>bool</code>。基础数据结构就是：数组、链表。高级一点的数据结构有：栈、队列、集合、哈希表。再复杂一些的有：二叉树、图。</p><p>宏观一点理解，数据结构是用来描述这些基础数据类型内存布局，也可以理解为是基础数据类型的容器。而最为底层的数据结构就是数组和链表，数组是描述了一块存储相同数据类型的连续内存空间，而链表则是存储数据类型并通过指针连接的非连续内存空间。而且其它的数据结构都是基于数组和链表来实现的一种数据结构的描述。例如栈、队列、二叉树、图，可以通过数组实现，也可以通过链表实现；哈希表则是通过数组和链表结合实现。</p>",2),c=t('<h2 id="数据结构一览" tabindex="-1"><a class="header-anchor" href="#数据结构一览" aria-hidden="true">#</a> 数据结构一览</h2><ul><li>线性表 (Linear List) : 数据的排列特征是按照一条线排列。数组、链表、栈、队列。栈和队列是操作受限的线性表。</li><li>非线性表 : 数据排布非线性结构。二叉树、堆、图。</li></ul><table><thead><tr><th>data structure</th><th>description</th></tr></thead><tbody><tr><td>string / array</td><td>字符串 / 数组</td></tr><tr><td>stack / queue</td><td>栈 / 队列</td></tr><tr><td>linked list</td><td>链表</td></tr><tr><td>binary tree / tree</td><td>二叉树 / 树</td></tr><tr><td>graph</td><td>图</td></tr><tr><td>hash table</td><td>哈希表</td></tr><tr><td>heap (priority queue)</td><td>堆 (优先级队列)</td></tr><tr><td>binary search tree (BST)</td><td>二叉搜索树</td></tr><tr><td>trie</td><td>前缀树 (字典树)</td></tr><tr><td>union-find disjoint set</td><td>并查集</td></tr><tr><td>bloom filter</td><td>布隆过滤器</td></tr></tbody></table>',3);function n(s,l){return e(),r("div",null,[i,o(" more "),c])}const _=d(a,[["render",n],["__file","index.html.vue"]]);export{_ as default};
