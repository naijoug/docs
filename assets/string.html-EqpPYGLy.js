import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as u,c as r,a as k,d as a,w as t,b as n,e as s}from"./app-enJ7wihl.js";const d={},m=n("p",null,"对于大部分编程语言来说，字符串就是字符数组，所以使用技巧上与数组大致相同。",-1),h=n("h2",{id:"字符串的常用操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#字符串的常用操作","aria-hidden":"true"},"#"),s(" 字符串的常用操作")],-1),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"String"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Hello, world!"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// 获取字符串长度"),s(`
`),n("span",{class:"token keyword"},"int"),s(" len "),n("span",{class:"token operator"},"="),s(" str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 13"),s(`
`),n("span",{class:"token comment"},"// 获取指定索引字符"),s(`
`),n("span",{class:"token keyword"},"char"),s(" c "),n("span",{class:"token operator"},"="),s("  str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charAt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// ,"),s(`
`),n("span",{class:"token comment"},"// 判断字符类型"),s(`
`),n("span",{class:"token keyword"},"boolean"),s(" isDigit "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isDigit"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"// 是否为数字字符"),s(`
`),n("span",{class:"token keyword"},"boolean"),s(" isLetter "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isLetter"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 是否为字母字符"),s(`
`),n("span",{class:"token keyword"},"boolean"),s(" isLetterOrDigit "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isLetterOrDigit"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 字符是字母或者数字"),s(`
`),n("span",{class:"token comment"},"// 大小写转换"),s(`
`),n("span",{class:"token class-name"},"String"),s(" upperString "),n("span",{class:"token operator"},"="),s(" str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toUpperCase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 字母全部转化为大写"),s(`
`),n("span",{class:"token class-name"},"String"),s(" lowerString "),n("span",{class:"token operator"},"="),s(" str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLowercase"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 字母全部转化为小写"),s(`
`),n("span",{class:"token keyword"},"char"),s(" upperC "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toUpperCase"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 转化为大写字符"),s(`
`),n("span",{class:"token keyword"},"char"),s(" lowerC "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLowerCase"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 转化为小写字符"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("s "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'Hello, world!'"),s(`
`),n("span",{class:"token comment"},"# 获取字符串长度"),s(`
l `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 13"),s(`
`),n("span",{class:"token comment"},"# 获取指定索引字符"),s(`
c `),n("span",{class:"token operator"},"="),s(" s"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token comment"},"# ,"),s(`
`),n("span",{class:"token comment"},"# 判断字符类型"),s(`
is_alapha `),n("span",{class:"token operator"},"="),s(" c"),n("span",{class:"token punctuation"},"."),s("isalpha"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 字符是否是字母"),s(`
is_digit `),n("span",{class:"token operator"},"="),s(" c"),n("span",{class:"token punctuation"},"."),s("isdigit"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 字符是否是数字"),s(`
`),n("span",{class:"token comment"},"# 大小写转换"),s(`
upper_s `),n("span",{class:"token operator"},"="),s(" s"),n("span",{class:"token punctuation"},"."),s("upper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 字母全部转化为大写"),s(`
lower_s `),n("span",{class:"token operator"},"="),s(" s"),n("span",{class:"token punctuation"},"."),s("lower"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 字母全部转化为小写"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("h2",{id:"palindrome-回文串",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#palindrome-回文串","aria-hidden":"true"},"#"),s(),n("code",null,"Palindrome"),s(" - “回文串”")],-1),f=n("blockquote",null,[n("p",null,"回文串 : 字符串收尾形成对称")],-1),g=n("h3",{id:"判断回文串",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#判断回文串","aria-hidden":"true"},"#"),s(" 判断回文串")],-1),w=n("p",null,"这个类型的题目根据一定的条件，判断字符串是否是一个回文串。",-1),y={href:"https://leetcode.cn/problems/valid-palindrome",target:"_blank",rel:"noopener noreferrer"},C=n("blockquote",null,[n("p",null,"判断字符串中的字母(大小不敏感，大写字母与小字可以看作相等)和数字是否为回文串，字符中的的其它字符不参与回文串校验。")],-1),x={class:"hint-container details"},L=n("summary",null,"💡",-1),A=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPalindrome"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),s(" s"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" right "),n("span",{class:"token operator"},"="),s(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"length"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" left "),n("span",{class:"token operator"},"<"),s(" right "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 寻找左边第一个字母或数字"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" left "),n("span",{class:"token operator"},"<"),s(" right "),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token operator"},"!"),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isLetterOrDigit"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charAt"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            left `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 寻找右边第一个字母或数字"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" left "),n("span",{class:"token operator"},"<"),s(" right "),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token operator"},"!"),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isLetterOrDigit"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charAt"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            right `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" left "),n("span",{class:"token operator"},">="),s(" right "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 左右指针，判断字符是否相等"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLowerCase"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charAt"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token class-name"},"Character"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLowerCase"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"charAt"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 不相等，则表明不是回文串"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(` 
        `),n("span",{class:"token comment"},"// 相等，跳转到下一个字符进行匹配"),s(`
        left `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        right `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j={href:"https://leetcode.cn/problems/valid-palindrome-ii",target:"_blank",rel:"noopener noreferrer"},S=n("blockquote",null,[n("p",null,"给定一个字符串，判断改字符(在最多可以删除一个字符的情况下)是否可以成为回文串。")],-1),D={class:"hint-container details"},q=n("summary",null,"💡",-1),I={href:"https://leetcode.cn/problems/split-two-strings-to-make-palindrome",target:"_blank",rel:"noopener noreferrer"},N=n("blockquote",null,[n("p",null,"a、b 两个字符串长度相同，将两个字符串从相同位置分割，a 的前半部分与 b 的后半部分，或者 b 的前半部分与 a 的后半部分拼接是否可以组成回文串。")],-1),O={class:"hint-container details"},V=n("summary",null,"💡",-1),B={href:"https://leetcode.cn/problems/longest-palindromic-substring/",target:"_blank",rel:"noopener noreferrer"},E=n("blockquote",null,[n("p",null,"给定一个字符串，返回该字符串中最长的回文串。")],-1),T=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),H=n("h3",{id:"分割回文串",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#分割回文串","aria-hidden":"true"},"#"),s(" 分割回文串")],-1);function P(U,z){const c=p("CodeTabs"),l=p("ExternalLinkIcon");return u(),r("div",null,[m,k(" more "),h,a(c,{id:"7",data:[{id:"java"},{id:"python"}]},{title0:t(({value:e,isActive:o})=>[s("java")]),title1:t(({value:e,isActive:o})=>[s("python")]),tab0:t(({value:e,isActive:o})=>[b]),tab1:t(({value:e,isActive:o})=>[v]),_:1}),_,f,g,w,n("ul",null,[n("li",null,[n("a",y,[s("🟢 125 - 验证回文串"),a(l)]),C])]),n("details",x,[L,a(c,{id:"43",data:[{id:"java"}]},{title0:t(({value:e,isActive:o})=>[s("java")]),tab0:t(({value:e,isActive:o})=>[A]),_:1})]),n("ul",null,[n("li",null,[n("a",j,[s("🟢 680 - 验证回文串 II"),a(l)]),S])]),n("details",D,[q,a(c,{id:"64",data:[]})]),n("ul",null,[n("li",null,[n("a",I,[s("🟡 1616 - 分割两个字符串得到回文串"),a(l)]),N])]),n("details",O,[V,a(c,{id:"86",data:[]})]),n("ul",null,[n("li",null,[n("a",B,[s("🟠 5 - 最长回文子串"),a(l)]),E])]),T,H])}const J=i(d,[["render",P],["__file","string.html.vue"]]);export{J as default};
