import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as u,c as d,a as p,b as n,e,d as s,w as a}from"./app-R4SeOK86.js";const _={},h=n("h2",{id:"_0200",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0200","aria-hidden":"true"},"#"),e(" 0200")],-1),k=n("p",null,"// #region 0200",-1),m={href:"https://leetcode.cn/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},b=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),v=n("p",null,"// #endregion 0200",-1),f=n("h2",{id:"_0203-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0203-✅","aria-hidden":"true"},"#"),e(" 0203 ✅")],-1),g=n("p",null,"// #region 0203",-1),y={href:"https://leetcode.cn/problems/remove-linked-list-elements",target:"_blank",rel:"noopener noreferrer"},w=n("pre",null,[n("code",null,`  示例：
      输入：head = [1,2,6,3,4,5,6], val = 6
      输出：[1,2,3,4,5]
`)],-1),x={class:"hint-container details"},j=n("summary",null,"💡",-1),N=n("p",null,"【思路】双指针法",-1),I=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),e(`
 *     int val;
 *     ListNode next;
 *     ListNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),e(`
 *     ListNode(int val) `),n("span",{class:"token punctuation"},"{"),e(" this.val = val; "),n("span",{class:"token punctuation"},"}"),e(`
 *     ListNode(int val, ListNode next) `),n("span",{class:"token punctuation"},"{"),e(" this.val = val; this.next = next; "),n("span",{class:"token punctuation"},"}"),e(`
 * `),n("span",{class:"token punctuation"},"}"),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Solution"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token class-name"},"ListNode"),e(),n("span",{class:"token function"},"removeElements"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),e(" head"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token keyword"},"int"),e(" val"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token class-name"},"ListNode"),e(" dummy "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        dummy`),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"="),e(" head"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token class-name"},"ListNode"),e(" fast "),n("span",{class:"token operator"},"="),e(" head"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token class-name"},"ListNode"),e(" slow "),n("span",{class:"token operator"},"="),e(" dummy"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e(" fast"),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),e(),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e(" fast"),n("span",{class:"token punctuation"},"."),e("val "),n("span",{class:"token operator"},"!="),e(" val "),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
                `),n("span",{class:"token comment"},"// 不等于目标值时，将慢节点后继节点指向快指针节点"),e(`
                slow`),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"="),e(" fast"),n("span",{class:"token punctuation"},";"),e(`
                slow `),n("span",{class:"token operator"},"="),e(" slow"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(`
            fast `),n("span",{class:"token operator"},"="),e(" fast"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token comment"},"// 如果已经是最后节点，需要将 slow 后继节点设为 null"),e(`
            `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e(" fast "),n("span",{class:"token operator"},"=="),e(),n("span",{class:"token keyword"},"null"),e(),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
                slow`),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token keyword"},"return"),e(" dummy"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("p",null,"// #endregion 0203",-1),q=n("h2",{id:"_0204",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0204","aria-hidden":"true"},"#"),e(" 0204")],-1),A=n("p",null,"// #region 0204",-1),C={href:"https://leetcode.cn/problems/count-primes",target:"_blank",rel:"noopener noreferrer"},V=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),B=n("p",null,"// #endregion 0204",-1),E=n("h2",{id:"_0206",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0206","aria-hidden":"true"},"#"),e(" 0206")],-1),O=n("p",null,"// #region 0206",-1),S={href:"https://leetcode.cn/problems/reverse-linked-list",target:"_blank",rel:"noopener noreferrer"},T=n("blockquote",null,[n("p",null,"通过单链表的头结点 head 进行反转链表，返回反转后的链表。")],-1),z=n("details",{class:"hint-container details"},[n("summary",null,"💡"),n("p",null,"【思路】")],-1),D=n("p",null,"// #endregion 0206",-1),K=n("h2",{id:"_0207",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0207","aria-hidden":"true"},"#"),e(" 0207")],-1),Z=n("p",null,"// #region 0207",-1),F={href:"https://leetcode.cn/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},G=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),H=n("p",null,"// #endregion 0207",-1),J=n("h2",{id:"_0208",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0208","aria-hidden":"true"},"#"),e(" 0208")],-1),M=n("p",null,"// #region 0208",-1),P={href:"https://leetcode.cn/problems/implement-trie-prefix-tree",target:"_blank",rel:"noopener noreferrer"},Q=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),R=n("p",null,"// #endregion 0208",-1),U=n("h2",{id:"_0210",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0210","aria-hidden":"true"},"#"),e(" 0210")],-1),W=n("p",null,"// #region 0210",-1),X={href:"https://leetcode.cn/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Y=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),$=n("p",null,"// #endregion 0210",-1),nn=n("h2",{id:"_0211",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0211","aria-hidden":"true"},"#"),e(" 0211")],-1),en=n("p",null,"// #region 0211",-1),sn={href:"https://leetcode.cn/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},tn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),an=n("p",null,"// #endregion 0211",-1),ln=n("h2",{id:"_0213",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0213","aria-hidden":"true"},"#"),e(" 0213")],-1),on=n("p",null,"// #region 0213",-1),cn={href:"https://leetcode.cn/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},rn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),un=n("p",null,"// #endregion 0213",-1),dn=n("h2",{id:"_0215",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0215","aria-hidden":"true"},"#"),e(" 0215")],-1),pn=n("p",null,"// #region 0215",-1),_n={href:"https://leetcode.cn/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},hn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),kn=n("p",null,"// #endregion 0215",-1),mn=n("h2",{id:"_0216",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0216","aria-hidden":"true"},"#"),e(" 0216")],-1),bn=n("p",null,"// #region 0216",-1),vn={href:"https://leetcode.cn/problems/combination-sum-iii",target:"_blank",rel:"noopener noreferrer"},fn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),gn=n("p",null,"// #endregion 0216",-1),yn=n("h2",{id:"_0222",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0222","aria-hidden":"true"},"#"),e(" 0222")],-1),wn=n("p",null,"// #region 0222",-1),xn={href:"https://leetcode.cn/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},jn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Nn=n("p",null,"// #endregion 0222",-1),In=n("h2",{id:"_0224",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0224","aria-hidden":"true"},"#"),e(" 0224")],-1),Ln=n("p",null,"// #region 0224",-1),qn={href:"https://leetcode.cn/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},An=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Cn=n("p",null,"// #endregion 0224",-1),Vn=n("h2",{id:"_0225",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0225","aria-hidden":"true"},"#"),e(" 0225")],-1),Bn=n("p",null,"// #region 0225",-1),En={href:"https://leetcode.cn/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},On=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Sn=n("p",null,"// #endregion 0225",-1),Tn=n("h2",{id:"_0226",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0226","aria-hidden":"true"},"#"),e(" 0226")],-1),zn=n("p",null,"// #region 0226",-1),Dn={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Kn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Zn=n("p",null,"// #endregion 0226",-1),Fn=n("h2",{id:"_0227",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0227","aria-hidden":"true"},"#"),e(" 0227")],-1),Gn=n("p",null,"// #region 0227",-1),Hn={href:"https://leetcode.cn/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},Jn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Mn=n("p",null,"// #endregion 0227",-1),Pn=n("h2",{id:"_0230",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0230","aria-hidden":"true"},"#"),e(" 0230")],-1),Qn=n("p",null,"// #region 0230",-1),Rn={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Un=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Wn=n("p",null,"// #endregion 0230",-1),Xn=n("h2",{id:"_0231",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0231","aria-hidden":"true"},"#"),e(" 0231")],-1),Yn=n("p",null,"// #region 0231",-1),$n={href:"https://leetcode.cn/problems/power-of-two",target:"_blank",rel:"noopener noreferrer"},ne=n("blockquote",null,[n("p",null,"判断一个整数是否为 2 的幂次方")],-1),ee=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),se=n("p",null,"// #endregion 0231",-1),te=n("h2",{id:"_0232",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0232","aria-hidden":"true"},"#"),e(" 0232")],-1),ae=n("p",null,"// #region 0232",-1),le={href:"https://leetcode.cn/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},oe=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ie=n("p",null,"// #endregion 0232",-1),ce=n("h2",{id:"_0234",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0234","aria-hidden":"true"},"#"),e(" 0234")],-1),re=n("p",null,"// #region 0234",-1),ue={href:"https://leetcode.cn/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},de=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),pe=n("p",null,"// #endregion 0234",-1),_e=n("h2",{id:"_0235",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0235","aria-hidden":"true"},"#"),e(" 0235")],-1),he=n("p",null,"// #region 0235",-1),ke={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},me=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),be=n("p",null,"// #endregion 0235",-1),ve=n("h2",{id:"_0236",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0236","aria-hidden":"true"},"#"),e(" 0236")],-1),fe=n("p",null,"// #region 0236",-1),ge={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},ye=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),we=n("p",null,"// #endregion 0236",-1),xe=n("h2",{id:"_0237-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0237-✅","aria-hidden":"true"},"#"),e(" 0237 ✅")],-1),je=n("p",null,"// #region 0237",-1),Ne={href:"https://leetcode.cn/problems/delete-node-in-a-linked-list",target:"_blank",rel:"noopener noreferrer"},Ie=n("blockquote",null,[n("p",null,"给定链表中的一个节点，删除这个节点(确保不是链表最后一个节点)")],-1),Le=n("pre",null,[n("code",null,`  示例：
      输入：head = [4,5,1,9], node = 5
      输出：[4,1,9]
`)],-1),qe={class:"hint-container details"},Ae=n("summary",null,"💡",-1),Ce=n("p",null,"【思路】取巧方案，只需将后续节点的值赋值给当前节点，然后将删除节点的后继节点指向，后继节点的后继节点。",-1),Ve=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[e(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),e(`
 *     int val;
 *     ListNode next;
 *     ListNode(int x) `),n("span",{class:"token punctuation"},"{"),e(" val = x; "),n("span",{class:"token punctuation"},"}"),e(`
 * `),n("span",{class:"token punctuation"},"}"),e(`
 */`)]),e(`
`),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Solution"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"void"),e(),n("span",{class:"token function"},"deleteNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),e(" node"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token class-name"},"ListNode"),e(" p "),n("span",{class:"token operator"},"="),e(" node"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e(" p"),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),e(),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            p`),n("span",{class:"token punctuation"},"."),e("val "),n("span",{class:"token operator"},"="),e(" p"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},"."),e("val"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e(" p"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"=="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
                `),n("span",{class:"token comment"},"// 后继节点是最后一个节点，直接指向 null"),e(`
                p`),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"else"),e(),n("span",{class:"token punctuation"},"{"),e(`
                `),n("span",{class:"token comment"},"// 后继节点不是最后一个节点，往后移动"),e(`
                p `),n("span",{class:"token operator"},"="),e(" p"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Be=n("p",null,"// #endregion 0237",-1),Ee=n("h2",{id:"_0239",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0239","aria-hidden":"true"},"#"),e(" 0239")],-1),Oe=n("p",null,"// #region 0239",-1),Se={href:"https://leetcode.cn/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Te=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ze=n("p",null,"// #endregion 0239",-1),De=n("h2",{id:"_0241",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0241","aria-hidden":"true"},"#"),e(" 0241")],-1),Ke=n("p",null,"// #region 0241",-1),Ze={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},Fe=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ge=n("p",null,"// #endregion 0241",-1),He=n("h2",{id:"_0253",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0253","aria-hidden":"true"},"#"),e(" 0253")],-1),Je=n("p",null,"// #region 0253",-1),Me={href:"https://leetcode.cn/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},Pe=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Qe=n("p",null,"// #endregion 0253",-1),Re=n("h2",{id:"_0256",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0256","aria-hidden":"true"},"#"),e(" 0256")],-1),Ue=n("p",null,"// #region 0256",-1),We={href:"https://leetcode.cn/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},Xe=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ye=n("p",null,"// #endregion 0256",-1),$e=n("h2",{id:"_0260",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0260","aria-hidden":"true"},"#"),e(" 0260")],-1),ns=n("p",null,"// #region 0260",-1),es={href:"https://leetcode.cn/problems/single-number-iii",target:"_blank",rel:"noopener noreferrer"},ss=n("blockquote",null,[n("p",null,"一个非空的整数数组中，除了两个元素只出现一次外，其余元素均出现两次。找出两个只出现一次的数字 时间复杂度: O(n) 空间复杂度: O(1)")],-1),ts=n("details",{class:"hint-container details"},[n("summary",null,"💡"),n("blockquote",null,[n("p",null,"升级版 一个非空的整数数组，除了三个元素只出现一次外，其余元素均出现两次。找出三个只出现一次的数字。 时间复杂度: O(n) 空间复杂度: O(1)")])],-1),as=n("p",null,"// #endregion 0260",-1),ls=n("h2",{id:"_0261",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0261","aria-hidden":"true"},"#"),e(" 0261")],-1),os=n("p",null,"// #region 0261",-1),is={href:"https://leetcode.cn/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},cs=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),rs=n("p",null,"// #endregion 0261",-1),us=n("h2",{id:"_0264",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0264","aria-hidden":"true"},"#"),e(" 0264")],-1),ds=n("p",null,"// #region 0264",-1),ps={href:"https://leetcode.cn/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},_s=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),hs=n("p",null,"// #endregion 0264",-1),ks=n("h2",{id:"_0268",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0268","aria-hidden":"true"},"#"),e(" 0268")],-1),ms=n("p",null,"// #region 0268",-1),bs={href:"https://leetcode.cn/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},vs=n("blockquote",null,[n("p",null,"给定一个包含 [0, n] 中的 n 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的那个数。")],-1),fs=n("details",{class:"hint-container details"},[n("summary",null,"💡"),n("p",null,[e("【思路】 由于这个数组的值范围为[0, n]，则表明刚好是长度为 n+1 长度的数组。数字刚好与所在的索引的位置匹配，而缺失的数表明该位置没有数。那么使用 "),n("code",null,"x ^ x = 0"),e(" 的特性。只要将数组中数值与所有的索引进行异或操作，那么结果刚好就是缺失的那个数。 代码实现时，必须要构造一个 0~n 的数组，可以在循环变量数组时，直接使用索引值。需要注意的是 nums 长度为 n，不是 n+1。所以遍历时索引值只能到 n-1，所以可以将进行异或操作的结果值初始值设置为 n。")]),n("blockquote",null,[n("p",null,"升级版 给定一个包含 [0, n] 中的 n-1 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的两个数。")])],-1),gs=n("p",null,"// #endregion 0268",-1),ys=n("h2",{id:"_0277",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0277","aria-hidden":"true"},"#"),e(" 0277")],-1),ws=n("p",null,"// #region 0277",-1),xs={href:"https://leetcode.cn/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},js=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ns=n("p",null,"// #endregion 0277",-1),Is=n("h2",{id:"_0278",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0278","aria-hidden":"true"},"#"),e(" 0278")],-1),Ls=n("p",null,"// #region 0278",-1),qs={href:"https://leetcode.cn/problems/first-bad-version",target:"_blank",rel:"noopener noreferrer"},As=n("blockquote",null,[n("p",null,[e("软件已经发行版本号 [1, 2, 3, ..., n]，通过函数 "),n("code",null,"bool isBadVersion(version)"),e(" 可以判断该版本是否发生该错误，现在需要查找到第一个发生该错误的版本。")])],-1),Cs=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Vs=n("p",null,"// #endregion 0278",-1),Bs=n("h2",{id:"_0283-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0283-✅","aria-hidden":"true"},"#"),e(" 0283 ✅")],-1),Es=n("p",null,"// #region 0283",-1),Os={href:"https://leetcode.cn/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"},Ss=n("blockquote",null,[n("p",null,"给定一个数组，将数组中的 0 都移动到数组后面，其它元素相对位置保持不变。")],-1),Ts={class:"hint-container details"},zs=n("summary",null,"💡",-1),Ds=n("p",null,"【思路1】双指针法，遍历数组，快指针遇到 0 时，将慢指针往前移动，并将快指针值赋值到慢指针索引位置。快指针遍历完，最后将慢指针后面的元素全部置为0。",-1),Ks=n("p",null,"【思路2】也是双指针，遍历数组将不为 0 的元素不停地进行交换处理。",-1),Zs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Solution"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"void"),e(),n("span",{class:"token function"},"moveZeroes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),e(" nums"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token keyword"},"int"),e(" fast "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"int"),e(" slow "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e(" fast "),n("span",{class:"token operator"},"<"),e(" nums"),n("span",{class:"token punctuation"},"."),e("length "),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e(" nums"),n("span",{class:"token punctuation"},"["),e("fast"),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token number"},"0"),e(),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
                slow `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
                nums`),n("span",{class:"token punctuation"},"["),e("slow"),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token operator"},"="),e(" nums"),n("span",{class:"token punctuation"},"["),e("fast"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token punctuation"},"}"),e(`
            fast `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token comment"},"// 将 slow 后面值均置为 0"),e(`
        slow `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e(" slow "),n("span",{class:"token operator"},"<"),e(" nums"),n("span",{class:"token punctuation"},"."),e("length "),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            nums`),n("span",{class:"token punctuation"},"["),e("slow"),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(`
            slow `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Fs=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Solution"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"func"),e(),n("span",{class:"token function-definition function"},"moveZeroes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),e(" nums"),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token keyword"},"inout"),e(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token keyword"},"var"),e(" i "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),e(`
        `),n("span",{class:"token keyword"},"var"),e(" j "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),e(`
        `),n("span",{class:"token keyword"},"while"),e(" j "),n("span",{class:"token operator"},"<"),e(" nums"),n("span",{class:"token punctuation"},"."),e("count "),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token keyword"},"guard"),e(" nums"),n("span",{class:"token punctuation"},"["),e("j"),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token number"},"0"),e(),n("span",{class:"token keyword"},"else"),e(),n("span",{class:"token punctuation"},"{"),e(` 
                j `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),e(`
                `),n("span",{class:"token keyword"},"continue"),e(` 
            `),n("span",{class:"token punctuation"},"}"),e(`
            `),n("span",{class:"token comment"},"// 查找不为 0 的元素，并进行交换"),e(`
            `),n("span",{class:"token keyword"},"if"),e(" i "),n("span",{class:"token operator"},"!="),e(" j "),n("span",{class:"token punctuation"},"{"),e(`
                `),n("span",{class:"token keyword"},"let"),e(" temp "),n("span",{class:"token operator"},"="),e(" nums"),n("span",{class:"token punctuation"},"["),e("i"),n("span",{class:"token punctuation"},"]"),e(`
                nums`),n("span",{class:"token punctuation"},"["),e("i"),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token operator"},"="),e(" nums"),n("span",{class:"token punctuation"},"["),e("j"),n("span",{class:"token punctuation"},"]"),e(`
                nums`),n("span",{class:"token punctuation"},"["),e("j"),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token operator"},"="),e(` temp
            `),n("span",{class:"token punctuation"},"}"),e(`
            i `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),e(`
            j `),n("span",{class:"token operator"},"+="),e(),n("span",{class:"token number"},"1"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Gs=n("p",null,"// #endregion 0283",-1),Hs=n("h2",{id:"_0295",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0295","aria-hidden":"true"},"#"),e(" 0295")],-1),Js=n("p",null,"// #region 0295",-1),Ms={href:"https://leetcode.cn/problems/find-median-from-data-stream",target:"_blank",rel:"noopener noreferrer"},Ps=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Qs=n("p",null,"// #endregion 0295",-1),Rs=n("h2",{id:"_0292",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0292","aria-hidden":"true"},"#"),e(" 0292")],-1),Us=n("p",null,"// #region 0292",-1),Ws={href:"https://leetcode.cn/problems/nim-game",target:"_blank",rel:"noopener noreferrer"},Xs=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ys=n("p",null,"// #endregion 0292",-1),$s=n("h2",{id:"_0297",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0297","aria-hidden":"true"},"#"),e(" 0297")],-1),nt=n("p",null,"// #region 0297",-1),et={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},st=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),tt=n("p",null,"// #endregion 0297",-1);function at(lt,ot){const t=c("ExternalLinkIcon"),i=c("CodeTabs");return u(),d("div",null,[p(" more "),h,k,n("ul",null,[n("li",null,[n("a",m,[e("🟠 200 - 岛屿数量"),s(t)])])]),b,v,f,g,n("ul",null,[n("li",null,[n("p",null,[n("a",y,[e("🟢 203 - 移除链表元素"),s(t)])]),w])]),n("details",x,[j,N,s(i,{id:"37",data:[{id:"java"}]},{title0:a(({value:l,isActive:o})=>[e("java")]),tab0:a(({value:l,isActive:o})=>[I]),_:1})]),L,q,A,n("ul",null,[n("li",null,[n("a",C,[e("🟠 204 - 计数质数"),s(t)])])]),V,B,E,O,n("ul",null,[n("li",null,[n("a",S,[e("🟢 206 - 反转链表"),s(t)]),T])]),z,D,K,Z,n("ul",null,[n("li",null,[n("a",F,[e("🟠 207 - 课程表"),s(t)])])]),G,H,J,M,n("ul",null,[n("li",null,[n("a",P,[e("🟠 208 - 实现 Trie (前缀树)"),s(t)])])]),Q,R,U,W,n("ul",null,[n("li",null,[n("a",X,[e("🟠 210 - 课程表 II"),s(t)])])]),Y,$,nn,en,n("ul",null,[n("li",null,[n("a",sn,[e("🟠 211 - 添加与搜索单词 - 数据结构设计"),s(t)])])]),tn,an,ln,on,n("ul",null,[n("li",null,[n("a",cn,[e("🟠 213 - 打家劫舍 II"),s(t)])])]),rn,un,dn,pn,n("ul",null,[n("li",null,[n("a",_n,[e("🟠 215 - 数组中的第K个最大元素"),s(t)])])]),hn,kn,mn,bn,n("ul",null,[n("li",null,[n("a",vn,[e("🟠 216 - 组合总和 III"),s(t)])])]),fn,gn,yn,wn,n("ul",null,[n("li",null,[n("a",xn,[e("🟠 222 - 完全二叉树的节点个数"),s(t)])])]),jn,Nn,In,Ln,n("ul",null,[n("li",null,[n("a",qn,[e("🔴 224 - 基本计算器"),s(t)])])]),An,Cn,Vn,Bn,n("ul",null,[n("li",null,[n("a",En,[e("🟢 225 - 用队列实现栈"),s(t)])])]),On,Sn,Tn,zn,n("ul",null,[n("li",null,[n("a",Dn,[e("🟠 226 - 翻转二叉树"),s(t)])])]),Kn,Zn,Fn,Gn,n("ul",null,[n("li",null,[n("a",Hn,[e("🟠 227 - 基本计算器 II"),s(t)])])]),Jn,Mn,Pn,Qn,n("ul",null,[n("li",null,[n("a",Rn,[e("🟠 230 - 二叉搜索树中第K小的元素"),s(t)])])]),Un,Wn,Xn,Yn,n("ul",null,[n("li",null,[n("a",$n,[e("🟢 231 - 2 的幂"),s(t)]),ne])]),ee,se,te,ae,n("ul",null,[n("li",null,[n("a",le,[e("🟢 232 - 用栈实现队列"),s(t)])])]),oe,ie,ce,re,n("ul",null,[n("li",null,[n("a",ue,[e("🟢 234 - 回文链表"),s(t)])])]),de,pe,_e,he,n("ul",null,[n("li",null,[n("a",ke,[e("🟠 235 - 二叉搜索树的最近公共祖先"),s(t)])])]),me,be,ve,fe,n("ul",null,[n("li",null,[n("a",ge,[e("🟠 236 - 二叉树的最近公共祖先"),s(t)])])]),ye,we,xe,je,n("ul",null,[n("li",null,[n("p",null,[n("a",Ne,[e("🟠 237 - 删除链表中的节点"),s(t)])]),Ie,Le])]),n("details",qe,[Ae,Ce,s(i,{id:"442",data:[{id:"java"}]},{title0:a(({value:l,isActive:o})=>[e("java")]),tab0:a(({value:l,isActive:o})=>[Ve]),_:1})]),Be,Ee,Oe,n("ul",null,[n("li",null,[n("a",Se,[e("🔴 239 - 滑动窗口最大值"),s(t)])])]),Te,ze,De,Ke,n("ul",null,[n("li",null,[n("a",Ze,[e("🟠 241 - 为运算表达式设计优先级"),s(t)])])]),Fe,Ge,He,Je,n("ul",null,[n("li",null,[n("a",Me,[e("🟠 253 - 会议室 II"),s(t)])])]),Pe,Qe,Re,Ue,n("ul",null,[n("li",null,[n("a",We,[e("🟠 256 - 粉刷房子"),s(t)])])]),Xe,Ye,$e,ns,n("ul",null,[n("li",null,[n("a",es,[e("🟠 260 - 只出现一次的数字 III"),s(t)]),ss])]),ts,as,ls,os,n("ul",null,[n("li",null,[n("a",is,[e("🟠 261 - 以图判树"),s(t)])])]),cs,rs,us,ds,n("ul",null,[n("li",null,[n("a",ps,[e("🟠 264 - 丑数 II"),s(t)])])]),_s,hs,ks,ms,n("ul",null,[n("li",null,[n("a",bs,[e("🟢 268 - 丢失的数字"),s(t)]),vs])]),fs,gs,ys,ws,n("ul",null,[n("li",null,[n("a",xs,[e("🟠 277 - 搜寻名人"),s(t)])])]),js,Ns,Is,Ls,n("ul",null,[n("li",null,[n("a",qs,[e("🟢 278 - 第一个错误的版本"),s(t)]),As])]),Cs,Vs,Bs,Es,n("ul",null,[n("li",null,[n("a",Os,[e("🟢 283 - 移动零"),s(t)]),Ss])]),n("details",Ts,[zs,Ds,Ks,s(i,{id:"684",data:[{id:"java"},{id:"swift"}]},{title0:a(({value:l,isActive:o})=>[e("java")]),title1:a(({value:l,isActive:o})=>[e("swift")]),tab0:a(({value:l,isActive:o})=>[Zs]),tab1:a(({value:l,isActive:o})=>[Fs]),_:1})]),Gs,Hs,Js,n("ul",null,[n("li",null,[n("a",Ms,[e("🔴 295 - 数据流的中位数"),s(t)])])]),Ps,Qs,Rs,Us,n("ul",null,[n("li",null,[n("a",Ws,[e("🟢 292 - Nim 游戏"),s(t)])])]),Xs,Ys,$s,nt,n("ul",null,[n("li",null,[n("a",et,[e("🔴 297 - 二叉树的序列化与反序列化"),s(t)])])]),st,tt])}const rt=r(_,[["render",at],["__file","0x0200.html.vue"]]);export{rt as default};
