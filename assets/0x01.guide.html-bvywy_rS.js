import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as d,c as l,b as e,e as n,d as i,f as c}from"./app-TLKbS0Xy.js";const r={},s=c('<h2 id="数据类型一览" tabindex="-1"><a class="header-anchor" href="#数据类型一览" aria-hidden="true">#</a> 数据类型一览</h2><table><thead><tr><th>类型</th><th>说明</th><th>定义</th></tr></thead></table><h2 id="concept" tabindex="-1"><a class="header-anchor" href="#concept" aria-hidden="true">#</a> concept</h2><ul><li><p><code>Any</code> vs <code>AnyObject</code></p><ul><li><code>Any</code> : Any 可以代表任何类型( struct、class、func 等等 )</li><li><code>AnyObject</code> : 只能代表 class 生成的实例</li></ul></li><li><p><code>as</code> &amp; <code>as!</code> &amp; <code>as?</code></p><ul><li>as : 转换</li><li>as! : 强制转换，失败会出现运行时错误</li><li>as? : 不成功返回 <code>nil</code>，成功返回可选类型</li></ul></li></ul><h2 id="function-函数" tabindex="-1"><a class="header-anchor" href="#function-函数" aria-hidden="true">#</a> <code>function</code> - “函数”</h2>',5),h={href:"https://zhuanlan.zhihu.com/p/35696161",target:"_blank",rel:"noopener noreferrer"},u=c("<li><p><code>@discardableResult</code></p><blockquote><p>可以去掉有返回值的函数，但是没有使用返回值的警告</p></blockquote></li><li><p><code>@UIApplicationMain</code></p><blockquote><p>替代 <code>OC</code> 项目中的 <code>main.m</code> 作为 <code>iOS</code> 程序的入口</p></blockquote></li>",2);function p(_,f){const o=a("ExternalLinkIcon");return d(),l("div",null,[s,e("ul",null,[e("li",null,[e("p",null,[e("a",h,[n("Swift 中的方法调用（Method Dispatch）"),i(o)])])]),u])])}const x=t(r,[["render",p],["__file","0x01.guide.html.vue"]]);export{x as default};
