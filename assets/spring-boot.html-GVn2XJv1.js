import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as a,c as l,b as e,e as o,d as r,f as s}from"./app-NiSSZH60.js";const c={},d=e("h1",{id:"spring-boot",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#spring-boot","aria-hidden":"true"},"#"),o(" Spring Boot")],-1),h=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),o(" Reference")],-1),p={href:"https://github.com/spring-projects/spring-boot",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/ityouknow/awesome-spring-boot",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/waylau/spring-boot-tutorial",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/dyc87112/SpringBoot-Learning",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/qibaoguang/Spring-Boot-Reference-Guide",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"concept",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#concept","aria-hidden":"true"},"#"),o(" Concept")],-1),m=e("ul",null,[e("li",null,"Spring IoC/AOP -> Spring -> Spring Boot -> Spring Cloud"),e("li",null,"IoC : Inversion of Control 控制反转"),e("li",null,"AOP : Aspect Oriented Programming 面向切面编程"),e("li",null,"DI : Dependency Injection 依赖注入")],-1),S=e("h2",{id:"spring",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#spring","aria-hidden":"true"},"#"),o(" Spring")],-1),B={href:"https://www.zhihu.com/question/23277575",target:"_blank",rel:"noopener noreferrer"},k=s('<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><ul><li><p>starter</p><table><thead><tr><th>starter</th><th>description</th></tr></thead><tbody><tr><td>spring-boot-starter</td><td>核心模块, 包括自动配置支持、日志和 YAML</td></tr><tr><td>spring-boot-starter-test</td><td>测试模块, 包括 JUnit、Hamcrest、Mockito</td></tr></tbody></table></li><li><p>项目结构</p><ul><li>Application.java : 用于框架配置</li><li>domain : 实体(Entity) &amp; 数据访问层(Repository)</li><li>service : 业务处理</li><li>controller : 页面访问控制</li></ul></li></ul><h2 id="annotation" tabindex="-1"><a class="header-anchor" href="#annotation" aria-hidden="true">#</a> Annotation</h2><ul><li><code>@SpringBootApplication</code> : 程序入口点 (包含以下三个注解) <ul><li><code>@Configuration</code> : 配置</li><li><code>@EnableAutoConfiguration</code> : 自动配置项目依赖</li><li><code>@ComponentScan</code> : 组件扫描</li></ul></li><li><code>@RestController</code> : controller 里面的方法以 json 格式输出，不需要写 jackjson 配置</li></ul>',4);function x(C,A){const t=i("ExternalLinkIcon");return a(),l("div",null,[d,h,e("ul",null,[e("li",null,[e("a",p,[o("Spring Boot"),r(t)])]),e("li",null,[e("a",u,[o("Awesome Spring Boot"),r(t)])]),e("li",null,[e("a",g,[o("Spring Boot Tutorial"),r(t)])]),e("li",null,[e("a",_,[o("Spring Boot Learning"),r(t)])]),e("li",null,[e("a",f,[o("Spring Boot 参考指南"),r(t)])])]),b,m,S,e("ul",null,[e("li",null,[e("a",B,[o("Spring IoC有什么好处呢？"),r(t)])])]),k])}const w=n(c,[["render",x],["__file","spring-boot.html.vue"]]);export{w as default};
