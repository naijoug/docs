import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as s,o as i,c as a,b as e,e as n,d as o,f as l}from"./app-NiSSZH60.js";const c={},p=e("h1",{id:"prompt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prompt","aria-hidden":"true"},"#"),n(" Prompt")],-1),d=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),n(" Reference")],-1),u={href:"https://github.com/f/awesome-chatgpt-prompts",target:"_blank",rel:"noopener noreferrer"},h=e("blockquote",null,[e("p",null,"This repo includes ChatGPT prompt curation to use ChatGPT better.")],-1),m={href:"https://github.com/dair-ai/Prompt-Engineering-Guide",target:"_blank",rel:"noopener noreferrer"},_=e("blockquote",null,[e("p",null,"🐙 Guides, papers, lecture, notebooks and resources for prompt engineering")],-1),g={href:"https://github.com/rockbenben/ChatGPT-Shortcut",target:"_blank",rel:"noopener noreferrer"},b=e("blockquote",null,[e("p",null,"🚀💪Maximize your efficiency and productivity, support for English, 中文, 日本語, and 한국어. 让生产力加倍的 ChatGPT 快捷指令，按照领域和功能分区，可对提示词进行标签筛选、关键词搜索和一键复制。")],-1),f={href:"https://github.com/prompt-engineering/click-prompt",target:"_blank",rel:"noopener noreferrer"},k=e("blockquote",null,[e("p",null,"ClickPrompt - Streamline your prompt design, with ClickPrompt, you can easily view, share, and run these prompts with just one click. ClickPrompt 用于一键轻松查看、分享和执行您的 Prompt。")],-1),v={href:"https://github.com/prompt-engineering/prompt-patterns",target:"_blank",rel:"noopener noreferrer"},P=e("blockquote",null,[e("p",null,"Prompt 编写模式：如何将思维框架赋予机器，以设计模式的形式来思考 prompt")],-1),x={href:"https://github.com/prompt-engineering/understand-prompt",target:"_blank",rel:"noopener noreferrer"},C=e("blockquote",null,[e("p",null,"理解 Prompt：基于编程、绘画、写作的 AI 探索与总结")],-1),G={id:"gpt-engineer",tabindex:"-1"},q=e("a",{class:"header-anchor",href:"#gpt-engineer","aria-hidden":"true"},"#",-1),y={href:"https://github.com/AntonOsika/gpt-engineer",target:"_blank",rel:"noopener noreferrer"},T=l(`<blockquote><p>Specify what you want it to build, the AI asks for clarification, and then builds it.</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># install </span>
$ pip <span class="token function">install</span> gpt-engineer

<span class="token comment"># 新建项目文件夹</span>
$ <span class="token function">mkdir</span> project_folder
<span class="token comment"># 创建项目 prompt 项目指令</span>
$ <span class="token function">vim</span> project_folder/prompt
<span class="token comment"># 运行 gpt-engineer</span>
$ gpt-engineer project_folder/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function w(E,A){const t=s("ExternalLinkIcon");return i(),a("div",null,[p,d,e("ul",null,[e("li",null,[e("a",u,[n("🧠 Awesome ChatGPT Prompts"),o(t)]),h]),e("li",null,[e("a",m,[n("Prompt Engineering Guide"),o(t)]),_]),e("li",null,[e("a",g,[n("⚡️AI Short"),o(t)]),b]),e("li",null,[e("a",f,[n("ClickPrompt"),o(t)]),k]),e("li",null,[e("a",v,[n("Prompt 编写模式"),o(t)]),P]),e("li",null,[e("a",x,[n("理解 Prompt"),o(t)]),C])]),e("h2",G,[q,n(),e("a",y,[n("GPT Engineer"),o(t)])]),T])}const j=r(c,[["render",w],["__file","Prompt.html.vue"]]);export{j as default};
