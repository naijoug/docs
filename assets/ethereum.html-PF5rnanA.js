import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o,c as i,b as n,e,d as a,f as t}from"./app-j-heE4gB.js";const c={},p=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),e(" Reference")],-1),u={href:"https://ethfans.org/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://ethplorer.io/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://etherscan.io/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.etherchain.org/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/paritytech/parity-ethereum",target:"_blank",rel:"noopener noreferrer"},f={href:"https://infura.io/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://vintage.myetherwallet.com",target:"_blank",rel:"noopener noreferrer"},m={href:"https://ethgasstation.info/",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"wallet",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wallet","aria-hidden":"true"},"#"),e(" Wallet")],-1),v={href:"https://github.com/MetaMask",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.myetherwallet.com",target:"_blank",rel:"noopener noreferrer"},y={href:"https://mycrypto.com",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/xilibi2003/Upchain-wallet",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.ethpm.com/",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"testnet",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#testnet","aria-hidden":"true"},"#"),e(" Testnet")],-1),S={href:"https://github.com/Anish-Agnihotri/MultiFaucet",target:"_blank",rel:"noopener noreferrer"},T=n("blockquote",null,[n("p",null,"MultiFaucet drips ETH, tokens, and NFTs across many testnet networks, at once.")],-1),C={href:"https://github.com/ethereum/ropsten",target:"_blank",rel:"noopener noreferrer"},M={href:"https://faucet.metamask.io/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://rinkeby.io/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://faucet.rinkeby.io/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/kovan-testnet/proposal",target:"_blank",rel:"noopener noreferrer"},F={href:"https://faucet.kovan.network/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/goerli/testnet",target:"_blank",rel:"noopener noreferrer"},I={href:"https://goerli-faucet.slock.it/",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"qa",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#qa","aria-hidden":"true"},"#"),e(" QA")],-1),J={href:"https://github.com/ethereum/wiki/wiki/json-rpc",target:"_blank",rel:"noopener noreferrer"},z={href:"http://cw.hubwiz.com/card/c/ethereum-json-rpc-api/",target:"_blank",rel:"noopener noreferrer"},O={href:"http://www.tryblockchain.org/",target:"_blank",rel:"noopener noreferrer"},V={href:"https://segmentfault.com/a/1190000016273607#articleHeader4",target:"_blank",rel:"noopener noreferrer"},$={href:"https://ethfans.org/ajian1984/articles/releasing-stuck-ethereum-transactions",target:"_blank",rel:"noopener noreferrer"},D=n("li",null,[n("p",null,"ERC20 & ERC23 Token")],-1),H={href:"https://dewone.zendesk.com/hc/zh-cn/articles/360005205873-Transactions-%E5%92%8CInternal-Transactions%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},W={href:"https://kauri.io/article/760f495423db42f988d17b8c145b0874/listening-for-ethereum-smart-contract-events-in-java",target:"_blank",rel:"noopener noreferrer"},q={href:"https://my.oschina.net/u/1189224/blog/1843831",target:"_blank",rel:"noopener noreferrer"},L=n("h2",{id:"erc-20",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#erc-20","aria-hidden":"true"},"#"),e(" ERC-20")],-1),G={href:"https://eips.ethereum.org/EIPS/eip-20",target:"_blank",rel:"noopener noreferrer"},U={href:"https://ethfans.org/posts/understanding-erc-20-token-contracts",target:"_blank",rel:"noopener noreferrer"},K=n("li",null,[n("p",null,"ERC-20 Token Standard")],-1),Q=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>contract <span class="token constant">ERC20</span> <span class="token punctuation">{</span>
    <span class="token comment">// Methods</span>
    <span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">decimals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>uint8<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>uint256<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token parameter">address _owner</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>uint256 balance<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token parameter">address _to<span class="token punctuation">,</span> uint256 _value</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span>bool success<span class="token punctuation">)</span>
    
    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token parameter">address _from<span class="token punctuation">,</span> address _to<span class="token punctuation">,</span> uint256 _value</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span>bool success<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token parameter">address _spender<span class="token punctuation">,</span> uint256 _value</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">returns</span> <span class="token punctuation">(</span>bool success<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">allowance</span><span class="token punctuation">(</span><span class="token parameter">address _owner<span class="token punctuation">,</span> address _spender</span><span class="token punctuation">)</span> <span class="token keyword">public</span> view <span class="token function">returns</span> <span class="token punctuation">(</span>uint256 remaining<span class="token punctuation">)</span>
    <span class="token comment">// Events </span>
    event <span class="token function">Transfer</span><span class="token punctuation">(</span>address indexed _from<span class="token punctuation">,</span> address indexed _to<span class="token punctuation">,</span> uint256 _value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    event <span class="token function">Approval</span><span class="token punctuation">(</span>address indexed _owner<span class="token punctuation">,</span> address indexed _spender<span class="token punctuation">,</span> uint256 _value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="web3j" tabindex="-1"><a class="header-anchor" href="#web3j" aria-hidden="true">#</a> web3j</h2>`,2),Z={href:"https://github.com/web3j/web3j",target:"_blank",rel:"noopener noreferrer"},X={href:"https://docs.web3j.io/",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://watermelon.gitbook.io/web3j/",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://juejin.im/entry/5b448c57f265da0f93138ccb",target:"_blank",rel:"noopener noreferrer"},en=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## install</span>
$ brew tap web3j/web3j
$ brew <span class="token function">install</span> web3j
<span class="token comment">## wallet</span>
$ web3j wallet create <span class="token comment"># 创建钱包</span>
$ web3j wallet update <span class="token operator">&lt;</span>walletfile<span class="token operator">&gt;</span>  <span class="token comment"># 更新钱包密码</span>
$ web3j wallet send 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="truffle-embark-以太坊智能合约开发框架" tabindex="-1"><a class="header-anchor" href="#truffle-embark-以太坊智能合约开发框架" aria-hidden="true">#</a> Truffle &amp; Embark : 以太坊智能合约开发框架</h2>`,2),sn={href:"https://truffleframework.com/docs",target:"_blank",rel:"noopener noreferrer"},an={href:"https://truffleframework.org/docs/",target:"_blank",rel:"noopener noreferrer"},tn=n("h2",{id:"solidity",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#solidity","aria-hidden":"true"},"#"),e(" Solidity")],-1),ln={href:"https://github.com/etherchina/solidity-doc-cn",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://solidity.readthedocs.io",target:"_blank",rel:"noopener noreferrer"},on={href:"https://solidity-cn.readthedocs.io",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://github.com/ConsenSys/smart-contract-best-practices",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://remix.ethereum.org/",target:"_blank",rel:"noopener noreferrer"},un={href:"https://openzeppelin.org/",target:"_blank",rel:"noopener noreferrer"},dn=t("<li><p>数据类型</p><ul><li>值类型 Value Type <ul><li>bool</li><li>int</li><li>枚举类型 <code>enum</code></li><li>函数类型 <code>function</code></li><li>地址类型 <code>address</code><ul><li>balance 查询账户余额</li><li>transfer() 发起转账</li><li>send</li><li>call</li><li>delegatecall</li></ul></li><li>可支付地址类型 <code>address payable</code></li></ul></li><li>引用类型 Reference Type <ul><li>bytes 变长字节数组 (byte[])</li><li>string 等价于 bytes，可相互转换</li><li>array 变长数组 <ul><li>storage 与 memory 有区别</li><li>多维数组定义方式倒序</li><li>外部函数不能返回变长数据</li></ul></li><li>struct 结构体，只能在当前合约或子类合约使用</li></ul></li><li>映射类型 Mapping <ul><li>类哈希结构</li></ul></li></ul></li><li><p>函数访问控制</p><ul><li>private : 仅当前合约使用，不能被继承合约使用</li><li>internal : 当前合约或继承合约</li><li>external : 其它合约可以调用，当前合约使用需要使用 <code>this</code></li><li>public : 其它合约可以调用，当前合约使用不需要使用 <code>this</code></li></ul></li><li><p>函数类型 : 告诉编译器函数是否读取或修改状态变量</p><ul><li>pure : 不可读，不能改</li><li>view : 可读，不能改</li><li>payable : 允许从调用中接受以太币</li></ul></li><li><p>数据位置</p><ul><li>memory : 数据存储在内存中 (字节数组形式存储) <ul><li>默认 : 函数的参数、返回值</li></ul></li><li>storage : 数据被存入区块链中 (键值对形式存储) <ul><li>默认 : 局部变量、状态变量</li></ul></li><li>calldata : 只读，存储在内存中 <ul><li>默认 : 外部函数的参数(不含返回参数)</li></ul></li></ul></li><li><p>以太币单位</p><ul><li>wei</li><li>finney</li><li>szabo</li><li>ether = 10^18 wei</li></ul></li><li><p>时间单位</p><ul><li>seconds</li><li>minutes</li><li>hours</li><li>days</li><li>weeks</li><li>years</li></ul></li><li><p>特殊函数</p><ul><li>msg.sender : 消息发送者</li><li>msg.value : 消息发送的 wei 数量</li></ul></li>",7);function hn(kn,_n){const s=r("ExternalLinkIcon");return o(),i("div",null,[p,n("ul",null,[n("li",null,[n("a",u,[e("EthFans"),a(s)]),e(" : 以太坊爱好者")]),n("li",null,[n("a",d,[e("Ethplorer"),a(s)]),e(" : 以太坊代币浏览器")]),n("li",null,[n("a",h,[e("Ethersacn"),a(s)]),e(" : 以太坊区块浏览器")]),n("li",null,[n("a",k,[e("Etherchain"),a(s)]),e(" : 以太坊区块链浏览器")]),n("li",null,[n("a",_,[e("parity"),a(s)]),e(" : 以太坊轻节点")]),n("li",null,[n("a",f,[e("infura"),a(s)]),e(" :")]),n("li",null,[n("a",b,[e("MEW - vintage"),a(s)])]),n("li",null,[n("a",m,[e("ETH Gas Station"),a(s)]),e(" : 以太坊 gas 站点")])]),g,n("ul",null,[n("li",null,[n("a",v,[e("MetaMask"),a(s)]),e(" :")]),n("li",null,[n("a",w,[e("MyEtherWallet"),a(s)]),e(" : 一个开源的生成以太坊钱包和发送交易的JavaScript客户端工具")]),n("li",null,[n("a",y,[e("MyCrypto"),a(s)]),e(" : 一个开源的以太坊钱包工具")]),n("li",null,[n("a",E,[e("Upchain"),a(s)]),e(" : 以太坊钱包 Android")]),n("li",null,[n("a",j,[e("ETHPM"),a(s)]),e(" : 以太坊智能合约包管理器")])]),x,n("ul",null,[n("li",null,[n("a",S,[e("MultiFaucet"),a(s)]),T]),n("li",null,[n("a",C,[e("Ropsten"),a(s)]),e(" : 以太坊 PoW 测试网 - "),n("a",M,[e("MetaMask Faucet"),a(s)])]),n("li",null,[n("a",R,[e("Rinkeby"),a(s)]),e(" : 以太坊官方 PoA 测试网 - "),n("a",P,[e("Faucet"),a(s)])]),n("li",null,[n("a",A,[e("Kovan"),a(s)]),e(" : Parity 提供的 PoA 测试网 - "),n("a",F,[e("Faucet"),a(s)])]),n("li",null,[n("a",N,[e("Goerli"),a(s)]),e(" - "),n("a",I,[e("Faucet"),a(s)])])]),B,n("ul",null,[n("li",null,[n("p",null,[n("a",J,[e("Ethereum JSON RPC"),a(s)])])]),n("li",null,[n("p",null,[n("a",z,[e("以太坊 JSON RPC 手册"),a(s)])])]),n("li",null,[n("p",null,[n("a",O,[e("Solidity 语言"),a(s)])])]),n("li",null,[n("p",null,[n("a",V,[e("Python以太坊区块链交互将数据存入数据库"),a(s)])])]),n("li",null,[n("p",null,[n("a",$,[e("科普 | 释放阻塞的以太坊交易"),a(s)])])]),D,n("li",null,[n("p",null,[n("a",H,[e("Transactions 和Internal Transactions的区别"),a(s)])])]),n("li",null,[n("p",null,[n("a",W,[e("Listening for Ethereum Smart Contract Events in Java"),a(s)])])]),n("li",null,[n("p",null,[n("a",q,[e("以太坊-web3j监听合约事件没有回调？"),a(s)])])])]),L,n("ul",null,[n("li",null,[n("p",null,[n("a",G,[e("EIP 20"),a(s)])])]),n("li",null,[n("p",null,[n("a",U,[e("科普 | 理解ERC-20 token合约"),a(s)])])]),K]),Q,n("ul",null,[n("li",null,[n("a",Z,[e("web3j"),a(s)]),e(" : 以太坊 JSON-RPC Java 接口实现")]),n("li",null,[n("a",X,[e("web3j Docs"),a(s)])]),n("li",null,[n("a",Y,[e("web3j - cn"),a(s)])]),n("li",null,[n("a",nn,[e("web3j官网中文版"),a(s)])])]),en,n("ul",null,[n("li",null,[n("a",sn,[e("Truffle Docs"),a(s)])]),n("li",null,[n("a",an,[e("Truffle 文档"),a(s)])])]),tn,n("ul",null,[n("li",null,[n("p",null,[n("a",ln,[e("以太坊Solidity语言中文文档"),a(s)])])]),n("li",null,[n("p",null,[n("a",rn,[e("Solidity Docs"),a(s)])])]),n("li",null,[n("p",null,[n("a",on,[e("Solidity 文档"),a(s)])])]),n("li",null,[n("p",null,[n("a",cn,[e("Smart Contract Security Best Practices"),a(s)])])]),n("li",null,[n("p",null,[n("a",pn,[e("Remix"),a(s)]),e(" : Solidity 在线 IDE")])]),n("li",null,[n("p",null,[n("a",un,[e("OpenZeppelin"),a(s)]),e(" : Solidity 智能合约构建工具")])]),dn])])}const mn=l(c,[["render",hn],["__file","ethereum.html.vue"]]);export{mn as default};
