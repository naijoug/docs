import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as u,c as p,a as d,b as n,e as s,d as e,w as t}from"./app-J1yPHcPX.js";const k={},_=n("h2",{id:"_0200",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0200","aria-hidden":"true"},"#"),s(" 0200")],-1),h=n("p",null,"// #region 0200",-1),m={href:"https://leetcode.cn/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},b=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),v=n("p",null,"// #endregion 0200",-1),f=n("h2",{id:"_0203-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0203-✅","aria-hidden":"true"},"#"),s(" 0203 ✅")],-1),g=n("p",null,"// #region 0203",-1),y={href:"https://leetcode.cn/problems/remove-linked-list-elements",target:"_blank",rel:"noopener noreferrer"},w=n("pre",null,[n("code",null,`  🌰
      输入：head = [1,2,6,3,4,5,6], val = 6
      输出：[1,2,3,4,5]
`)],-1),x={class:"hint-container details"},L=n("summary",null,"💡",-1),j=n("p",null,"【思路】双指针法",-1),N=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     ListNode next;
 *     ListNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; "),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val, ListNode next) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; this.next = next; "),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token function"},"removeElements"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" dummy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        dummy`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" fast "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" slow "),n("span",{class:"token operator"},"="),s(" dummy"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" fast"),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" fast"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"!="),s(" val "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 不等于目标值时，将慢节点后继节点指向快指针节点"),s(`
                slow`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" fast"),n("span",{class:"token punctuation"},";"),s(`
                slow `),n("span",{class:"token operator"},"="),s(" slow"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            fast `),n("span",{class:"token operator"},"="),s(" fast"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"// 如果已经是最后节点，需要将 slow 后继节点设为 null"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" fast "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                slow`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" dummy"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("p",null,"// #endregion 0203",-1),q=n("h2",{id:"_0204",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0204","aria-hidden":"true"},"#"),s(" 0204")],-1),S=n("p",null,"// #region 0204",-1),A={href:"https://leetcode.cn/problems/count-primes",target:"_blank",rel:"noopener noreferrer"},z=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),C=n("p",null,"// #endregion 0204",-1),V=n("h2",{id:"_0206",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0206","aria-hidden":"true"},"#"),s(" 0206")],-1),B=n("p",null,"// #region 0206",-1),E={href:"https://leetcode.cn/problems/reverse-linked-list",target:"_blank",rel:"noopener noreferrer"},O=n("blockquote",null,[n("p",null,"通过单链表的头结点 head 进行反转链表，返回反转后的链表。")],-1),T=n("details",{class:"hint-container details"},[n("summary",null,"💡"),n("p",null,"【思路】")],-1),D=n("p",null,"// #endregion 0206",-1),K=n("h2",{id:"_0207",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0207","aria-hidden":"true"},"#"),s(" 0207")],-1),Z=n("p",null,"// #region 0207",-1),F={href:"https://leetcode.cn/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},G=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),H=n("p",null,"// #endregion 0207",-1),J=n("h2",{id:"_0208",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0208","aria-hidden":"true"},"#"),s(" 0208")],-1),M=n("p",null,"// #region 0208",-1),P={href:"https://leetcode.cn/problems/implement-trie-prefix-tree",target:"_blank",rel:"noopener noreferrer"},Q=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),R=n("p",null,"// #endregion 0208",-1),U=n("h2",{id:"_0210",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0210","aria-hidden":"true"},"#"),s(" 0210")],-1),W=n("p",null,"// #region 0210",-1),X={href:"https://leetcode.cn/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},Y=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),$=n("p",null,"// #endregion 0210",-1),nn=n("h2",{id:"_0211",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0211","aria-hidden":"true"},"#"),s(" 0211")],-1),sn=n("p",null,"// #region 0211",-1),en={href:"https://leetcode.cn/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},an=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),tn=n("p",null,"// #endregion 0211",-1),on=n("h2",{id:"_0213",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0213","aria-hidden":"true"},"#"),s(" 0213")],-1),ln=n("p",null,"// #region 0213",-1),cn={href:"https://leetcode.cn/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},rn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),un=n("p",null,"// #endregion 0213",-1),pn=n("h2",{id:"_0214",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0214","aria-hidden":"true"},"#"),s(" 0214")],-1),dn=n("p",null,"// #region 0214",-1),kn={href:"https://leetcode.cn/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},_n=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),hn=n("p",null,"// #endregion 0214",-1),mn=n("h2",{id:"_0215",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0215","aria-hidden":"true"},"#"),s(" 0215")],-1),bn=n("p",null,"// #region 0215",-1),vn={href:"https://leetcode.cn/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},fn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),gn=n("p",null,"// #endregion 0215",-1),yn=n("h2",{id:"_0216-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0216-✅","aria-hidden":"true"},"#"),s(" 0216 ✅")],-1),wn=n("p",null,"// #region 0216",-1),xn={href:"https://leetcode.cn/problems/combination-sum-iii",target:"_blank",rel:"noopener noreferrer"},Ln=n("blockquote",null,[n("p",null,"使用数字 0 ~ 9 ，给定组合数量以及目标值，找出符合条件的所有组合(每一个数字只能使用一次)")],-1),jn=n("pre",null,[n("code",null,`  🌰

      输入: k = 3, n = 7
      输出: [[1,2,4]]
`)],-1),Nn={class:"hint-container details"},In=n("summary",null,"💡",-1),qn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" track "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" trackSum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"combinationSum3"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" k"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"backtrack"),n("span",{class:"token punctuation"},"("),s("k"),n("span",{class:"token punctuation"},","),s(" n"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"backtrack"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" k"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" start"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("trackSum "),n("span",{class:"token operator"},">"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 超过目标值，跳过"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("track"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(" k"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 超过组合数量，跳过"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("trackSum "),n("span",{class:"token operator"},"=="),s(" n "),n("span",{class:"token operator"},"&&"),s(" track"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(" k"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 等于目标值 && 等于组合数量收集组合"),s(`
            result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),s("track"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(" start"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            track`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            trackSum `),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token function"},"backtrack"),n("span",{class:"token punctuation"},"("),s("k"),n("span",{class:"token punctuation"},","),s(" n"),n("span",{class:"token punctuation"},","),s(" i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            track`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeLast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            trackSum `),n("span",{class:"token operator"},"-="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Sn=n("p",null,"// #endregion 0216",-1),An=n("h2",{id:"_0222",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0222","aria-hidden":"true"},"#"),s(" 0222")],-1),zn=n("p",null,"// #region 0222",-1),Cn={href:"https://leetcode.cn/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},Vn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Bn=n("p",null,"// #endregion 0222",-1),En=n("h2",{id:"_0224",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0224","aria-hidden":"true"},"#"),s(" 0224")],-1),On=n("p",null,"// #region 0224",-1),Tn={href:"https://leetcode.cn/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},Dn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Kn=n("p",null,"// #endregion 0224",-1),Zn=n("h2",{id:"_0225",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0225","aria-hidden":"true"},"#"),s(" 0225")],-1),Fn=n("p",null,"// #region 0225",-1),Gn={href:"https://leetcode.cn/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},Hn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Jn=n("p",null,"// #endregion 0225",-1),Mn=n("h2",{id:"_0226",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0226","aria-hidden":"true"},"#"),s(" 0226")],-1),Pn=n("p",null,"// #region 0226",-1),Qn={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},Rn=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Un=n("p",null,"// #endregion 0226",-1),Wn=n("h2",{id:"_0227",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0227","aria-hidden":"true"},"#"),s(" 0227")],-1),Xn=n("p",null,"// #region 0227",-1),Yn={href:"https://leetcode.cn/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},$n=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ns=n("p",null,"// #endregion 0227",-1),ss=n("h2",{id:"_0230",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0230","aria-hidden":"true"},"#"),s(" 0230")],-1),es=n("p",null,"// #region 0230",-1),as={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},ts=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),os=n("p",null,"// #endregion 0230",-1),ls=n("h2",{id:"_0231",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0231","aria-hidden":"true"},"#"),s(" 0231")],-1),cs=n("p",null,"// #region 0231",-1),is={href:"https://leetcode.cn/problems/power-of-two",target:"_blank",rel:"noopener noreferrer"},rs=n("blockquote",null,[n("p",null,"判断一个整数是否为 2 的幂次方")],-1),us=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ps=n("p",null,"// #endregion 0231",-1),ds=n("h2",{id:"_0232",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0232","aria-hidden":"true"},"#"),s(" 0232")],-1),ks=n("p",null,"// #region 0232",-1),_s={href:"https://leetcode.cn/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},hs=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ms=n("p",null,"// #endregion 0232",-1),bs=n("h2",{id:"_0234",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0234","aria-hidden":"true"},"#"),s(" 0234")],-1),vs=n("p",null,"// #region 0234",-1),fs={href:"https://leetcode.cn/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},gs=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ys=n("p",null,"// #endregion 0234",-1),ws=n("h2",{id:"_0235",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0235","aria-hidden":"true"},"#"),s(" 0235")],-1),xs=n("p",null,"// #region 0235",-1),Ls={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},js=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ns=n("p",null,"// #endregion 0235",-1),Is=n("h2",{id:"_0236",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0236","aria-hidden":"true"},"#"),s(" 0236")],-1),qs=n("p",null,"// #region 0236",-1),Ss={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},As=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),zs=n("p",null,"// #endregion 0236",-1),Cs=n("h2",{id:"_0237-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0237-✅","aria-hidden":"true"},"#"),s(" 0237 ✅")],-1),Vs=n("p",null,"// #region 0237",-1),Bs={href:"https://leetcode.cn/problems/delete-node-in-a-linked-list",target:"_blank",rel:"noopener noreferrer"},Es=n("blockquote",null,[n("p",null,"给定链表中的一个节点，删除这个节点(确保不是链表最后一个节点)")],-1),Os=n("pre",null,[n("code",null,`  🌰
      输入：head = [4,5,1,9], node = 5
      输出：[4,1,9]
`)],-1),Ts={class:"hint-container details"},Ds=n("summary",null,"💡",-1),Ks=n("p",null,"【思路】取巧方案，只需将后续节点的值赋值给当前节点，然后将删除节点的后继节点指向，后继节点的后继节点。",-1),Zs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     ListNode next;
 *     ListNode(int x) `),n("span",{class:"token punctuation"},"{"),s(" val = x; "),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" p "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" p"),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            p`),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" p"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 后继节点是最后一个节点，直接指向 null"),s(`
                p`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 后继节点不是最后一个节点，往后移动"),s(`
                p `),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Fs=n("p",null,"// #endregion 0237",-1),Gs=n("h2",{id:"_0239",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0239","aria-hidden":"true"},"#"),s(" 0239")],-1),Hs=n("p",null,"// #region 0239",-1),Js={href:"https://leetcode.cn/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Ms=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ps=n("p",null,"// #endregion 0239",-1),Qs=n("h2",{id:"_0241",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0241","aria-hidden":"true"},"#"),s(" 0241")],-1),Rs=n("p",null,"// #region 0241",-1),Us={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},Ws=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Xs=n("p",null,"// #endregion 0241",-1),Ys=n("h2",{id:"_0253",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0253","aria-hidden":"true"},"#"),s(" 0253")],-1),$s=n("p",null,"// #region 0253",-1),ne={href:"https://leetcode.cn/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},se=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ee=n("p",null,"// #endregion 0253",-1),ae=n("h2",{id:"_0256",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0256","aria-hidden":"true"},"#"),s(" 0256")],-1),te=n("p",null,"// #region 0256",-1),oe={href:"https://leetcode.cn/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},le=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ce=n("p",null,"// #endregion 0256",-1),ie=n("h2",{id:"_0260",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0260","aria-hidden":"true"},"#"),s(" 0260")],-1),re=n("p",null,"// #region 0260",-1),ue={href:"https://leetcode.cn/problems/single-number-iii",target:"_blank",rel:"noopener noreferrer"},pe=n("blockquote",null,[n("p",null,"一个非空的整数数组中，除了两个元素只出现一次外，其余元素均出现两次。找出两个只出现一次的数字 时间复杂度: O(n) 空间复杂度: O(1)")],-1),de=n("details",{class:"hint-container details"},[n("summary",null,"💡"),n("blockquote",null,[n("p",null,"升级版 一个非空的整数数组，除了三个元素只出现一次外，其余元素均出现两次。找出三个只出现一次的数字。 时间复杂度: O(n) 空间复杂度: O(1)")])],-1),ke=n("p",null,"// #endregion 0260",-1),_e=n("h2",{id:"_0261",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0261","aria-hidden":"true"},"#"),s(" 0261")],-1),he=n("p",null,"// #region 0261",-1),me={href:"https://leetcode.cn/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},be=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ve=n("p",null,"// #endregion 0261",-1),fe=n("h2",{id:"_0264",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0264","aria-hidden":"true"},"#"),s(" 0264")],-1),ge=n("p",null,"// #region 0264",-1),ye={href:"https://leetcode.cn/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},we=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),xe=n("p",null,"// #endregion 0264",-1),Le=n("h2",{id:"_0268",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0268","aria-hidden":"true"},"#"),s(" 0268")],-1),je=n("p",null,"// #region 0268",-1),Ne={href:"https://leetcode.cn/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},Ie=n("blockquote",null,[n("p",null,"给定一个包含 [0, n] 中的 n 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的那个数。")],-1),qe=n("details",{class:"hint-container details"},[n("summary",null,"💡"),n("p",null,[s("【思路】 由于这个数组的值范围为[0, n]，则表明刚好是长度为 n+1 长度的数组。数字刚好与所在的索引的位置匹配，而缺失的数表明该位置没有数。那么使用 "),n("code",null,"x ^ x = 0"),s(" 的特性。只要将数组中数值与所有的索引进行异或操作，那么结果刚好就是缺失的那个数。 代码实现时，必须要构造一个 0~n 的数组，可以在循环变量数组时，直接使用索引值。需要注意的是 nums 长度为 n，不是 n+1。所以遍历时索引值只能到 n-1，所以可以将进行异或操作的结果值初始值设置为 n。")]),n("blockquote",null,[n("p",null,"升级版 给定一个包含 [0, n] 中的 n-1 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的两个数。")])],-1),Se=n("p",null,"// #endregion 0268",-1),Ae=n("h2",{id:"_0277",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0277","aria-hidden":"true"},"#"),s(" 0277")],-1),ze=n("p",null,"// #region 0277",-1),Ce={href:"https://leetcode.cn/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},Ve=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Be=n("p",null,"// #endregion 0277",-1),Ee=n("h2",{id:"_0278",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0278","aria-hidden":"true"},"#"),s(" 0278")],-1),Oe=n("p",null,"// #region 0278",-1),Te={href:"https://leetcode.cn/problems/first-bad-version",target:"_blank",rel:"noopener noreferrer"},De=n("blockquote",null,[n("p",null,[s("软件已经发行版本号 [1, 2, 3, ..., n]，通过函数 "),n("code",null,"bool isBadVersion(version)"),s(" 可以判断该版本是否发生该错误，现在需要查找到第一个发生该错误的版本。")])],-1),Ke=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),Ze=n("p",null,"// #endregion 0278",-1),Fe=n("h2",{id:"_0283-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0283-✅","aria-hidden":"true"},"#"),s(" 0283 ✅")],-1),Ge=n("p",null,"// #region 0283",-1),He={href:"https://leetcode.cn/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"},Je=n("blockquote",null,[n("p",null,"给定一个数组，将数组中的 0 都移动到数组后面，其它元素相对位置保持不变。")],-1),Me={class:"hint-container details"},Pe=n("summary",null,"💡",-1),Qe=n("p",null,"【思路1】双指针法，遍历数组，快指针遇到 0 时，将慢指针往前移动，并将快指针值赋值到慢指针索引位置。快指针遍历完，最后将慢指针后面的元素全部置为0。",-1),Re=n("p",null,"【思路2】也是双指针，遍历数组将不为 0 的元素不停地进行交换处理。",-1),Ue=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"moveZeroes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" fast "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" slow "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" fast "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" nums"),n("span",{class:"token punctuation"},"["),s("fast"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                slow `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
                nums`),n("span",{class:"token punctuation"},"["),s("slow"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("fast"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            fast `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 将 slow 后面值均置为 0"),s(`
        slow `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" slow "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            nums`),n("span",{class:"token punctuation"},"["),s("slow"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
            slow `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),We=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"moveZeroes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" nums"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"inout"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" j "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
        `),n("span",{class:"token keyword"},"while"),s(" j "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"guard"),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(` 
                j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
                `),n("span",{class:"token keyword"},"continue"),s(` 
            `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token comment"},"// 查找不为 0 的元素，并进行交换"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" i "),n("span",{class:"token operator"},"!="),s(" j "),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"let"),s(" temp "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
                nums`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(`
                nums`),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(` temp
            `),n("span",{class:"token punctuation"},"}"),s(`
            i `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
            j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Xe=n("p",null,"// #endregion 0283",-1),Ye=n("h2",{id:"_0295",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0295","aria-hidden":"true"},"#"),s(" 0295")],-1),$e=n("p",null,"// #region 0295",-1),na={href:"https://leetcode.cn/problems/find-median-from-data-stream",target:"_blank",rel:"noopener noreferrer"},sa=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ea=n("p",null,"// #endregion 0295",-1),aa=n("h2",{id:"_0292",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0292","aria-hidden":"true"},"#"),s(" 0292")],-1),ta=n("p",null,"// #region 0292",-1),oa={href:"https://leetcode.cn/problems/nim-game",target:"_blank",rel:"noopener noreferrer"},la=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ca=n("p",null,"// #endregion 0292",-1),ia=n("h2",{id:"_0297",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0297","aria-hidden":"true"},"#"),s(" 0297")],-1),ra=n("p",null,"// #region 0297",-1),ua={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},pa=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),da=n("p",null,"// #endregion 0297",-1);function ka(_a,ha){const a=i("ExternalLinkIcon"),c=i("CodeTabs");return u(),p("div",null,[d(" more "),_,h,n("ul",null,[n("li",null,[n("a",m,[s("🟠 200 - 岛屿数量"),e(a)])])]),b,v,f,g,n("ul",null,[n("li",null,[n("p",null,[n("a",y,[s("🟢 203 - 移除链表元素"),e(a)])]),w])]),n("details",x,[L,j,e(c,{id:"37",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[s("java")]),tab0:t(({value:o,isActive:l})=>[N]),_:1})]),I,q,S,n("ul",null,[n("li",null,[n("a",A,[s("🟠 204 - 计数质数"),e(a)])])]),z,C,V,B,n("ul",null,[n("li",null,[n("a",E,[s("🟢 206 - 反转链表"),e(a)]),O])]),T,D,K,Z,n("ul",null,[n("li",null,[n("a",F,[s("🟠 207 - 课程表"),e(a)])])]),G,H,J,M,n("ul",null,[n("li",null,[n("a",P,[s("🟠 208 - 实现 Trie (前缀树)"),e(a)])])]),Q,R,U,W,n("ul",null,[n("li",null,[n("a",X,[s("🟠 210 - 课程表 II"),e(a)])])]),Y,$,nn,sn,n("ul",null,[n("li",null,[n("a",en,[s("🟠 211 - 添加与搜索单词 - 数据结构设计"),e(a)])])]),an,tn,on,ln,n("ul",null,[n("li",null,[n("a",cn,[s("🟠 213 - 打家劫舍 II"),e(a)])])]),rn,un,pn,dn,n("ul",null,[n("li",null,[n("a",kn,[s("🔴 214 - 最短回文串"),e(a)])])]),_n,hn,mn,bn,n("ul",null,[n("li",null,[n("a",vn,[s("🟠 215 - 数组中的第K个最大元素"),e(a)])])]),fn,gn,yn,wn,n("ul",null,[n("li",null,[n("p",null,[n("a",xn,[s("🟠 216 - 组合总和 III"),e(a)])]),Ln,jn])]),n("details",Nn,[In,e(c,{id:"236",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[s("java")]),tab0:t(({value:o,isActive:l})=>[qn]),_:1})]),Sn,An,zn,n("ul",null,[n("li",null,[n("a",Cn,[s("🟠 222 - 完全二叉树的节点个数"),e(a)])])]),Vn,Bn,En,On,n("ul",null,[n("li",null,[n("a",Tn,[s("🔴 224 - 基本计算器"),e(a)])])]),Dn,Kn,Zn,Fn,n("ul",null,[n("li",null,[n("a",Gn,[s("🟢 225 - 用队列实现栈"),e(a)])])]),Hn,Jn,Mn,Pn,n("ul",null,[n("li",null,[n("a",Qn,[s("🟠 226 - 翻转二叉树"),e(a)])])]),Rn,Un,Wn,Xn,n("ul",null,[n("li",null,[n("a",Yn,[s("🟠 227 - 基本计算器 II"),e(a)])])]),$n,ns,ss,es,n("ul",null,[n("li",null,[n("a",as,[s("🟠 230 - 二叉搜索树中第K小的元素"),e(a)])])]),ts,os,ls,cs,n("ul",null,[n("li",null,[n("a",is,[s("🟢 231 - 2 的幂"),e(a)]),rs])]),us,ps,ds,ks,n("ul",null,[n("li",null,[n("a",_s,[s("🟢 232 - 用栈实现队列"),e(a)])])]),hs,ms,bs,vs,n("ul",null,[n("li",null,[n("a",fs,[s("🟢 234 - 回文链表"),e(a)])])]),gs,ys,ws,xs,n("ul",null,[n("li",null,[n("a",Ls,[s("🟠 235 - 二叉搜索树的最近公共祖先"),e(a)])])]),js,Ns,Is,qs,n("ul",null,[n("li",null,[n("a",Ss,[s("🟠 236 - 二叉树的最近公共祖先"),e(a)])])]),As,zs,Cs,Vs,n("ul",null,[n("li",null,[n("p",null,[n("a",Bs,[s("🟠 237 - 删除链表中的节点"),e(a)])]),Es,Os])]),n("details",Ts,[Ds,Ks,e(c,{id:"471",data:[{id:"java"}]},{title0:t(({value:o,isActive:l})=>[s("java")]),tab0:t(({value:o,isActive:l})=>[Zs]),_:1})]),Fs,Gs,Hs,n("ul",null,[n("li",null,[n("a",Js,[s("🔴 239 - 滑动窗口最大值"),e(a)])])]),Ms,Ps,Qs,Rs,n("ul",null,[n("li",null,[n("a",Us,[s("🟠 241 - 为运算表达式设计优先级"),e(a)])])]),Ws,Xs,Ys,$s,n("ul",null,[n("li",null,[n("a",ne,[s("🟠 253 - 会议室 II"),e(a)])])]),se,ee,ae,te,n("ul",null,[n("li",null,[n("a",oe,[s("🟠 256 - 粉刷房子"),e(a)])])]),le,ce,ie,re,n("ul",null,[n("li",null,[n("a",ue,[s("🟠 260 - 只出现一次的数字 III"),e(a)]),pe])]),de,ke,_e,he,n("ul",null,[n("li",null,[n("a",me,[s("🟠 261 - 以图判树"),e(a)])])]),be,ve,fe,ge,n("ul",null,[n("li",null,[n("a",ye,[s("🟠 264 - 丑数 II"),e(a)])])]),we,xe,Le,je,n("ul",null,[n("li",null,[n("a",Ne,[s("🟢 268 - 丢失的数字"),e(a)]),Ie])]),qe,Se,Ae,ze,n("ul",null,[n("li",null,[n("a",Ce,[s("🟠 277 - 搜寻名人"),e(a)])])]),Ve,Be,Ee,Oe,n("ul",null,[n("li",null,[n("a",Te,[s("🟢 278 - 第一个错误的版本"),e(a)]),De])]),Ke,Ze,Fe,Ge,n("ul",null,[n("li",null,[n("a",He,[s("🟢 283 - 移动零"),e(a)]),Je])]),n("details",Me,[Pe,Qe,Re,e(c,{id:"713",data:[{id:"java"},{id:"swift"}]},{title0:t(({value:o,isActive:l})=>[s("java")]),title1:t(({value:o,isActive:l})=>[s("swift")]),tab0:t(({value:o,isActive:l})=>[Ue]),tab1:t(({value:o,isActive:l})=>[We]),_:1})]),Xe,Ye,$e,n("ul",null,[n("li",null,[n("a",na,[s("🔴 295 - 数据流的中位数"),e(a)])])]),sa,ea,aa,ta,n("ul",null,[n("li",null,[n("a",oa,[s("🟢 292 - Nim 游戏"),e(a)])])]),la,ca,ia,ra,n("ul",null,[n("li",null,[n("a",ua,[s("🔴 297 - 二叉树的序列化与反序列化"),e(a)])])]),pa,da])}const va=r(k,[["render",ka],["__file","0x0200.html.vue"]]);export{va as default};
