import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as c,c as i,a as l,b as n,e as s,d as t,f as e}from"./app-vBpLfDrO.js";const r={},u=n("h2",{id:"看源码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#看源码","aria-hidden":"true"},"#"),s(" 看源码")],-1),d=n("h3",{id:"isa-h",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#isa-h","aria-hidden":"true"},"#"),s(" isa.h")],-1),k={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/isa.h#L57",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// isa.h#L68</span>
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">if</span> <span class="token expression">__arm64__</span></span>
<span class="token macro property"><span class="token directive-hash">#</span>   <span class="token directive keyword">if</span> <span class="token expression">TARGET_OS_EXCLAVEKIT</span></span>
        uintptr_t nonpointer        <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// 0:普通指针，1: TaggedPointer 优化                                     </span>
        uintptr_t has_assoc         <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// 是否包含有关联引用                             </span>
        uintptr_t weakly_referenced <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// 是否有弱引用                                    </span>
        uintptr_t shiftcls_and_sig  <span class="token punctuation">:</span> <span class="token number">61</span><span class="token punctuation">;</span>   <span class="token comment">//   </span>
<span class="token macro property"><span class="token directive-hash">#</span>   <span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">__has_feature</span><span class="token punctuation">(</span>ptrauth_calls<span class="token punctuation">)</span> <span class="token operator">||</span> TARGET_OS_SIMULATOR</span></span>
        uintptr_t nonpointer        <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t has_assoc         <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t weakly_referenced <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t shiftcls_and_sig  <span class="token punctuation">:</span> <span class="token number">52</span><span class="token punctuation">;</span>                                      
        uintptr_t has_sidetable_rc  <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t extra_rc          <span class="token punctuation">:</span> <span class="token number">8</span>
<span class="token macro property"><span class="token directive-hash">#</span>   <span class="token directive keyword">else</span></span>
        uintptr_t nonpointer        <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t has_assoc         <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t has_cxx_dtor      <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// 是否包含 C++析构函数或 OC 的 dealloc                                 </span>
        uintptr_t shiftcls          <span class="token punctuation">:</span> <span class="token number">33</span><span class="token punctuation">;</span> 
        uintptr_t magic             <span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">;</span>                                       
        uintptr_t weakly_referenced <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t unused            <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t has_sidetable_rc  <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                       
        uintptr_t extra_rc          <span class="token punctuation">:</span> <span class="token number">19</span>
<span class="token macro property"><span class="token directive-hash">#</span>   <span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">elif</span> <span class="token expression">__x86_64__</span></span>
        uintptr_t nonpointer        <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         
        uintptr_t has_assoc         <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         
        uintptr_t has_cxx_dtor      <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         
        uintptr_t shiftcls          <span class="token punctuation">:</span> <span class="token number">44</span><span class="token punctuation">;</span> 
        uintptr_t magic             <span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">;</span>                                         
        uintptr_t weakly_referenced <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         
        uintptr_t unused            <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         
        uintptr_t has_sidetable_rc  <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                                         
        uintptr_t extra_rc          <span class="token punctuation">:</span> <span class="token number">8</span>
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">else</span></span>
<span class="token macro property"><span class="token directive-hash">#</span>   <span class="token directive keyword">error</span> <span class="token expression">unknown architecture <span class="token keyword">for</span> packed isa</span></span>
<span class="token macro property"><span class="token directive-hash">#</span> <span class="token directive keyword">endif</span> </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="isa" tabindex="-1"><a class="header-anchor" href="#isa" aria-hidden="true">#</a> isa</h3>`,2),m={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-private.h#L83",target:"_blank",rel:"noopener noreferrer"},b=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-private.h#L83</span>
<span class="token keyword">union</span> isa_t <span class="token punctuation">{</span>
    <span class="token function">isa_t</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token function">isa_t</span><span class="token punctuation">(</span>uintptr_t value<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">bits</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    uintptr_t bits<span class="token punctuation">;</span>
private<span class="token punctuation">:</span> 
    <span class="token comment">// Accessing the class requires custom ptrauth operations, so force clients to go through setClass/getClass by making this private.</span>
    Class cls<span class="token punctuation">;</span> <span class="token comment">// 访问类需要自定义 ptrauth 操作，将它设为私有，这样就可以强制客户端通过 setClass/getClass 来访问</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class" tabindex="-1"><a class="header-anchor" href="#class" aria-hidden="true">#</a> Class</h3>`,2),_={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-private.h#L75",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-private.h#L75</span>
<span class="token comment">// 类对象指针</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_class <span class="token operator">*</span>Class<span class="token punctuation">;</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> id</h3>`,2),f={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-private.h#L76",target:"_blank",rel:"noopener noreferrer"},j=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-private.h#L76</span>
<span class="token comment">// 实例对象指针</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_object <span class="token operator">*</span>id<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="objc-object" tabindex="-1"><a class="header-anchor" href="#objc-object" aria-hidden="true">#</a> objc_object</h3>`,2),g={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-private.h#L121",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-private.h#121</span>
<span class="token comment">// 类实例结构体定义</span>
<span class="token keyword">struct</span> objc_object <span class="token punctuation">{</span> 
private<span class="token punctuation">:</span>
    <span class="token keyword">char</span> isa_storage<span class="token punctuation">[</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>isa_t<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// reinterpret_cast : C++中的一种强制类型转换运算符，允许讲任意指针类型转化为其它类型指针 </span>
    isa_t <span class="token operator">&amp;</span><span class="token function">isa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">*</span>reinterpret_cast<span class="token operator">&lt;</span>isa_t <span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>isa_storage<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">const</span> isa_t <span class="token operator">&amp;</span><span class="token function">isa</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">*</span>reinterpret_cast<span class="token operator">&lt;</span><span class="token keyword">const</span> isa_t <span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>isa_storage<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="objc-class" tabindex="-1"><a class="header-anchor" href="#objc-class" aria-hidden="true">#</a> objc_class</h3>`,2),y={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime-new.h#L2254",target:"_blank",rel:"noopener noreferrer"},x=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime-new.h#L2254</span>
<span class="token comment">// 类结构体定义</span>
<span class="token keyword">struct</span> objc_class <span class="token punctuation">:</span> objc_object <span class="token punctuation">{</span>
    <span class="token comment">// \`= delete\` : c++ 11 语法，禁止编译器生成构造函数、赋值运算符，保证 objc_class 操作安全性</span>
    <span class="token function">objc_class</span><span class="token punctuation">(</span><span class="token keyword">const</span> objc_class<span class="token operator">&amp;</span><span class="token punctuation">)</span> <span class="token operator">=</span> delete<span class="token punctuation">;</span>
    <span class="token function">objc_class</span><span class="token punctuation">(</span>objc_class<span class="token operator">&amp;&amp;</span><span class="token punctuation">)</span> <span class="token operator">=</span> delete<span class="token punctuation">;</span>
    <span class="token keyword">void</span> operator<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">const</span> objc_class<span class="token operator">&amp;</span><span class="token punctuation">)</span> <span class="token operator">=</span> delete<span class="token punctuation">;</span>
    <span class="token keyword">void</span> operator<span class="token operator">=</span><span class="token punctuation">(</span>objc_class<span class="token operator">&amp;&amp;</span><span class="token punctuation">)</span> <span class="token operator">=</span> delete<span class="token punctuation">;</span>
    <span class="token comment">// Class ISA;</span>
    Class superclass<span class="token punctuation">;</span>
    cache_t cache<span class="token punctuation">;</span>             <span class="token comment">// formerly cache pointer and vtable         缓存指针和虚函数表(优化性能)</span>
    class_data_bits_t bits<span class="token punctuation">;</span>    <span class="token comment">// class_rw_t * plus custom rr/alloc flags   存放类数据</span>
    
    class_rw_t <span class="token operator">*</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token comment">// 获取类数据(可读可写)</span>
        <span class="token keyword">return</span> bits<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> class_ro_t <span class="token operator">*</span><span class="token function">safe_ro</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token comment">// 获取的安全的只读数据</span>
        <span class="token keyword">return</span> bits<span class="token punctuation">.</span><span class="token function">safe_ro</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="objc-getmetaclass" tabindex="-1"><a class="header-anchor" href="#objc-getmetaclass" aria-hidden="true">#</a> objc_getMetaClass</h3>`,2),C={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime.mm#L204",target:"_blank",rel:"noopener noreferrer"},L=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime.mm#L204</span>
<span class="token comment">// 通过类名获取 metaClass</span>
<span class="token comment">/***********************************************************************
* objc_getMetaClass.  Return the id of the meta class the named class.
* Warning: doesn&#39;t work if aClassName is the name of a posed-for class&#39;s isa!
**********************************************************************/</span>
Class <span class="token function">objc_getMetaClass</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>aClassName<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Class cls<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>aClassName<span class="token punctuation">)</span> <span class="token keyword">return</span> Nil<span class="token punctuation">;</span>

    cls <span class="token operator">=</span> <span class="token function">objc_getClass</span> <span class="token punctuation">(</span>aClassName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过类名获取类对象</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cls<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">_objc_inform</span> <span class="token punctuation">(</span><span class="token string">&quot;class \`%s&#39; not linked into application&quot;</span><span class="token punctuation">,</span> aClassName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Nil<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> cls<span class="token operator">-&gt;</span><span class="token function">ISA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回指向 metaClass 的 isa 指针</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class-data-bits-t" tabindex="-1"><a class="header-anchor" href="#class-data-bits-t" aria-hidden="true">#</a> class_data_bits_t</h3>`,2),P={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime-new.h#L2005",target:"_blank",rel:"noopener noreferrer"},q=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime-new.h#L2005</span>
<span class="token comment">// 类数据存放结构体</span>
<span class="token keyword">struct</span> class_data_bits_t <span class="token punctuation">{</span> 
    friend objc_class<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class-ro-t" tabindex="-1"><a class="header-anchor" href="#class-ro-t" aria-hidden="true">#</a> class_ro_t</h3>`,2),T={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime-new.h#L1505",target:"_blank",rel:"noopener noreferrer"},A=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime-new.h#L1505</span>
<span class="token comment">// 类只读结构体定义</span>
<span class="token keyword">struct</span> class_ro_t <span class="token punctuation">{</span> 
    uint32_t flags<span class="token punctuation">;</span>
    uint32_t instanceStart<span class="token punctuation">;</span> <span class="token comment">// 实例内存开始位置</span>
    uint32_t instanceSize<span class="token punctuation">;</span>  <span class="token comment">// 实例内存大小</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__LP64__</span></span>
    uint32_t reserved<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token keyword">union</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> uint8_t <span class="token operator">*</span> ivarLayout<span class="token punctuation">;</span>
        Class nonMetaclass<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 类名</span>
    explicit_atomic<span class="token operator">&lt;</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">&gt;</span> name<span class="token punctuation">;</span>
    <span class="token comment">// 基础的方法列表</span>
    objc<span class="token punctuation">:</span><span class="token punctuation">:</span>PointerUnion<span class="token operator">&lt;</span>method_list_t<span class="token punctuation">,</span> relative_list_list_t<span class="token operator">&lt;</span>method_list_t<span class="token operator">&gt;</span><span class="token punctuation">,</span> method_list_t<span class="token punctuation">:</span><span class="token punctuation">:</span>Ptrauth<span class="token punctuation">,</span> method_list_t<span class="token punctuation">:</span><span class="token punctuation">:</span>Ptrauth<span class="token operator">&gt;</span> baseMethods<span class="token punctuation">;</span>
    <span class="token comment">// 基础的协议列表</span>
    objc<span class="token punctuation">:</span><span class="token punctuation">:</span>PointerUnion<span class="token operator">&lt;</span>protocol_list_t<span class="token punctuation">,</span> relative_list_list_t<span class="token operator">&lt;</span>protocol_list_t<span class="token operator">&gt;</span><span class="token punctuation">,</span> PtrauthRaw<span class="token punctuation">,</span> PtrauthRaw<span class="token operator">&gt;</span> baseProtocols<span class="token punctuation">;</span>
    <span class="token comment">// 实例变量列表</span>
    <span class="token keyword">const</span> ivar_list_t <span class="token operator">*</span> ivars<span class="token punctuation">;</span>
    <span class="token comment">// 弱引用实例变量</span>
    <span class="token keyword">const</span> uint8_t <span class="token operator">*</span> weakIvarLayout<span class="token punctuation">;</span>
    <span class="token comment">// 基础的属性列表</span>
    objc<span class="token punctuation">:</span><span class="token punctuation">:</span>PointerUnion<span class="token operator">&lt;</span>property_list_t<span class="token punctuation">,</span> relative_list_list_t<span class="token operator">&lt;</span>property_list_t<span class="token operator">&gt;</span><span class="token punctuation">,</span> PtrauthRaw<span class="token punctuation">,</span> PtrauthRaw<span class="token operator">&gt;</span> baseProperties<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class-rw-ext-t" tabindex="-1"><a class="header-anchor" href="#class-rw-ext-t" aria-hidden="true">#</a> class_rw_ext_t</h3>`,2),S={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime-new.h#L1873",target:"_blank",rel:"noopener noreferrer"},R=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime-new.h#L1873 </span>
<span class="token comment">// 类可读可写扩展结构体定义</span>
<span class="token keyword">struct</span> class_rw_ext_t <span class="token punctuation">{</span> 
    <span class="token function">DECLARE_AUTHED_PTR_TEMPLATE</span><span class="token punctuation">(</span>class_ro_t<span class="token punctuation">)</span>
    class_ro_t_authed_ptr<span class="token operator">&lt;</span><span class="token keyword">const</span> class_ro_t<span class="token operator">&gt;</span> ro<span class="token punctuation">;</span> <span class="token comment">// 指向只读类的指针</span>
    method_array_t methods<span class="token punctuation">;</span>         <span class="token comment">// 方法列表</span>
    property_array_t properties<span class="token punctuation">;</span>    <span class="token comment">// 属性列表 </span>
    protocol_array_t protocols<span class="token punctuation">;</span>     <span class="token comment">// 协议列表</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>demangledName<span class="token punctuation">;</span>
    uint32_t version<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class-rw-t" tabindex="-1"><a class="header-anchor" href="#class-rw-t" aria-hidden="true">#</a> class_rw_t</h3>`,2),E={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime-new.h#L1883",target:"_blank",rel:"noopener noreferrer"},N=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime-new.h#L1883</span>
<span class="token comment">// 类可读可写结构体定义</span>
<span class="token keyword">struct</span> class_rw_t <span class="token punctuation">{</span> 
    <span class="token comment">// Be warned that Symbolication knows the layout of this structure.</span>
    uint32_t flags<span class="token punctuation">;</span>
    uint16_t witness<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">SUPPORT_INDEXED_ISA</span></span>
    uint16_t index<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    explicit_atomic<span class="token operator">&lt;</span>uintptr_t<span class="token operator">&gt;</span> ro_or_rw_ext<span class="token punctuation">;</span> <span class="token comment">// 原子操作指针，用于指向只读类或者类扩展</span>

    Class firstSubclass<span class="token punctuation">;</span>    <span class="token comment">// 第一个子类      </span>
    Class nextSiblingClass<span class="token punctuation">;</span> <span class="token comment">// 下一个兄弟类</span>
    
private<span class="token punctuation">:</span> <span class="token comment">// 联合指针，指向 class_ro_t 或者 class_rw_ext_t</span>
    using ro_or_rw_ext_t <span class="token operator">=</span> objc<span class="token punctuation">:</span><span class="token punctuation">:</span>PointerUnion<span class="token operator">&lt;</span><span class="token keyword">const</span> class_ro_t<span class="token punctuation">,</span> class_rw_ext_t<span class="token punctuation">,</span> <span class="token function">PTRAUTH_STR</span><span class="token punctuation">(</span><span class="token string">&quot;class_ro_t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">PTRAUTH_STR</span><span class="token punctuation">(</span><span class="token string">&quot;class_rw_ext_t&quot;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="swift-class-t" tabindex="-1"><a class="header-anchor" href="#swift-class-t" aria-hidden="true">#</a> swift_class_t</h3>`,2),I={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/objc-runtime-new.h#L2787",target:"_blank",rel:"noopener noreferrer"},U=e(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// objc-runtime-new.h#L2787</span>
<span class="token keyword">struct</span> swift_class_t <span class="token punctuation">:</span> objc_class <span class="token punctuation">{</span>
    uint32_t flags<span class="token punctuation">;</span>
    uint32_t instanceAddressOffset<span class="token punctuation">;</span>
    uint32_t instanceSize<span class="token punctuation">;</span>
    uint16_t instanceAlignMask<span class="token punctuation">;</span>
    uint16_t reserved<span class="token punctuation">;</span>

    uint32_t classSize<span class="token punctuation">;</span>
    uint32_t classAddressOffset<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token operator">*</span>description<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>

    <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">baseAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>uint8_t <span class="token operator">*</span><span class="token punctuation">)</span>this <span class="token operator">-</span> classAddressOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="写总结" tabindex="-1"><a class="header-anchor" href="#写总结" aria-hidden="true">#</a> 写总结</h2>`,2);function M(O,V){const a=p("ExternalLinkIcon");return c(),i("div",null,[l(" more "),u,d,n("blockquote",null,[n("p",null,[n("a",k,[s("👉🏻"),t(a)])])]),v,n("blockquote",null,[n("p",null,[n("a",m,[s("👉🏻"),t(a)])])]),b,n("blockquote",null,[n("p",null,[n("a",_,[s("👉🏻"),t(a)])])]),h,n("blockquote",null,[n("p",null,[n("a",f,[s("👉🏻"),t(a)])])]),j,n("blockquote",null,[n("p",null,[n("a",g,[s("👉🏻"),t(a)])])]),w,n("blockquote",null,[n("p",null,[n("a",y,[s("👉🏻"),t(a)])])]),x,n("blockquote",null,[n("p",null,[n("a",C,[s("👉🏻"),t(a)])])]),L,n("blockquote",null,[n("p",null,[n("a",P,[s("👉🏻"),t(a)])])]),q,n("blockquote",null,[n("p",null,[n("a",T,[s("👉🏻"),t(a)])])]),A,n("blockquote",null,[n("p",null,[n("a",S,[s("👉🏻"),t(a)])])]),R,n("blockquote",null,[n("p",null,[n("a",E,[s("👉🏻"),t(a)])])]),N,n("blockquote",null,[n("p",null,[n("a",I,[s("👉🏻"),t(a)])])]),U])}const D=o(r,[["render",M],["__file","0x02.class.html.vue"]]);export{D as default};
