import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as h,f as o}from"./app-b_rSVNxV.js";const a={},c=o('<h2 id="_3-栈与队列-7" tabindex="-1"><a class="header-anchor" href="#_3-栈与队列-7" aria-hidden="true">#</a> 3 栈与队列 (7)</h2><ul><li><p>3.1 一个数组实现三个栈</p><blockquote><p>描述如何只用一个数组来实现三个栈。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li><li><p>3.2 含有 min 函数的栈</p><blockquote><p>请设计一个栈，除 pop 与 push 方法，还支持 min 方法，可返回栈元素中的最小值。pop、push 和 min 三个方法的时间复杂度必须为O(1)。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li><li><p>3.3 集合栈</p><blockquote><p>设想有一堆盘子，堆太高可能会倒下来。因此，在现实生活中，盘子堆到一定高度时，我们就会另外堆一堆盘子。请实现数据结构<code>SetOfStacks</code>，模拟这种行为。<code>SetOfStacks</code>应该由多个栈组成，并且在前一个栈填满时新建一个栈。此外，<code>SetOfStacks.push()</code>和<code>SetOfStacks.pop()</code>应该与普通栈的操作方法相同（也就是说，<code>pop()</code>返回的值，应该跟只有一个栈时的情况一样）。 进阶 实现一个<code>popAt(int index)</code>方法，根据指定的子栈，执行 pop 操作。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li><li><p>3.4 汉诺塔问题</p><blockquote><p>在经典问题汉诺塔中，有 3 根柱子及 N 个不同大小的穿孔圆盘，盘子可以滑入任意一根柱子。一开始，所有盘子自底向上从大到小依次套在第一根柱子上（即每一个盘子只能放在更大的盘子上面）。移动圆盘时有以下限制： (1) 每次只能移动一个盘子 (2) 盘子只能从柱子顶端滑出移到下一根柱子 (3) 盘子只能叠在比它大的盘子上 请运用栈，编写程序将所有盘子从第一根柱子移到最后一根柱子。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li><li><p>3.5 两个栈实现队列</p><blockquote><p>实现一个<code>MyQueue</code>类，该类用两个栈来实现一个队列。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li><li><p>3.6 双栈排序</p><blockquote><p>编写程序，按升序对栈进行排序（即最大元素位于栈顶）。最多只能使用一个额外的栈存放临时数据，但不得将元素复制到别的数据结构中（如数组）。该栈支持如下操作：push、pop、peek 和 isEmpty。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li><li><p>3.7 猫狗收容所</p><blockquote><p>有家动物收容所只收容狗与猫，且严格遵守&quot;先进先出&quot;的原则。在收养该收容所的动物时，收养人只能收养所有动物中&quot;最老&quot;（根据进入收容所的时间长短）的动物，或者，可以挑选猫或狗（同时必须收养此类动物中&quot;最老&quot;的）。换言之，收养人不能自由挑选想收养的对象。请创建适用于这个系统的数据结构，实现各种操作方法，比如 enqueue、dequeueAny、dequeueDog 和 dequeueCat 等。允许使用 Java 内置的<code>LinkedList</code>数据结构。</p></blockquote><table><thead><tr><th>解法</th><th>空间复杂度</th><th>时间复杂度</th><th>思路</th></tr></thead></table></li></ul>',2),l=[c];function p(d,u){return e(),h("div",null,l)}const b=t(a,[["render",p],["__file","0x03.stack-queue.html.vue"]]);export{b as default};
