import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as r,c as o,a,f as t}from"./app-_jE41G-y.js";const d={},c=t('<h2 id="virtual-memory-虚拟内存" tabindex="-1"><a class="header-anchor" href="#virtual-memory-虚拟内存" aria-hidden="true">#</a> <code>Virtual Memory</code> - “虚拟内存”</h2><h2 id="user-mode-用户态-vs-kernel-mode-核心态" tabindex="-1"><a class="header-anchor" href="#user-mode-用户态-vs-kernel-mode-核心态" aria-hidden="true">#</a> <code>User Mode</code> - “用户态” vs <code>Kernel Mode</code> - “核心态”</h2><p>这个区分是一种安全机制，保证了用户程序不能随意访问操作系统核心数据和硬件，保证了操作系统运行的稳定性和安全性。</p><ul><li>在用户态运行的代码不能访问操作系统核心数据结构和硬件，不能执行影响操作系统稳定性的操作。</li><li>核心态运行的代码可以访问操作系统的所有的内存和硬件，大多数操作系统核心程序运行在核心态上，可以执行 CPU 指令，也可以访问所有硬件资源。</li></ul>',4);function s(i,l){return r(),o("div",null,[a(" more "),c])}const h=e(d,[["render",s],["__file","system.html.vue"]]);export{h as default};
