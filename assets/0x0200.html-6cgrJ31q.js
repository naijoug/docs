import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as r,c as p,a as d,b as n,e as s,d as o,w as a}from"./app-SXtE3mWn.js";const k={},m=n("h2",{id:"_0200",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0200","aria-hidden":"true"},"#"),s(" 0200")],-1),_=n("p",null,"// #region 0200",-1),v={href:"https://leetcode.cn/problems/number-of-islands",target:"_blank",rel:"noopener noreferrer"},h=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),b=n("p",null,"// #endregion 0200",-1),g=n("h2",{id:"_0203-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0203-✅","aria-hidden":"true"},"#"),s(" 0203 ✅")],-1),f=n("p",null,"// #region 0203",-1),w={href:"https://leetcode.cn/problems/remove-linked-list-elements",target:"_blank",rel:"noopener noreferrer"},y=n("pre",null,[n("code",null,`  🌰
      输入：head = [1,2,6,3,4,5,6], val = 6
      输出：[1,2,3,4,5]
`)],-1),j={class:"hint-container details"},x=n("summary",null,"💡",-1),A=n("p",null,"【思路】双指针法",-1),L=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     ListNode next;
 *     ListNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; "),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val, ListNode next) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; this.next = next; "),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"ListNode"),s(),n("span",{class:"token function"},"removeElements"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" dummy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ListNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        dummy`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" fast "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" slow "),n("span",{class:"token operator"},"="),s(" dummy"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" fast"),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" fast"),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"!="),s(" val "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 不等于目标值时，将慢节点后继节点指向快指针节点"),s(`
                slow`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(" fast"),n("span",{class:"token punctuation"},";"),s(`
                slow `),n("span",{class:"token operator"},"="),s(" slow"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            fast `),n("span",{class:"token operator"},"="),s(" fast"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"// 如果已经是最后节点，需要将 slow 后继节点设为 null"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" fast "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                slow`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" dummy"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("p",null,"// #endregion 0203",-1),N=n("h2",{id:"_0204-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0204-✅","aria-hidden":"true"},"#"),s(" 0204 ✅")],-1),S=n("p",null,"// #region 0204",-1),q={href:"https://leetcode.cn/problems/count-primes",target:"_blank",rel:"noopener noreferrer"},P=n("blockquote",null,[n("p",null,"给定整数 n ，返回 所有小于非负整数 n 的质数的数量 。")],-1),V=n("pre",null,[n("code",null,`  🌰
      输入：n = 10
      输出：4
      解释：小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。
`)],-1),B={class:"hint-container details"},T=n("summary",null,"💡",-1),C=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"countPrimes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" count "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 统计 2 ~ n 的质数"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"isPrimes"),n("span",{class:"token punctuation"},"("),s("i"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(" count "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" count"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token comment"},"/// 判断 n 是否是质数"),s(`
    `),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPrimes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"*"),s("i "),n("span",{class:"token operator"},"<"),s(" n"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(" i "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"countPrimes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"boolean"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" isPrimes "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"boolean"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 先将所有位置标记 true"),s(`
        `),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fill"),n("span",{class:"token punctuation"},"("),s("isPrimes"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"*"),s("i "),n("span",{class:"token operator"},"<="),s(" n"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("isPrimes"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"int"),s(" j "),n("span",{class:"token operator"},"="),s(" i "),n("span",{class:"token operator"},"+"),s(" i"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("j "),n("span",{class:"token operator"},"<"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    isPrimes`),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 质数的倍数不是质数"),s(`
                    j `),n("span",{class:"token operator"},"+="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 统计质数个数"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" count "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("isPrimes"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(" count "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" count"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("p",null,"// #endregion 0204",-1),E=n("h2",{id:"_0206",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0206","aria-hidden":"true"},"#"),s(" 0206")],-1),D=n("p",null,"// #region 0206",-1),K={href:"https://leetcode.cn/problems/reverse-linked-list",target:"_blank",rel:"noopener noreferrer"},Z=n("blockquote",null,[n("p",null,"通过单链表的头结点 head 进行反转链表，返回反转后的链表。")],-1),W={class:"hint-container details"},F=n("summary",null,"💡",-1),G=n("p",null,"【思路】",-1),H=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),J=n("p",null,"// #endregion 0206",-1),M=n("h2",{id:"_0207",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0207","aria-hidden":"true"},"#"),s(" 0207")],-1),Q=n("p",null,"// #region 0207",-1),R={href:"https://leetcode.cn/problems/course-schedule",target:"_blank",rel:"noopener noreferrer"},U={class:"hint-container details"},X=n("summary",null,"💡",-1),Y=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),$=n("p",null,"// #endregion 0207",-1),nn=n("h2",{id:"_0208",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0208","aria-hidden":"true"},"#"),s(" 0208")],-1),sn=n("p",null,"// #region 0208",-1),an={href:"https://leetcode.cn/problems/implement-trie-prefix-tree",target:"_blank",rel:"noopener noreferrer"},en={class:"hint-container details"},tn=n("summary",null,"💡",-1),on=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ln=n("p",null,"// #endregion 0208",-1),cn=n("h2",{id:"_0210",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0210","aria-hidden":"true"},"#"),s(" 0210")],-1),un=n("p",null,"// #region 0210",-1),rn={href:"https://leetcode.cn/problems/course-schedule-ii",target:"_blank",rel:"noopener noreferrer"},pn={class:"hint-container details"},dn=n("summary",null,"💡",-1),kn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),mn=n("p",null,"// #endregion 0210",-1),_n=n("h2",{id:"_0211",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0211","aria-hidden":"true"},"#"),s(" 0211")],-1),vn=n("p",null,"// #region 0211",-1),hn={href:"https://leetcode.cn/problems/design-add-and-search-words-data-structure",target:"_blank",rel:"noopener noreferrer"},bn={class:"hint-container details"},gn=n("summary",null,"💡",-1),fn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),wn=n("p",null,"// #endregion 0211",-1),yn=n("h2",{id:"_0213",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0213","aria-hidden":"true"},"#"),s(" 0213")],-1),jn=n("p",null,"// #region 0213",-1),xn={href:"https://leetcode.cn/problems/house-robber-ii",target:"_blank",rel:"noopener noreferrer"},An={class:"hint-container details"},Ln=n("summary",null,"💡",-1),In=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Nn=n("p",null,"// #endregion 0213",-1),Sn=n("h2",{id:"_0214",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0214","aria-hidden":"true"},"#"),s(" 0214")],-1),qn=n("p",null,"// #region 0214",-1),Pn={href:"https://leetcode.cn/problems/shortest-palindrome",target:"_blank",rel:"noopener noreferrer"},Vn={class:"hint-container details"},Bn=n("summary",null,"💡",-1),Tn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Cn=n("p",null,"// #endregion 0214",-1),On=n("h2",{id:"_0215",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0215","aria-hidden":"true"},"#"),s(" 0215")],-1),zn=n("p",null,"// #region 0215",-1),En={href:"https://leetcode.cn/problems/kth-largest-element-in-an-array",target:"_blank",rel:"noopener noreferrer"},Dn=n("blockquote",null,[n("p",null,"给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。(要求: 时间复杂度 O(n))")],-1),Kn=n("pre",null,[n("code",null,`  🌰
      输入: [3,2,1,5,6,4], k = 2
      输出: 5
`)],-1),Zn={class:"hint-container details"},Wn=n("summary",null,"💡",-1),Fn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`


`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Gn=n("p",null,"// #endregion 0215",-1),Hn=n("h2",{id:"_0216-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0216-✅","aria-hidden":"true"},"#"),s(" 0216 ✅")],-1),Jn=n("p",null,"// #region 0216",-1),Mn={href:"https://leetcode.cn/problems/combination-sum-iii",target:"_blank",rel:"noopener noreferrer"},Qn=n("blockquote",null,[n("p",null,"使用数字 0 ~ 9 ，给定组合数量以及目标值，找出符合条件的所有组合(每一个数字只能使用一次)")],-1),Rn=n("pre",null,[n("code",null,`  🌰

      输入: k = 3, n = 7
      输出: [[1,2,4]]
`)],-1),Un={class:"hint-container details"},Xn=n("summary",null,"💡",-1),Yn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" track "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" trackSum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"combinationSum3"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" k"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"backtrack"),n("span",{class:"token punctuation"},"("),s("k"),n("span",{class:"token punctuation"},","),s(" n"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"backtrack"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" k"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" start"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("trackSum "),n("span",{class:"token operator"},">"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 超过目标值，跳过"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("track"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(" k"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 超过组合数量，跳过"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("trackSum "),n("span",{class:"token operator"},"=="),s(" n "),n("span",{class:"token operator"},"&&"),s(" track"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(" k"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 等于目标值 && 等于组合数量收集组合"),s(`
            result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),s("track"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(" start"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            track`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            trackSum `),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token function"},"backtrack"),n("span",{class:"token punctuation"},"("),s("k"),n("span",{class:"token punctuation"},","),s(" n"),n("span",{class:"token punctuation"},","),s(" i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            track`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeLast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            trackSum `),n("span",{class:"token operator"},"-="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$n=n("p",null,"// #endregion 0216",-1),ns=n("h2",{id:"_0222",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0222","aria-hidden":"true"},"#"),s(" 0222")],-1),ss=n("p",null,"// #region 0222",-1),as={href:"https://leetcode.cn/problems/count-complete-tree-nodes",target:"_blank",rel:"noopener noreferrer"},es=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ts=n("p",null,"// #endregion 0222",-1),os=n("h2",{id:"_0224",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0224","aria-hidden":"true"},"#"),s(" 0224")],-1),ls=n("p",null,"// #region 0224",-1),is={href:"https://leetcode.cn/problems/basic-calculator",target:"_blank",rel:"noopener noreferrer"},cs=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),us=n("p",null,"// #endregion 0224",-1),rs=n("h2",{id:"_0225",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0225","aria-hidden":"true"},"#"),s(" 0225")],-1),ps=n("p",null,"// #region 0225",-1),ds={href:"https://leetcode.cn/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"},ks=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),ms=n("p",null,"// #endregion 0225",-1),_s=n("h2",{id:"_0226",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0226","aria-hidden":"true"},"#"),s(" 0226")],-1),vs=n("p",null,"// #region 0226",-1),hs={href:"https://leetcode.cn/problems/invert-binary-tree",target:"_blank",rel:"noopener noreferrer"},bs={class:"hint-container details"},gs=n("summary",null,"💡",-1),fs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ws=n("p",null,"// #endregion 0226",-1),ys=n("h2",{id:"_0227",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0227","aria-hidden":"true"},"#"),s(" 0227")],-1),js=n("p",null,"// #region 0227",-1),xs={href:"https://leetcode.cn/problems/basic-calculator-ii",target:"_blank",rel:"noopener noreferrer"},As={class:"hint-container details"},Ls=n("summary",null,"💡",-1),Is=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Ns=n("p",null,"// #endregion 0227",-1),Ss=n("h2",{id:"_0230",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0230","aria-hidden":"true"},"#"),s(" 0230")],-1),qs=n("p",null,"// #region 0230",-1),Ps={href:"https://leetcode.cn/problems/kth-smallest-element-in-a-bst",target:"_blank",rel:"noopener noreferrer"},Vs={class:"hint-container details"},Bs=n("summary",null,"💡",-1),Ts=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Cs=n("p",null,"// #endregion 0230",-1),Os=n("h2",{id:"_0231-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0231-✅","aria-hidden":"true"},"#"),s(" 0231 ✅")],-1),zs=n("p",null,"// #region 0231",-1),Es={href:"https://leetcode.cn/problems/power-of-two",target:"_blank",rel:"noopener noreferrer"},Ds=n("blockquote",null,[n("p",null,"判断一个整数是否为 2 的幂次方")],-1),Ks={class:"hint-container details"},Zs=n("summary",null,"💡",-1),Ws=n("p",null,"【思路1】除余法，对 2 进行不停的除法，如果最后余数结果等于 1 则表明是 2 的幂次。",-1),Fs=n("p",null,"【思路2】位运算，如果 n 是 2 的幂次方，那么 n & (n - 1) == 0",-1),Gs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfTwo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
            n `),n("span",{class:"token operator"},"/="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Hs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfTwo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Js=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"isPowerOfTwo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" n"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"guard"),s(" n "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),s(),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ms=n("p",null,"// #endregion 0231",-1),Qs=n("h2",{id:"_0232",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0232","aria-hidden":"true"},"#"),s(" 0232")],-1),Rs=n("p",null,"// #region 0232",-1),Us={href:"https://leetcode.cn/problems/implement-queue-using-stacks",target:"_blank",rel:"noopener noreferrer"},Xs={class:"hint-container details"},Ys=n("summary",null,"💡",-1),$s=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),na=n("p",null,"// #endregion 0232",-1),sa=n("h2",{id:"_0233",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0233","aria-hidden":"true"},"#"),s(" 0233")],-1),aa=n("p",null,"// #region 0233",-1),ea={href:"https://leetcode.cn/problems/number-of-digit-one",target:"_blank",rel:"noopener noreferrer"},ta=n("blockquote",null,[n("p",null,"给定一个整数 n，计算所有小于等于 n 的非负整数中数字 1 出现的个数。")],-1),oa=n("pre",null,[n("code",null,`  🌰
      输入：n = 13
      输出：6
`)],-1),la={class:"hint-container details"},ia=n("summary",null,"💡",-1),ca=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ua=n("p",null,"// #endregion 0233",-1),ra=n("h2",{id:"_0234",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0234","aria-hidden":"true"},"#"),s(" 0234")],-1),pa=n("p",null,"// #region 0234",-1),da={href:"https://leetcode.cn/problems/palindrome-linked-list",target:"_blank",rel:"noopener noreferrer"},ka={class:"hint-container details"},ma=n("summary",null,"💡",-1),_a=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),va=n("p",null,"// #endregion 0234",-1),ha=n("h2",{id:"_0235",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0235","aria-hidden":"true"},"#"),s(" 0235")],-1),ba=n("p",null,"// #region 0235",-1),ga={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree",target:"_blank",rel:"noopener noreferrer"},fa={class:"hint-container details"},wa=n("summary",null,"💡",-1),ya=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ja=n("p",null,"// #endregion 0235",-1),xa=n("h2",{id:"_0236",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0236","aria-hidden":"true"},"#"),s(" 0236")],-1),Aa=n("p",null,"// #region 0236",-1),La={href:"https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree",target:"_blank",rel:"noopener noreferrer"},Ia={class:"hint-container details"},Na=n("summary",null,"💡",-1),Sa=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),qa=n("p",null,"// #endregion 0236",-1),Pa=n("h2",{id:"_0237-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0237-✅","aria-hidden":"true"},"#"),s(" 0237 ✅")],-1),Va=n("p",null,"// #region 0237",-1),Ba={href:"https://leetcode.cn/problems/delete-node-in-a-linked-list",target:"_blank",rel:"noopener noreferrer"},Ta=n("blockquote",null,[n("p",null,"给定链表中的一个节点，删除这个节点(确保不是链表最后一个节点)")],-1),Ca=n("pre",null,[n("code",null,`  🌰
      输入：head = [4,5,1,9], node = 5
      输出：[4,1,9]
`)],-1),Oa={class:"hint-container details"},za=n("summary",null,"💡",-1),Ea=n("p",null,"【思路】取巧方案，只需将后续节点的值赋值给当前节点，然后将删除节点的后继节点指向，后继节点的后继节点。",-1),Da=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     ListNode next;
 *     ListNode(int x) `),n("span",{class:"token punctuation"},"{"),s(" val = x; "),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" p "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" p"),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            p`),n("span",{class:"token punctuation"},"."),s("val "),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" p"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 后继节点是最后一个节点，直接指向 null"),s(`
                p`),n("span",{class:"token punctuation"},"."),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 后继节点不是最后一个节点，往后移动"),s(`
                p `),n("span",{class:"token operator"},"="),s(" p"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ka=n("p",null,"// #endregion 0237",-1),Za=n("h2",{id:"_0239",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0239","aria-hidden":"true"},"#"),s(" 0239")],-1),Wa=n("p",null,"// #region 0239",-1),Fa={href:"https://leetcode.cn/problems/sliding-window-maximum",target:"_blank",rel:"noopener noreferrer"},Ga={class:"hint-container details"},Ha=n("summary",null,"💡",-1),Ja=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Ma=n("p",null,"// #endregion 0239",-1),Qa=n("h2",{id:"_0241",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0241","aria-hidden":"true"},"#"),s(" 0241")],-1),Ra=n("p",null,"// #region 0241",-1),Ua={href:"https://leetcode.cn/problems/different-ways-to-add-parentheses",target:"_blank",rel:"noopener noreferrer"},Xa={class:"hint-container details"},Ya=n("summary",null,"💡",-1),$a=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ne=n("p",null,"// #endregion 0241",-1),se=n("h2",{id:"_0253",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0253","aria-hidden":"true"},"#"),s(" 0253")],-1),ae=n("p",null,"// #region 0253",-1),ee={href:"https://leetcode.cn/problems/meeting-rooms-ii",target:"_blank",rel:"noopener noreferrer"},te={class:"hint-container details"},oe=n("summary",null,"💡",-1),le=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ie=n("p",null,"// #endregion 0253",-1),ce=n("h2",{id:"_0256",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0256","aria-hidden":"true"},"#"),s(" 0256")],-1),ue=n("p",null,"// #region 0256",-1),re={href:"https://leetcode.cn/problems/paint-house",target:"_blank",rel:"noopener noreferrer"},pe={class:"hint-container details"},de=n("summary",null,"💡",-1),ke=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),me=n("p",null,"// #endregion 0256",-1),_e=n("h2",{id:"_0260",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0260","aria-hidden":"true"},"#"),s(" 0260")],-1),ve=n("p",null,"// #region 0260",-1),he={href:"https://leetcode.cn/problems/single-number-iii",target:"_blank",rel:"noopener noreferrer"},be=n("blockquote",null,[n("p",null,"一个非空的整数数组中，除了两个元素只出现一次外，其余元素均出现两次。找出两个只出现一次的数字 时间复杂度: O(n) 空间复杂度: O(1)")],-1),ge={class:"hint-container details"},fe=n("summary",null,"💡",-1),we=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ye=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),je=n("p",null,"// #endregion 0260",-1),xe=n("h2",{id:"_0261",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0261","aria-hidden":"true"},"#"),s(" 0261")],-1),Ae=n("p",null,"// #region 0261",-1),Le={href:"https://leetcode.cn/problems/graph-valid-tree",target:"_blank",rel:"noopener noreferrer"},Ie={class:"hint-container details"},Ne=n("summary",null,"💡",-1),Se=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),qe=n("p",null,"// #endregion 0261",-1),Pe=n("h2",{id:"_0264",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0264","aria-hidden":"true"},"#"),s(" 0264")],-1),Ve=n("p",null,"// #region 0264",-1),Be={href:"https://leetcode.cn/problems/ugly-number-ii",target:"_blank",rel:"noopener noreferrer"},Te={class:"hint-container details"},Ce=n("summary",null,"💡",-1),Oe=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),ze=n("p",null,"// #endregion 0264",-1),Ee=n("h2",{id:"_0268-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0268-✅","aria-hidden":"true"},"#"),s(" 0268 ✅")],-1),De=n("p",null,"// #region 0268",-1),Ke={href:"https://leetcode.cn/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},Ze=n("blockquote",null,[n("p",null,"给定一个包含 [0, n] 中的 n 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的那个数。")],-1),We={class:"hint-container details"},Fe=n("summary",null,"💡",-1),Ge=n("p",null,"【思路1】缺失的数 = 等差数列求和 - 数组的和",-1),He=n("p",null,[s("【思路2】位运算 由于这个数组的值范围为[0, n]，则表明刚好是长度为 n+1 长度的数组。数字刚好与所在的索引的位置匹配，而缺失的数表明该位置没有数。那么使用 "),n("code",null,"x ^ x = 0"),s(" 的特性。只要将数组中数值与所有的索引进行异或操作，那么结果刚好就是缺失的那个数。 代码实现时，必须要构造一个 0~n 的数组，可以在循环变量数组时，直接使用索引值。需要注意的是 nums 长度为 n，不是 n+1。所以遍历时索引值只能到 n-1，所以可以将进行异或操作的结果值初始值设置为 n。")],-1),Je=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"missingNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" sum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 数组的和"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},":"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            sum `),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 缺失的数 = 数学等差数列求和 - 数组的和"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" len "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},"+"),s(" len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"*"),s("len"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"-"),s(" sum"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Me=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"missingNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" nums"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Int"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"let"),s(" count "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s(`count
        `),n("span",{class:"token keyword"},"var"),s(" result "),n("span",{class:"token operator"},"="),s(` count
        `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token operator"},"..<"),s("count "),n("span",{class:"token punctuation"},"{"),s(`
            result `),n("span",{class:"token operator"},"^="),s(` i
            result `),n("span",{class:"token operator"},"^="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` result
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Qe=n("blockquote",null,[n("p",null,"升级版 给定一个包含 [0, n] 中的 n-1 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的两个数。")],-1),Re=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Ue=n("p",null,"// #endregion 0268",-1),Xe=n("h2",{id:"_0277",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0277","aria-hidden":"true"},"#"),s(" 0277")],-1),Ye=n("p",null,"// #region 0277",-1),$e={href:"https://leetcode.cn/problems/find-the-celebrity",target:"_blank",rel:"noopener noreferrer"},nt={class:"hint-container details"},st=n("summary",null,"💡",-1),at=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),et=n("p",null,"// #endregion 0277",-1),tt=n("h2",{id:"_0278-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0278-✅","aria-hidden":"true"},"#"),s(" 0278 ✅")],-1),ot=n("p",null,"// #region 0278",-1),lt={href:"https://leetcode.cn/problems/first-bad-version",target:"_blank",rel:"noopener noreferrer"},it=n("blockquote",null,[n("p",null,[s("软件已经发行版本号 [1, 2, 3, ..., n]，通过函数 "),n("code",null,"bool isBadVersion(version)"),s(" 可以判断该版本是否发生该错误，现在需要查找到第一个发生该错误的版本。")])],-1),ct={class:"hint-container details"},ut=n("summary",null,"💡",-1),rt=n("p",null,"【思路】二分搜索",-1),pt=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},`/* The isBadVersion API is defined in the parent class VersionControl.
      boolean isBadVersion(int version); */`),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"VersionControl"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"firstBadVersion"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" right "),n("span",{class:"token operator"},"="),s(" n"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("left "),n("span",{class:"token operator"},"<="),s(" right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" mid "),n("span",{class:"token operator"},"="),s(" left "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),s("right "),n("span",{class:"token operator"},"-"),s(" left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"isBadVersion"),n("span",{class:"token punctuation"},"("),s("mid"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// bug 版本，调整右边界"),s(`
                right `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 非 bug 版本，调整左边界"),s(`
                left `),n("span",{class:"token operator"},"="),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dt=n("p",null,"// #endregion 0278",-1),kt=n("h2",{id:"_0283-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0283-✅","aria-hidden":"true"},"#"),s(" 0283 ✅")],-1),mt=n("p",null,"// #region 0283",-1),_t={href:"https://leetcode.cn/problems/move-zeroes/",target:"_blank",rel:"noopener noreferrer"},vt=n("blockquote",null,[n("p",null,"给定一个数组，将数组中的 0 都移动到数组后面，其它元素相对位置保持不变。")],-1),ht={class:"hint-container details"},bt=n("summary",null,"💡",-1),gt=n("p",null,"【思路1】双指针法，遍历数组，快指针遇到 0 时，将慢指针往前移动，并将快指针值赋值到慢指针索引位置。快指针遍历完，最后将慢指针后面的元素全部置为0。",-1),ft=n("p",null,"【思路2】也是双指针，遍历数组将不为 0 的元素不停地进行交换处理。",-1),wt=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"moveZeroes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" fast "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" slow "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" fast "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s(" nums"),n("span",{class:"token punctuation"},"["),s("fast"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                slow `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
                nums`),n("span",{class:"token punctuation"},"["),s("slow"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("fast"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            fast `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 将 slow 后面值均置为 0"),s(`
        slow `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s(" slow "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            nums`),n("span",{class:"token punctuation"},"["),s("slow"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
            slow `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),yt=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"moveZeroes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" nums"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"inout"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
        `),n("span",{class:"token keyword"},"var"),s(" j "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
        `),n("span",{class:"token keyword"},"while"),s(" j "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"guard"),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(` 
                j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
                `),n("span",{class:"token keyword"},"continue"),s(` 
            `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token comment"},"// 查找不为 0 的元素，并进行交换"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" i "),n("span",{class:"token operator"},"!="),s(" j "),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"let"),s(" temp "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
                nums`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(`
                nums`),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(` temp
            `),n("span",{class:"token punctuation"},"}"),s(`
            i `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
            j `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),jt=n("p",null,"// #endregion 0283",-1),xt=n("h2",{id:"_0295",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0295","aria-hidden":"true"},"#"),s(" 0295")],-1),At=n("p",null,"// #region 0295",-1),Lt={href:"https://leetcode.cn/problems/find-median-from-data-stream",target:"_blank",rel:"noopener noreferrer"},It={class:"hint-container details"},Nt=n("summary",null,"💡",-1),St=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),qt=n("p",null,"// #endregion 0295",-1),Pt=n("h2",{id:"_0292-✅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0292-✅","aria-hidden":"true"},"#"),s(" 0292 ✅")],-1),Vt=n("p",null,"// #region 0292",-1),Bt={href:"https://leetcode.cn/problems/nim-game",target:"_blank",rel:"noopener noreferrer"},Tt=n("blockquote",null,[n("p",null,"抓石头游戏，一堆石头，每人每回合能拿 1 ~ 3 个石头，最后拿完石头者获胜。给定一个石头数，判断是否能获胜？")],-1),Ct={class:"hint-container details"},Ot=n("summary",null,"💡",-1),zt=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"canWinNim"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 当石头数是不是 4 的倍数时，必赢"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Et=n("p",null,"// #endregion 0292",-1),Dt=n("h2",{id:"_0297",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0297","aria-hidden":"true"},"#"),s(" 0297")],-1),Kt=n("p",null,"// #region 0297",-1),Zt={href:"https://leetcode.cn/problems/serialize-and-deserialize-binary-tree",target:"_blank",rel:"noopener noreferrer"},Wt={class:"hint-container details"},Ft=n("summary",null,"💡",-1),Gt=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Ht=n("p",null,"// #endregion 0297",-1);function Jt(Mt,Qt){const l=c("ExternalLinkIcon"),i=c("CodeTabs");return r(),p("div",null,[d(" more "),m,_,n("ul",null,[n("li",null,[n("a",v,[s("🟠 200 - 岛屿数量"),o(l)])])]),h,b,g,f,n("ul",null,[n("li",null,[n("p",null,[n("a",w,[s("🟢 203 - 移除链表元素"),o(l)])]),y])]),n("details",j,[x,A,o(i,{id:"37",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[L]),_:1})]),I,N,S,n("ul",null,[n("li",null,[n("p",null,[n("a",q,[s("🟠 204 - 计数质数"),o(l)])]),P,V])]),n("details",B,[T,o(i,{id:"66",data:[{id:"java 解法1"},{id:"java 解法2 💯"}]},{title0:a(({value:e,isActive:t})=>[s("java 解法1")]),title1:a(({value:e,isActive:t})=>[s("java 解法2 💯")]),tab0:a(({value:e,isActive:t})=>[C]),tab1:a(({value:e,isActive:t})=>[O]),_:1})]),z,E,D,n("ul",null,[n("li",null,[n("a",K,[s("🟢 206 - 反转链表"),o(l)]),Z])]),n("details",W,[F,G,o(i,{id:"109",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[H]),_:1})]),J,M,Q,n("ul",null,[n("li",null,[n("a",R,[s("🟠 207 - 课程表"),o(l)])])]),n("details",U,[X,o(i,{id:"132",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Y]),_:1})]),$,nn,sn,n("ul",null,[n("li",null,[n("a",an,[s("🟠 208 - 实现 Trie (前缀树)"),o(l)])])]),n("details",en,[tn,o(i,{id:"155",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[on]),_:1})]),ln,cn,un,n("ul",null,[n("li",null,[n("a",rn,[s("🟠 210 - 课程表 II"),o(l)])])]),n("details",pn,[dn,o(i,{id:"178",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[kn]),_:1})]),mn,_n,vn,n("ul",null,[n("li",null,[n("a",hn,[s("🟠 211 - 添加与搜索单词 - 数据结构设计"),o(l)])])]),n("details",bn,[gn,o(i,{id:"201",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[fn]),_:1})]),wn,yn,jn,n("ul",null,[n("li",null,[n("a",xn,[s("🟠 213 - 打家劫舍 II"),o(l)])])]),n("details",An,[Ln,o(i,{id:"224",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[In]),_:1})]),Nn,Sn,qn,n("ul",null,[n("li",null,[n("a",Pn,[s("🔴 214 - 最短回文串"),o(l)])])]),n("details",Vn,[Bn,o(i,{id:"247",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Tn]),_:1})]),Cn,On,zn,n("ul",null,[n("li",null,[n("p",null,[n("a",En,[s("🟠 215 - 数组中的第K个最大元素"),o(l)])]),Dn,Kn])]),n("details",Zn,[Wn,o(i,{id:"276",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Fn]),_:1})]),Gn,Hn,Jn,n("ul",null,[n("li",null,[n("p",null,[n("a",Mn,[s("🟠 216 - 组合总和 III"),o(l)])]),Qn,Rn])]),n("details",Un,[Xn,o(i,{id:"305",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Yn]),_:1})]),$n,ns,ss,n("ul",null,[n("li",null,[n("a",as,[s("🟠 222 - 完全二叉树的节点个数"),o(l)])])]),es,ts,os,ls,n("ul",null,[n("li",null,[n("a",is,[s("🔴 224 - 基本计算器"),o(l)])])]),cs,us,rs,ps,n("ul",null,[n("li",null,[n("a",ds,[s("🟢 225 - 用队列实现栈"),o(l)])])]),ks,ms,_s,vs,n("ul",null,[n("li",null,[n("a",hs,[s("🟠 226 - 翻转二叉树"),o(l)])])]),n("details",bs,[gs,o(i,{id:"382",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[fs]),_:1})]),ws,ys,js,n("ul",null,[n("li",null,[n("a",xs,[s("🟠 227 - 基本计算器 II"),o(l)])])]),n("details",As,[Ls,o(i,{id:"405",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Is]),_:1})]),Ns,Ss,qs,n("ul",null,[n("li",null,[n("a",Ps,[s("🟠 230 - 二叉搜索树中第K小的元素"),o(l)])])]),n("details",Vs,[Bs,o(i,{id:"428",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Ts]),_:1})]),Cs,Os,zs,n("ul",null,[n("li",null,[n("a",Es,[s("🟢 231 - 2 的幂"),o(l)]),Ds])]),n("details",Ks,[Zs,Ws,Fs,o(i,{id:"462",data:[{id:"java 解法1"},{id:"java 解法2"},{id:"swift 解法2"}]},{title0:a(({value:e,isActive:t})=>[s("java 解法1")]),title1:a(({value:e,isActive:t})=>[s("java 解法2")]),title2:a(({value:e,isActive:t})=>[s("swift 解法2")]),tab0:a(({value:e,isActive:t})=>[Gs]),tab1:a(({value:e,isActive:t})=>[Hs]),tab2:a(({value:e,isActive:t})=>[Js]),_:1})]),Ms,Qs,Rs,n("ul",null,[n("li",null,[n("a",Us,[s("🟢 232 - 用栈实现队列"),o(l)])])]),n("details",Xs,[Ys,o(i,{id:"491",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[$s]),_:1})]),na,sa,aa,n("ul",null,[n("li",null,[n("p",null,[n("a",ea,[s("🔴 233 - 数字 1 的个数"),o(l)])]),ta,oa])]),n("details",la,[ia,o(i,{id:"520",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[ca]),_:1})]),ua,ra,pa,n("ul",null,[n("li",null,[n("a",da,[s("🟢 234 - 回文链表"),o(l)])])]),n("details",ka,[ma,o(i,{id:"546",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[_a]),_:1})]),va,ha,ba,n("ul",null,[n("li",null,[n("a",ga,[s("🟠 235 - 二叉搜索树的最近公共祖先"),o(l)])])]),n("details",fa,[wa,o(i,{id:"569",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[ya]),_:1})]),ja,xa,Aa,n("ul",null,[n("li",null,[n("a",La,[s("🟠 236 - 二叉树的最近公共祖先"),o(l)])])]),n("details",Ia,[Na,o(i,{id:"592",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Sa]),_:1})]),qa,Pa,Va,n("ul",null,[n("li",null,[n("p",null,[n("a",Ba,[s("🟠 237 - 删除链表中的节点"),o(l)])]),Ta,Ca])]),n("details",Oa,[za,Ea,o(i,{id:"624",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Da]),_:1})]),Ka,Za,Wa,n("ul",null,[n("li",null,[n("a",Fa,[s("🔴 239 - 滑动窗口最大值"),o(l)])])]),n("details",Ga,[Ha,o(i,{id:"647",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Ja]),_:1})]),Ma,Qa,Ra,n("ul",null,[n("li",null,[n("a",Ua,[s("🟠 241 - 为运算表达式设计优先级"),o(l)])])]),n("details",Xa,[Ya,o(i,{id:"670",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[$a]),_:1})]),ne,se,ae,n("ul",null,[n("li",null,[n("a",ee,[s("🟠 253 - 会议室 II"),o(l)])])]),n("details",te,[oe,o(i,{id:"693",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[le]),_:1})]),ie,ce,ue,n("ul",null,[n("li",null,[n("a",re,[s("🟠 256 - 粉刷房子"),o(l)])])]),n("details",pe,[de,o(i,{id:"716",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[ke]),_:1})]),me,_e,ve,n("ul",null,[n("li",null,[n("a",he,[s("🟠 260 - 只出现一次的数字 III"),o(l)]),be])]),n("details",ge,[fe,o(i,{id:"744",data:[{id:"java"},{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),title1:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[we]),tab1:a(({value:e,isActive:t})=>[ye]),_:1})]),je,xe,Ae,n("ul",null,[n("li",null,[n("a",Le,[s("🟠 261 - 以图判树"),o(l)])])]),n("details",Ie,[Ne,o(i,{id:"777",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Se]),_:1})]),qe,Pe,Ve,n("ul",null,[n("li",null,[n("a",Be,[s("🟠 264 - 丑数 II"),o(l)])])]),n("details",Te,[Ce,o(i,{id:"800",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Oe]),_:1})]),ze,Ee,De,n("ul",null,[n("li",null,[n("a",Ke,[s("🟢 268 - 丢失的数字"),o(l)]),Ze])]),n("details",We,[Fe,Ge,He,o(i,{id:"834",data:[{id:"java 解法1"},{id:"swift 解法2"}]},{title0:a(({value:e,isActive:t})=>[s("java 解法1")]),title1:a(({value:e,isActive:t})=>[s("swift 解法2")]),tab0:a(({value:e,isActive:t})=>[Je]),tab1:a(({value:e,isActive:t})=>[Me]),_:1})]),Qe,o(i,{id:"848",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Re]),_:1}),Ue,Xe,Ye,n("ul",null,[n("li",null,[n("a",$e,[s("🟠 277 - 搜寻名人"),o(l)])])]),n("details",nt,[st,o(i,{id:"870",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[at]),_:1})]),et,tt,ot,n("ul",null,[n("li",null,[n("a",lt,[s("🟢 278 - 第一个错误的版本"),o(l)]),it])]),n("details",ct,[ut,rt,o(i,{id:"901",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[pt]),_:1})]),dt,kt,mt,n("ul",null,[n("li",null,[n("a",_t,[s("🟢 283 - 移动零"),o(l)]),vt])]),n("details",ht,[bt,gt,ft,o(i,{id:"935",data:[{id:"java"},{id:"swift"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),title1:a(({value:e,isActive:t})=>[s("swift")]),tab0:a(({value:e,isActive:t})=>[wt]),tab1:a(({value:e,isActive:t})=>[yt]),_:1})]),jt,xt,At,n("ul",null,[n("li",null,[n("a",Lt,[s("🔴 295 - 数据流的中位数"),o(l)])])]),n("details",It,[Nt,o(i,{id:"961",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[St]),_:1})]),qt,Pt,Vt,n("ul",null,[n("li",null,[n("a",Bt,[s("🟢 292 - Nim 游戏"),o(l)]),Tt])]),n("details",Ct,[Ot,o(i,{id:"989",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[zt]),_:1})]),Et,Dt,Kt,n("ul",null,[n("li",null,[n("a",Zt,[s("🔴 297 - 二叉树的序列化与反序列化"),o(l)])])]),n("details",Wt,[Ft,o(i,{id:"1015",data:[{id:"java"}]},{title0:a(({value:e,isActive:t})=>[s("java")]),tab0:a(({value:e,isActive:t})=>[Gt]),_:1})]),Ht])}const Xt=u(k,[["render",Jt],["__file","0x0200.html.vue"]]);export{Xt as default};
