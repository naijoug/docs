const e=JSON.parse('{"key":"v-35f22787","path":"/interview/flutter/0x02.flutter.html","title":"Flutter","lang":"zh-CN","frontmatter":{"title":"Flutter","icon":"hashtag","index":true,"description":"Flutter ❓命令式 UI vs 声明式 UI 💡 命令式 : 告诉程序一步一步如何搭建所需要的界面，类似做菜的教程; 声明式 : 告诉程序我需要一个怎样的界面，类似做菜的菜单; 命令式 UI 和声明式 UI 是两种不同的用户界面编程范式。 命令式 UI: 一种更为传统的编程范式，开发者需要手动管理 UI 的状态，当状态发生变化时，也需要手动更新...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/flutter/0x02.flutter.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Flutter"}],["meta",{"property":"og:description","content":"Flutter ❓命令式 UI vs 声明式 UI 💡 命令式 : 告诉程序一步一步如何搭建所需要的界面，类似做菜的教程; 声明式 : 告诉程序我需要一个怎样的界面，类似做菜的菜单; 命令式 UI 和声明式 UI 是两种不同的用户界面编程范式。 命令式 UI: 一种更为传统的编程范式，开发者需要手动管理 UI 的状态，当状态发生变化时，也需要手动更新..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-28T06:45:42.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-28T06:45:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Flutter\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-28T06:45:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"Flutter","slug":"flutter","link":"#flutter","children":[{"level":3,"title":"❓命令式 UI vs 声明式 UI","slug":"❓命令式-ui-vs-声明式-ui","link":"#❓命令式-ui-vs-声明式-ui","children":[]},{"level":3,"title":"❓Flutter 与 RN (React Native) 不同之处","slug":"❓flutter-与-rn-react-native-不同之处","link":"#❓flutter-与-rn-react-native-不同之处","children":[]},{"level":3,"title":"❓Flutter 跨平台是如何实现的","slug":"❓flutter-跨平台是如何实现的","link":"#❓flutter-跨平台是如何实现的","children":[]},{"level":3,"title":"❓为什么说 Flutter 是原生的","slug":"❓为什么说-flutter-是原生的","link":"#❓为什么说-flutter-是原生的","children":[]},{"level":3,"title":"❓Flutter 的优缺点","slug":"❓flutter-的优缺点","link":"#❓flutter-的优缺点","children":[]}]},{"level":2,"title":"Widget","slug":"widget","link":"#widget","children":[{"level":3,"title":"❓ListView 与 Sliver 区别","slug":"❓listview-与-sliver-区别","link":"#❓listview-与-sliver-区别","children":[]}]},{"level":2,"title":"lifecycle - “生命周期”","slug":"lifecycle-生命周期","link":"#lifecycle-生命周期","children":[{"level":3,"title":"❓Flutter 的生命周期","slug":"❓flutter-的生命周期","link":"#❓flutter-的生命周期","children":[]},{"level":3,"title":"❓Flutter 中 didChangeDependencies() 哪些情况下会触发","slug":"❓flutter-中-didchangedependencies-哪些情况下会触发","link":"#❓flutter-中-didchangedependencies-哪些情况下会触发","children":[]},{"level":3,"title":"❓Flutter 如何统一管理错误页面","slug":"❓flutter-如何统一管理错误页面","link":"#❓flutter-如何统一管理错误页面","children":[]}]},{"level":2,"title":"触摸事件","slug":"触摸事件","link":"#触摸事件","children":[{"level":3,"title":"❓hitTest 和 dispatchEvent","slug":"❓hittest-和-dispatchevent","link":"#❓hittest-和-dispatchevent","children":[]}]},{"level":2,"title":"滑动原理","slug":"滑动原理","link":"#滑动原理","children":[]}],"git":{"createdTime":1705412450000,"updatedTime":1711608342000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":5}]},"readingTime":{"minutes":10.11,"words":3034},"filePathRelative":"interview/flutter/0x02.flutter.md","localizedDate":"2024年1月16日","autoDesc":true}');export{e as data};
