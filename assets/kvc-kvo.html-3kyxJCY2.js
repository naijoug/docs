const e=JSON.parse('{"key":"v-840f8acc","path":"/frontend/client/ios/interview/kvc-kvo.html","title":"KVC & KVO","lang":"zh-CN","frontmatter":{"description":"KVC KVC(Key Value Coding) : 是 OC 的特性，可以直接通过键名访问属性和属性赋值。是通过 NSObject 的扩展(NSKeyValueCoding)来实现，所有继承 NSObject 的类型都可以使用 KVC 特性。 KVC 有哪些实际应用？ 动态取值或赋值; 可以读取或修改类的私有属性; KVO KVO(Key Valu...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/frontend/client/ios/interview/kvc-kvo.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"KVC & KVO"}],["meta",{"property":"og:description","content":"KVC KVC(Key Value Coding) : 是 OC 的特性，可以直接通过键名访问属性和属性赋值。是通过 NSObject 的扩展(NSKeyValueCoding)来实现，所有继承 NSObject 的类型都可以使用 KVC 特性。 KVC 有哪些实际应用？ 动态取值或赋值; 可以读取或修改类的私有属性; KVO KVO(Key Valu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-07T02:39:22.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2023-12-07T02:39:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"KVC & KVO\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-07T02:39:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"KVC","slug":"kvc","link":"#kvc","children":[]},{"level":2,"title":"KVO","slug":"kvo","link":"#kvo","children":[]}],"git":{"createdTime":1701916762000,"updatedTime":1701916762000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":1}]},"readingTime":{"minutes":0.5,"words":151},"filePathRelative":"frontend/client/ios/interview/kvc-kvo.md","localizedDate":"2023年12月7日","autoDesc":true}');export{e as data};
