const l=JSON.parse('{"key":"v-436f6033","path":"/interview/ios/objective-c.html","title":"Objective-C","lang":"zh-CN","frontmatter":{"title":"Objective-C","icon":"hashtag","index":true,"order":1,"description":"设计理念 OC 底层是使用 C/C++ 实现。定一个继承 NSObject 的类，这个类底层使用 C 语言中的 struct 结构体来实现的。 Java、python、OC 运行效率孰高？ ❓OC 的动态性 💡 首先理解两个“动态语言与静态语言” OC 的 runtime 文档中介绍中就详细写明了，runtime 的设计是为了将 OC 中的更多的处理...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/objective-c.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Objective-C"}],["meta",{"property":"og:description","content":"设计理念 OC 底层是使用 C/C++ 实现。定一个继承 NSObject 的类，这个类底层使用 C 语言中的 struct 结构体来实现的。 Java、python、OC 运行效率孰高？ ❓OC 的动态性 💡 首先理解两个“动态语言与静态语言” OC 的 runtime 文档中介绍中就详细写明了，runtime 的设计是为了将 OC 中的更多的处理..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-28T08:56:11.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2023-12-28T08:56:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Objective-C\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-28T08:56:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"设计理念","slug":"设计理念","link":"#设计理念","children":[{"level":3,"title":"Java、python、OC 运行效率孰高？","slug":"java、python、oc-运行效率孰高","link":"#java、python、oc-运行效率孰高","children":[]},{"level":3,"title":"❓OC 的动态性","slug":"❓oc-的动态性","link":"#❓oc-的动态性","children":[]},{"level":3,"title":"❓类结构体的组成，isa 指针指向了什么？","slug":"❓类结构体的组成-isa-指针指向了什么","link":"#❓类结构体的组成-isa-指针指向了什么","children":[]},{"level":3,"title":"❓OC 底层方法列表的数据结构是什么？","slug":"❓oc-底层方法列表的数据结构是什么","link":"#❓oc-底层方法列表的数据结构是什么","children":[]},{"level":3,"title":"❓id vs nil vs Nil vs NULL vs NSNull","slug":"❓id-vs-nil-vs-nil-vs-null-vs-nsnull","link":"#❓id-vs-nil-vs-nil-vs-null-vs-nsnull","children":[]},{"level":3,"title":"id vs NSObject","slug":"id-vs-nsobject","link":"#id-vs-nsobject","children":[]},{"level":3,"title":"id 为什么不能用点语法？","slug":"id-为什么不能用点语法","link":"#id-为什么不能用点语法","children":[]},{"level":3,"title":"❓Designated Initializer 如何添加？","slug":"❓designated-initializer-如何添加","link":"#❓designated-initializer-如何添加","children":[]},{"level":3,"title":"❓+load 与 +initialize 区别","slug":"❓-load-与-initialize-区别","link":"#❓-load-与-initialize-区别","children":[]},{"level":3,"title":"OC 中的内省和反射，底层实现原理？应用场景有哪些？","slug":"oc-中的内省和反射-底层实现原理-应用场景有哪些","link":"#oc-中的内省和反射-底层实现原理-应用场景有哪些","children":[]},{"level":3,"title":"OC 如何实现多重继承？","slug":"oc-如何实现多重继承","link":"#oc-如何实现多重继承","children":[]},{"level":3,"title":"静态方法是否能被重写?","slug":"静态方法是否能被重写","link":"#静态方法是否能被重写","children":[]}]},{"level":2,"title":"NSString","slug":"nsstring","link":"#nsstring","children":[{"level":3,"title":"NSString 如何计算字符的个数？","slug":"nsstring-如何计算字符的个数","link":"#nsstring-如何计算字符的个数","children":[]},{"level":3,"title":"❓OC 中的三种字符串？","slug":"❓oc-中的三种字符串","link":"#❓oc-中的三种字符串","children":[]}]},{"level":2,"title":"NSDictionary","slug":"nsdictionary","link":"#nsdictionary","children":[{"level":3,"title":"❓NSDictionary 大致实现原理","slug":"❓nsdictionary-大致实现原理","link":"#❓nsdictionary-大致实现原理","children":[]},{"level":3,"title":"❓NSCache vs NSDictionary","slug":"❓nscache-vs-nsdictionary","link":"#❓nscache-vs-nsdictionary","children":[]},{"level":3,"title":"NSCache 中缓存的对象，在什么时候被释放？","slug":"nscache-中缓存的对象-在什么时候被释放","link":"#nscache-中缓存的对象-在什么时候被释放","children":[]}]},{"level":2,"title":"拷贝","slug":"拷贝","link":"#拷贝","children":[{"level":3,"title":"❓自定义类如何实现拷贝功能？如何重写带 copy 关键字的 setter？","slug":"❓自定义类如何实现拷贝功能-如何重写带-copy-关键字的-setter","link":"#❓自定义类如何实现拷贝功能-如何重写带-copy-关键字的-setter","children":[]},{"level":3,"title":"❓copy 和 mutablecopy 的区别？","slug":"❓copy-和-mutablecopy-的区别","link":"#❓copy-和-mutablecopy-的区别","children":[]},{"level":3,"title":"❓@property (copy) NSMutableArray *array; 这个写法正确吗？","slug":"❓-property-copy-nsmutablearray-array-这个写法正确吗","link":"#❓-property-copy-nsmutablearray-array-这个写法正确吗","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":"@property 属性是什么？","slug":"property-属性是什么","link":"#property-属性是什么","children":[]},{"level":3,"title":"@property 的默认关键字？","slug":"property-的默认关键字","link":"#property-的默认关键字","children":[]},{"level":3,"title":"❓assign、strong、weak、copy 区别？","slug":"❓assign、strong、weak、copy-区别","link":"#❓assign、strong、weak、copy-区别","children":[]},{"level":3,"title":"NSString 为什么使用 copy，可以使用 strong 吗？","slug":"nsstring-为什么使用-copy-可以使用-strong-吗","link":"#nsstring-为什么使用-copy-可以使用-strong-吗","children":[]},{"level":3,"title":"@dynamic和 @synthesize 关键字的作用？","slug":"dynamic和-synthesize-关键字的作用","link":"#dynamic和-synthesize-关键字的作用","children":[]},{"level":3,"title":"@synthesize 合成实例变量的规则是什么？假如属性名为 foo，存在一个名为 _foo 的实例变量，那么还会自动合成新变量么？","slug":"synthesize-合成实例变量的规则是什么-假如属性名为-foo-存在一个名为-foo-的实例变量-那么还会自动合成新变量么","link":"#synthesize-合成实例变量的规则是什么-假如属性名为-foo-存在一个名为-foo-的实例变量-那么还会自动合成新变量么","children":[]},{"level":3,"title":"在有了自动合成属性实例变量之后，@synthesize 还有哪些使用场景？","slug":"在有了自动合成属性实例变量之后-synthesize-还有哪些使用场景","link":"#在有了自动合成属性实例变量之后-synthesize-还有哪些使用场景","children":[]},{"level":3,"title":"❓@property 的底层实现？","slug":"❓-property-的底层实现","link":"#❓-property-的底层实现","children":[]}]},{"level":2,"title":"Block","slug":"block","link":"#block","children":[{"level":3,"title":"❓block 与 代理的区别?","slug":"❓block-与-代理的区别","link":"#❓block-与-代理的区别","children":[]},{"level":3,"title":"❓block 与 函数指针","slug":"❓block-与-函数指针","link":"#❓block-与-函数指针","children":[]},{"level":3,"title":"block 时什么情况会发生引用循环？","slug":"block-时什么情况会发生引用循环","link":"#block-时什么情况会发生引用循环","children":[]},{"level":3,"title":"UIView 动画函数 block 版本使用，是否需要处理循环引用？","slug":"uiview-动画函数-block-版本使用-是否需要处理循环引用","link":"#uiview-动画函数-block-版本使用-是否需要处理循环引用","children":[]},{"level":3,"title":"block 内如何修改 block 外部变量？","slug":"block-内如何修改-block-外部变量","link":"#block-内如何修改-block-外部变量","children":[]},{"level":3,"title":"block 在捕获自变量，局部静态变量，全局变量，全局静态变量有什么区别?","slug":"block-在捕获自变量-局部静态变量-全局变量-全局静态变量有什么区别","link":"#block-在捕获自变量-局部静态变量-全局变量-全局静态变量有什么区别","children":[]},{"level":3,"title":"❓__block 的作用？","slug":"❓-block-的作用","link":"#❓-block-的作用","children":[]},{"level":3,"title":"__block vs __weak？","slug":"block-vs-weak","link":"#block-vs-weak","children":[]},{"level":3,"title":"__block 在 ARC 和非 ARC 有区别吗？","slug":"block-在-arc-和非-arc-有区别吗","link":"#block-在-arc-和非-arc-有区别吗","children":[]},{"level":3,"title":"block 捕获外部局部变量实际上发生了什么？__block 的作用？","slug":"block-捕获外部局部变量实际上发生了什么-block-的作用","link":"#block-捕获外部局部变量实际上发生了什么-block-的作用","children":[]},{"level":3,"title":"一个 int 变量用 __block 修饰与不修饰有区别吗？","slug":"一个-int-变量用-block-修饰与不修饰有区别吗","link":"#一个-int-变量用-block-修饰与不修饰有区别吗","children":[]},{"level":3,"title":"在 block 中修改 NSMutableArray，需不需要添加__block？","slug":"在-block-中修改-nsmutablearray-需不需要添加-block","link":"#在-block-中修改-nsmutablearray-需不需要添加-block","children":[]},{"level":3,"title":"❓为什么在 block 外部使用 __weak 修饰的同时需要在内部使用 __strong 修饰？","slug":"❓为什么在-block-外部使用-weak-修饰的同时需要在内部使用-strong-修饰","link":"#❓为什么在-block-外部使用-weak-修饰的同时需要在内部使用-strong-修饰","children":[]},{"level":3,"title":"❓block 底层实现？","slug":"❓block-底层实现","link":"#❓block-底层实现","children":[]},{"level":3,"title":"block 一般使用 copy 修饰，可以使用 strong 吗？发生 copy 的时机？","slug":"block-一般使用-copy-修饰-可以使用-strong-吗-发生-copy-的时机","link":"#block-一般使用-copy-修饰-可以使用-strong-吗-发生-copy-的时机","children":[]},{"level":3,"title":"block 如何进行内存管理的？","slug":"block-如何进行内存管理的","link":"#block-如何进行内存管理的","children":[]},{"level":3,"title":"block 访问对象类型的 auto 变量时，在 ARC 和 MRC 下有什么区别？","slug":"block-访问对象类型的-auto-变量时-在-arc-和-mrc-下有什么区别","link":"#block-访问对象类型的-auto-变量时-在-arc-和-mrc-下有什么区别","children":[]}]},{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[{"level":3,"title":"OC 中 Category vs Extension","slug":"oc-中-category-vs-extension","link":"#oc-中-category-vs-extension","children":[]},{"level":3,"title":"给 NSObject 添加 Extension 会怎么样？","slug":"给-nsobject-添加-extension-会怎么样","link":"#给-nsobject-添加-extension-会怎么样","children":[]},{"level":3,"title":"❓如果分类中添加与类相同的方法签名会发生什么？","slug":"❓如果分类中添加与类相同的方法签名会发生什么","link":"#❓如果分类中添加与类相同的方法签名会发生什么","children":[]},{"level":3,"title":"❓分类是如何实现的？它为什么会覆盖掉原来的方法？","slug":"❓分类是如何实现的-它为什么会覆盖掉原来的方法","link":"#❓分类是如何实现的-它为什么会覆盖掉原来的方法","children":[]},{"level":3,"title":"一个类，有个多个分类都实现了相同的方法，会调用哪个方法？","slug":"一个类-有个多个分类都实现了相同的方法-会调用哪个方法","link":"#一个类-有个多个分类都实现了相同的方法-会调用哪个方法","children":[]},{"level":3,"title":"分类中有与主类相同的方法，我想要调用主类中的方法，有什么办法吗？","slug":"分类中有与主类相同的方法-我想要调用主类中的方法-有什么办法吗","link":"#分类中有与主类相同的方法-我想要调用主类中的方法-有什么办法吗","children":[]},{"level":3,"title":"两个分类的 load 方法的加载顺序？","slug":"两个分类的-load-方法的加载顺序","link":"#两个分类的-load-方法的加载顺序","children":[]},{"level":3,"title":"两个分类的同名方法的加载顺序？","slug":"两个分类的同名方法的加载顺序","link":"#两个分类的同名方法的加载顺序","children":[]},{"level":3,"title":"❓分类的结构体里面有哪些成员？","slug":"❓分类的结构体里面有哪些成员","link":"#❓分类的结构体里面有哪些成员","children":[]},{"level":3,"title":"分类中为什么不能添加 @property？","slug":"分类中为什么不能添加-property","link":"#分类中为什么不能添加-property","children":[]},{"level":3,"title":"❓分类中如何添加属性？","slug":"❓分类中如何添加属性","link":"#❓分类中如何添加属性","children":[]},{"level":3,"title":"关联对象的如何进行内存管理的？关联对象如何实现 weak 属性？","slug":"关联对象的如何进行内存管理的-关联对象如何实现-weak-属性","link":"#关联对象的如何进行内存管理的-关联对象如何实现-weak-属性","children":[]},{"level":3,"title":"关联对象需要在主对象 dealloc 的时候手动释放吗？","slug":"关联对象需要在主对象-dealloc-的时候手动释放吗","link":"#关联对象需要在主对象-dealloc-的时候手动释放吗","children":[]},{"level":3,"title":"关联对象有什么应用，系统如何管理关联对象？其被释放的时候需要手动将所有的关联对象的指针置空吗？","slug":"关联对象有什么应用-系统如何管理关联对象-其被释放的时候需要手动将所有的关联对象的指针置空吗","link":"#关联对象有什么应用-系统如何管理关联对象-其被释放的时候需要手动将所有的关联对象的指针置空吗","children":[]},{"level":3,"title":"关联对象的底层实现？","slug":"关联对象的底层实现","link":"#关联对象的底层实现","children":[]}]},{"level":2,"title":"消息发送","slug":"消息发送","link":"#消息发送","children":[{"level":3,"title":"OC 中的类方法和实例方法有什么本质区别和联系？","slug":"oc-中的类方法和实例方法有什么本质区别和联系","link":"#oc-中的类方法和实例方法有什么本质区别和联系","children":[]},{"level":3,"title":"在类方法中是否可以使用 self？","slug":"在类方法中是否可以使用-self","link":"#在类方法中是否可以使用-self","children":[]},{"level":3,"title":"sel、_cmd 是什么？","slug":"sel、-cmd-是什么","link":"#sel、-cmd-是什么","children":[]},{"level":3,"title":"❓OC 中对象消息发送的大致流程？","slug":"❓oc-中对象消息发送的大致流程","link":"#❓oc-中对象消息发送的大致流程","children":[]},{"level":3,"title":"❓向一个 nil 对象发送消息将会发生什么？","slug":"❓向一个-nil-对象发送消息将会发生什么","link":"#❓向一个-nil-对象发送消息将会发生什么","children":[]},{"level":3,"title":"向一个对象发送消息 [obj foo] 和 objc_msgSend() 函数之间有什么关系？","slug":"向一个对象发送消息-obj-foo-和-objc-msgsend-函数之间有什么关系","link":"#向一个对象发送消息-obj-foo-和-objc-msgsend-函数之间有什么关系","children":[]},{"level":3,"title":"❓unrecognized selector 异常是怎么发生的？如何避免？","slug":"❓unrecognized-selector-异常是怎么发生的-如何避免","link":"#❓unrecognized-selector-异常是怎么发生的-如何避免","children":[]},{"level":3,"title":"_objc_msgForward 函数是做什么的，直接调用它将会发生什么？","slug":"objc-msgforward-函数是做什么的-直接调用它将会发生什么","link":"#objc-msgforward-函数是做什么的-直接调用它将会发生什么","children":[]},{"level":3,"title":"❓OC 中是如何通过 selector 找到对应的 IMP 地址","slug":"❓oc-中是如何通过-selector-找到对应的-imp-地址","link":"#❓oc-中是如何通过-selector-找到对应的-imp-地址","children":[]},{"level":3,"title":"消息转发机制和其他语言的消息机制优劣对比？","slug":"消息转发机制和其他语言的消息机制优劣对比","link":"#消息转发机制和其他语言的消息机制优劣对比","children":[]},{"level":3,"title":"在方法调用的时候，方法查询-> 动态解析-> 消息转发 之前做了什么？","slug":"在方法调用的时候-方法查询-动态解析-消息转发-之前做了什么","link":"#在方法调用的时候-方法查询-动态解析-消息转发-之前做了什么","children":[]}]}],"git":{"createdTime":1702384983000,"updatedTime":1703753771000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":8}]},"readingTime":{"minutes":14.43,"words":4328},"filePathRelative":"interview/ios/objective-c.md","localizedDate":"2023年12月12日","autoDesc":true}');export{l as data};
