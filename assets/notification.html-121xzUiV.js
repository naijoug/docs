import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as e,a as s,f as t}from"./app-OYGQQQiT.js";const o={},i=t(`<h3 id="nsnotification-实现原理" tabindex="-1"><a class="header-anchor" href="#nsnotification-实现原理" aria-hidden="true">#</a> <code>NSNotification</code> 实现原理？</h3><h3 id="通知的发送时同步还是异步" tabindex="-1"><a class="header-anchor" href="#通知的发送时同步还是异步" aria-hidden="true">#</a> 通知的发送时同步还是异步？</h3><h3 id="通知的发送和接受是在同一个线程里吗-如何异步发送消息" tabindex="-1"><a class="header-anchor" href="#通知的发送和接受是在同一个线程里吗-如何异步发送消息" aria-hidden="true">#</a> 通知的发送和接受是在同一个线程里吗？如何异步发送消息？</h3><h3 id="nsnotificationqueue-是异步还是同步发送-在哪个线程响应" tabindex="-1"><a class="header-anchor" href="#nsnotificationqueue-是异步还是同步发送-在哪个线程响应" aria-hidden="true">#</a> <code>NSNotificationQueue</code> 是异步还是同步发送？在哪个线程响应？</h3><h3 id="nsnotificationqueue-和-runloop的关系" tabindex="-1"><a class="header-anchor" href="#nsnotificationqueue-和-runloop的关系" aria-hidden="true">#</a> <code>NSNotificationQueue</code> 和 <code>runloop</code>的关系？</h3><h3 id="如何保证通知接收的线程在主线程" tabindex="-1"><a class="header-anchor" href="#如何保证通知接收的线程在主线程" aria-hidden="true">#</a> 如何保证通知接收的线程在主线程？</h3><h3 id="页面销毁时不移除通知会崩溃吗" tabindex="-1"><a class="header-anchor" href="#页面销毁时不移除通知会崩溃吗" aria-hidden="true">#</a> 页面销毁时不移除通知会崩溃吗？</h3><h3 id="多次添加同一个通知会是什么结果-多次移除通知呢" tabindex="-1"><a class="header-anchor" href="#多次添加同一个通知会是什么结果-多次移除通知呢" aria-hidden="true">#</a> 多次添加同一个通知会是什么结果？多次移除通知呢？</h3><h3 id="下面代码可以接受通知吗" tabindex="-1"><a class="header-anchor" href="#下面代码可以接受通知吗" aria-hidden="true">#</a> 下面代码可以接受通知吗？</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>NSNotificationCenter <span class="token operator">*</span>center <span class="token operator">=</span> <span class="token punctuation">[</span>NSNotificationCenter defaultCenter<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 发送通知</span>
<span class="token punctuation">[</span>center addObserver<span class="token punctuation">:</span><span class="token keyword">self</span> selector<span class="token punctuation">:</span><span class="token keyword">@selector</span><span class="token punctuation">(</span>handleNotification<span class="token punctuation">:</span><span class="token punctuation">)</span> name<span class="token punctuation">:</span><span class="token string">@&quot;One&quot;</span> object<span class="token punctuation">:</span><span class="token operator">@</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 接收通知</span>
<span class="token punctuation">[</span>center postNotificationName<span class="token punctuation">:</span><span class="token string">@&quot;One&quot;</span> object<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function c(r,p){return a(),e("div",null,[s(" more "),i])}const l=n(o,[["render",c],["__file","notification.html.vue"]]);export{l as default};
