import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as t,c,b as n,e as s,d as p,f as l}from"./app-Q3BWfQXY.js";const i={},r=n("h2",{id:"objc-类型定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#objc-类型定义","aria-hidden":"true"},"#"),s(),n("code",null,"Objc"),s(" 类型定义")],-1),d={href:"https://github.com/apple-oss-distributions/objc4/blob/objc4-876/runtime/runtime.h#L41",target:"_blank",rel:"noopener noreferrer"},u=l(`<div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// file: runtime.h | line:41</span>
<span class="token comment">/// An opaque type that represents a method in a class definition.</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_method <span class="token operator">*</span>Method<span class="token punctuation">;</span> <span class="token comment">// 一个非透明类型，表示一个类定义中的方法</span>

<span class="token comment">/// An opaque type that represents an instance variable.</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_ivar <span class="token operator">*</span>Ivar<span class="token punctuation">;</span> <span class="token comment">// 表示一个实例变量</span>

<span class="token comment">/// An opaque type that represents a category.</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_category <span class="token operator">*</span>Category<span class="token punctuation">;</span> <span class="token comment">// 表示一个分类</span>

<span class="token comment">/// An opaque type that represents an Objective-C declared property.</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_property <span class="token operator">*</span>objc_property_t<span class="token punctuation">;</span> <span class="token comment">// 表示 OC 中定义属性</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">__OBJC__ </span></span>
<span class="token keyword">@class</span> Protocol<span class="token punctuation">;</span> <span class="token comment">// OC 环境下是一个类的提前引用声明</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span> </span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_object Protocol<span class="token punctuation">;</span> <span class="token comment">// 非 OC 环境下是 objc_object 的别名</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>OC</code> 中 <code>Method</code>、<code>SEL</code>、<code>IMP</code> 是什么关系？</p></blockquote><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// file: runtime.h</span>
<span class="token comment">// line:43 Method 定义</span>
<span class="token comment">/// An opaque type that represents a method in a class definition.</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_method <span class="token operator">*</span>Method<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token comment">// file: objc.h</span>
<span class="token comment">// line:49 </span>
<span class="token comment">/// An opaque type that represents a method selector.</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span> objc_selector <span class="token operator">*</span>SEL<span class="token punctuation">;</span> <span class="token comment">// 一个不透明类型，表示一个方法选择器</span>

<span class="token comment">/// A pointer to the function of a method implementation. </span>
<span class="token comment">// 一个指向方法实现的指针</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token operator">!</span>OBJC_OLD_DISPATCH_PROTOTYPES</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>IMP<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token comment">/* id, SEL, ... */</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
<span class="token keyword">typedef</span> id <span class="token function">_Nullable</span> <span class="token punctuation">(</span><span class="token operator">*</span>IMP<span class="token punctuation">)</span><span class="token punctuation">(</span>id _Nonnull<span class="token punctuation">,</span> SEL _Nonnull<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SEL</code> 是一个指向方法选择器的指针，表示方法名 <code>IMP</code> 方法实现的指针，表示方法实现。</p><blockquote><p>方法的调用</p></blockquote><blockquote><p><code>OC</code> 对象继承原型链</p></blockquote>`,7);function k(m,v){const e=o("ExternalLinkIcon");return t(),c("div",null,[r,n("blockquote",null,[n("p",null,[n("a",d,[s("Objc Types Defined"),p(e)])])]),u])}const h=a(i,[["render",k],["__file","runtime.html.vue"]]);export{h as default};
