import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as h,c as s,a as u,b as e,d as r,w as a,e as t,f as i}from"./app-jKljptsy.js";const c={},_=e("h2",{id:"catalog",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#catalog","aria-hidden":"true"},"#"),t(" catalog")],-1),p=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),t(" reference")],-1),g={href:"https://github.com/TheAlgorithms",target:"_blank",rel:"noopener noreferrer"},b={href:"https://the-algorithms.com",target:"_blank",rel:"noopener noreferrer"},f=e("blockquote",null,[e("p",null,"Open Source resource for learning Data Structures & Algorithms and their implementation in any Programming Language")],-1),m={href:"https://github.com/krahets/hello-algo",target:"_blank",rel:"noopener noreferrer"},k=e("blockquote",null,[e("p",null,"《Hello 算法》：动画图解、一键运行的数据结构与算法教程，支持 Java, C++, Python, Go, JS, TS, C#, Swift, Rust, Dart, Zig 等语言。")],-1),L={href:"https://github.com/trekhleb/javascript-algorithms",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/raywenderlich/swift-algorithm-club",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/KeithMorning/swift-algorithm-club-cn",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/jimmysuncpt/Algorithms",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/wangzheng0822/algo",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra",target:"_blank",rel:"noopener noreferrer"},w=e("blockquote",null,[e("p",null,`Graphic notes on Gilbert Strang's "Linear Algebra for Everyone"`)],-1),q=e("h2",{id:"visualizer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#visualizer","aria-hidden":"true"},"#"),t(" Visualizer")],-1),x={href:"https://github.com/algorithm-visualizer/algorithm-visualizer",target:"_blank",rel:"noopener noreferrer"},B={href:"http://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},T={href:"http://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"},z=e("h2",{id:"leetcode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#leetcode","aria-hidden":"true"},"#"),t(" LeetCode")],-1),D={href:"https://www.zhihu.com/question/388971497",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/afatcoder/LeetcodeTop",target:"_blank",rel:"noopener noreferrer"},G=e("blockquote",null,[e("p",null,"汇总各大互联网公司容易考察的高频leetcode题🔥")],-1),P={href:"https://github.com/doocs/leetcode",target:"_blank",rel:"noopener noreferrer"},V=e("blockquote",null,[e("p",null,"🔥LeetCode solutions in any programming language | 多种编程语言实现 LeetCode、《剑指 Offer（第 2 版）》、《程序员面试金典（第 6 版）》题解")],-1),R={href:"https://github.com/labuladong/fucking-algorithm",target:"_blank",rel:"noopener noreferrer"},J=e("blockquote",null,[e("p",null,"刷算法全靠套路，认准 labuladong 就够了！English version supported! Crack LeetCode, not only how, but also why.")],-1),N={href:"https://github.com/greyireland/algorithm-pattern",target:"_blank",rel:"noopener noreferrer"},j=e("blockquote",null,[e("p",null,"算法模板，最科学的刷题方式，最快速的刷题路径，你值得拥有~")],-1),F={href:"https://github.com/youngyangyang04/leetcode-master",target:"_blank",rel:"noopener noreferrer"},H=e("blockquote",null,[e("p",null,"《代码随想录》LeetCode 刷题攻略：200道经典题目刷题顺序，共60w字的详细图解，视频难点剖析，50余张思维导图，支持C++，Java，Python，Go，JavaScript等多语言版本，从此算法学习不再迷茫！🔥🔥 来看看，你会发现相见恨晚！🚀")],-1),I={href:"https://github.com/MisterBooo/LeetCodeAnimation",target:"_blank",rel:"noopener noreferrer"},M=e("blockquote",null,[e("p",null,"Demonstrate all the questions on LeetCode in the form of animation.（用动画的形式呈现解LeetCode题目的思路）")],-1),O={href:"https://github.com/azl397985856/leetcode",target:"_blank",rel:"noopener noreferrer"},Q=e("blockquote",null,[e("p",null,"LeetCode Solutions: A Record of My Problem Solving Journey.( leetcode题解，记录自己的leetcode解题之路。)")],-1),U={href:"https://github.com/fuxuemingzhu/Leetcode-Solution-All",target:"_blank",rel:"noopener noreferrer"},K=e("blockquote",null,[e("p",null,"1000篇通俗易懂且高质量的 LeetCode 解析，动画题解，套路分析，模板分享")],-1),Z={href:"https://github.com/halfrost/LeetCode-Go",target:"_blank",rel:"noopener noreferrer"},W=e("blockquote",null,[e("p",null,"✅ Solutions to LeetCode by Go, 100% test coverage, runtime beats 100% / LeetCode 题解")],-1),X=i('<h2 id="concept" tabindex="-1"><a class="header-anchor" href="#concept" aria-hidden="true">#</a> Concept</h2><ul><li><p>Data Structure</p><table><thead><tr><th>数据结构</th><th>-</th></tr></thead><tbody><tr><td>Array</td><td>数组</td></tr><tr><td>Stack / Queue</td><td>栈 / 队列</td></tr><tr><td>PriorityQueue (heap)</td><td>优先队列 (堆)</td></tr><tr><td>LinkedList (single / double)</td><td>链表 (单 / 双)</td></tr><tr><td>Tree / Binary Tree</td><td>树 / 二叉树</td></tr><tr><td>Binary Search Tree (BST)</td><td>二分搜索树</td></tr><tr><td>HashTable</td><td>哈希表</td></tr><tr><td>Disjoint Set</td><td>不相交集合</td></tr><tr><td>Trie</td><td>前缀树 (字典树)</td></tr><tr><td>BloomFilter</td><td>布隆过滤器</td></tr><tr><td>LRU Cache</td><td>LRU 缓存</td></tr></tbody></table></li><li><p>Algorithm</p><table><thead><tr><th>算法</th><th>-</th></tr></thead><tbody><tr><td>In-order / Pre-order / Post-order traversal</td><td>中序 / 前序 / 后序 遍历</td></tr><tr><td>Greedy</td><td>贪婪算法</td></tr><tr><td>Recursion / Backtrace</td><td>递归 / 回溯</td></tr><tr><td>Breadth-first search (BFS)</td><td>广度优先搜索</td></tr><tr><td>Depth-first search (DFS)</td><td>深度优先搜索</td></tr><tr><td>Divide and Conquer</td><td>分治算法</td></tr><tr><td>Dynamic Programming (DP)</td><td>动态规划</td></tr><tr><td>Binary Search</td><td>二分搜索</td></tr><tr><td>Graph</td><td>图</td></tr></tbody></table></li></ul><h2 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> Sort</h2>',3),Y={href:"https://zh.wikipedia.org/wiki/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},$=i("<ul><li>外部排序 : 内存 &amp; 外存结合</li><li>内部排序 : 内存 <ul><li>插入排序 <ul><li>直接插入排序</li><li>希尔排序</li></ul></li><li>选择排序 <ul><li>简单选择排序</li><li>堆排序</li></ul></li><li>交换排序 <ul><li>冒泡排序</li><li>快速排序</li></ul></li><li>归并排序</li><li>桶排序</li><li>基数排序</li><li>计数排序</li></ul></li></ul>",1);function ee(te,re){const l=n("RouterLink"),o=n("ExternalLinkIcon");return h(),s("div",null,[u(" more "),_,e("ul",null,[e("li",null,[r(l,{to:"/programmer/core/algorithm/"},{default:a(()=>[t("数据结构")]),_:1})]),e("li",null,[r(l,{to:"/programmer/core/data-structure/"},{default:a(()=>[t("算法")]),_:1})])]),p,e("ul",null,[e("li",null,[e("a",g,[t("The Algorithms"),r(o)]),t(": "),e("a",b,[t("website"),r(o)]),f]),e("li",null,[e("a",m,[t("Hello 算法"),r(o)]),k]),e("li",null,[e("a",L,[t("JavaScript Algorithms and Data Structures"),r(o)])]),e("li",null,[e("a",y,[t("Swift Algorithm Club"),r(o)])]),e("li",null,[e("a",S,[t("Swift 算法俱乐部"),r(o)])]),e("li",null,[e("a",C,[t("算法 4 课后练习解答"),r(o)])]),e("li",null,[e("a",A,[t("数据结构和算法必知必会的50个代码实现"),r(o)])]),e("li",null,[e("a",v,[t("The-Art-of-Linear-Algebra"),r(o)]),t(" : 线性代数的艺术 "),w])]),q,e("ul",null,[e("li",null,[e("a",x,[t("algorithm-visualizer"),r(o)])]),e("li",null,[e("a",B,[t("VisuAlgo"),r(o)])]),e("li",null,[e("a",T,[t("Data Structure Visualizations"),r(o)])])]),z,e("ul",null,[e("li",null,[e("p",null,[e("a",D,[t("知乎 - 你们初刷leetcode时会怀疑自己的智商吗？"),r(o)])])]),e("li",null,[e("p",null,[e("a",E,[t("LeetcodeTop"),r(o)])]),G]),e("li",null,[e("p",null,[e("a",P,[t("leetcode"),r(o)])]),V]),e("li",null,[e("p",null,[e("a",R,[t("labuladong 的算法小抄"),r(o)])]),J]),e("li",null,[e("p",null,[e("a",N,[t("算法模板"),r(o)])]),j]),e("li",null,[e("p",null,[e("a",F,[t("代码随想录"),r(o)])]),H]),e("li",null,[e("p",null,[e("a",I,[t("LeetCode Animation"),r(o)])]),M]),e("li",null,[e("p",null,[e("a",O,[t("算法通关之路"),r(o)])]),Q]),e("li",null,[e("p",null,[e("a",U,[t("Leetcode-Solution-All"),r(o)])]),K]),e("li",null,[e("p",null,[e("a",Z,[t("LeetCode in Go"),r(o)])]),W])]),X,e("blockquote",null,[e("p",null,[e("a",Y,[t("排序算法"),r(o)])])]),$])}const ne=d(c,[["render",ee],["__file","index.html.vue"]]);export{ne as default};
