import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o,c as t,a,f as c}from"./app-jZxpMbcW.js";const l={},r=c('<h2 id="冒泡排序和插入排序的时间复杂度是多少-为什么实际开发中会更多选择插入排序" tabindex="-1"><a class="header-anchor" href="#冒泡排序和插入排序的时间复杂度是多少-为什么实际开发中会更多选择插入排序" aria-hidden="true">#</a> 冒泡排序和插入排序的时间复杂度是多少？=&gt; 为什么实际开发中会更多选择插入排序？</h2><details class="hint-container details"><summary>💡</summary></details><p>两者的时间复杂度相同 O(n²)</p><p>插入排序是稳定的排序，对于相同的元素排序前后的相对位置不会发生变化。</p><blockquote><p>大数相加</p></blockquote><blockquote><p>找到两个排序数组的中位数</p></blockquote><blockquote><p><code>pow(double, double)</code> 函数的自实现</p></blockquote><blockquote><p>树的遍历</p></blockquote><ul><li><p>前、中、后序遍历</p></li><li><p>层序遍历</p></li></ul><h2 id="强连通量算法了解嘛" tabindex="-1"><a class="header-anchor" href="#强连通量算法了解嘛" aria-hidden="true">#</a> 强连通量算法了解嘛？</h2>',10);function i(d,s){return o(),t("div",null,[a(" more "),r])}const u=e(l,[["render",i],["__file","algorithm.html.vue"]]);export{u as default};
