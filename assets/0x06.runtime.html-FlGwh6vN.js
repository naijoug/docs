const e=JSON.parse('{"key":"v-3c1e65f8","path":"/interview/ios/0x06.runtime.html","title":"Runtime","lang":"zh-CN","frontmatter":{"title":"Runtime","icon":"hashtag","index":true,"description":"Runtime: 运行时 reference 2020-01-23 Aspects深度解析-iOS面向切面编程 (https://juejin.cn/post/6844904052778598408); 2019-08-05 Runtime原理探究 (https://www.jianshu.com/p/30de582dbeb7); (✅) 2019-0...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/ios/0x06.runtime.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Runtime"}],["meta",{"property":"og:description","content":"Runtime: 运行时 reference 2020-01-23 Aspects深度解析-iOS面向切面编程 (https://juejin.cn/post/6844904052778598408); 2019-08-05 Runtime原理探究 (https://www.jianshu.com/p/30de582dbeb7); (✅) 2019-0..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T01:02:54.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-05T01:02:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Runtime\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T01:02:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"reference","slug":"reference","link":"#reference","children":[]},{"level":2,"title":"对象模型","slug":"对象模型","link":"#对象模型","children":[{"level":3,"title":"❓OC 的对象模型","slug":"❓oc-的对象模型","link":"#❓oc-的对象模型","children":[]},{"level":3,"title":"isa","slug":"isa","link":"#isa","children":[]},{"level":3,"title":"super","slug":"super","link":"#super","children":[]},{"level":3,"title":"metaclass","slug":"metaclass","link":"#metaclass","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":"❓为什么对象方法没有保存的对象结构体里，而是保存在类对象的结构体里","slug":"❓为什么对象方法没有保存的对象结构体里-而是保存在类对象的结构体里","link":"#❓为什么对象方法没有保存的对象结构体里-而是保存在类对象的结构体里","children":[]},{"level":3,"title":"❓class_copyIvarList vs class_copyPropertyList","slug":"❓class-copyivarlist-vs-class-copypropertylist","link":"#❓class-copyivarlist-vs-class-copypropertylist","children":[]},{"level":3,"title":"❓class_ro_t vs class_rw_t","slug":"❓class-ro-t-vs-class-rw-t","link":"#❓class-ro-t-vs-class-rw-t","children":[]},{"level":3,"title":"❓能否向编译后得到的类中增加实例变量","slug":"❓能否向编译后得到的类中增加实例变量","link":"#❓能否向编译后得到的类中增加实例变量","children":[]},{"level":3,"title":"❓能否向运行时创建的类中添加实例变量","slug":"❓能否向运行时创建的类中添加实例变量","link":"#❓能否向运行时创建的类中添加实例变量","children":[]}]},{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[{"level":3,"title":"❓分类的结构体里面有哪些成员","slug":"❓分类的结构体里面有哪些成员","link":"#❓分类的结构体里面有哪些成员","children":[]},{"level":3,"title":"❓分类中如何添加属性","slug":"❓分类中如何添加属性","link":"#❓分类中如何添加属性","children":[]}]},{"level":2,"title":"关联对象","slug":"关联对象","link":"#关联对象","children":[{"level":3,"title":"❓关联对象的底层实现","slug":"❓关联对象的底层实现","link":"#❓关联对象的底层实现","children":[]},{"level":3,"title":"❓关联对象的实际应用","slug":"❓关联对象的实际应用","link":"#❓关联对象的实际应用","children":[]},{"level":3,"title":"内存管理","slug":"内存管理","link":"#内存管理","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"❓对象方法 与 类方法存放在哪","slug":"❓对象方法-与-类方法存放在哪","link":"#❓对象方法-与-类方法存放在哪","children":[]},{"level":3,"title":"❓OC 底层方法列表的数据结构是什么","slug":"❓oc-底层方法列表的数据结构是什么","link":"#❓oc-底层方法列表的数据结构是什么","children":[]},{"level":3,"title":"❓method_t 里包含什么","slug":"❓method-t-里包含什么","link":"#❓method-t-里包含什么","children":[]}]},{"level":2,"title":"Method Swizzling","slug":"method-swizzling","link":"#method-swizzling","children":[{"level":3,"title":"❓Method Swizzling 的底层原理","slug":"❓method-swizzling-的底层原理","link":"#❓method-swizzling-的底层原理","children":[]},{"level":3,"title":"❓Method Swizzling 的优缺点","slug":"❓method-swizzling-的优缺点","link":"#❓method-swizzling-的优缺点","children":[]},{"level":3,"title":"❓如何安全的进行方法替换","slug":"❓如何安全的进行方法替换","link":"#❓如何安全的进行方法替换","children":[]},{"level":3,"title":"实际应用","slug":"实际应用","link":"#实际应用","children":[]}]},{"level":2,"title":"内存管理","slug":"内存管理-1","link":"#内存管理-1","children":[{"level":3,"title":"❓weak 的实现原理，SideTable 的结构是什么样","slug":"❓weak-的实现原理-sidetable-的结构是什么样","link":"#❓weak-的实现原理-sidetable-的结构是什么样","children":[]},{"level":3,"title":"❓如果让你实现属性的 weak，如何实现","slug":"❓如果让你实现属性的-weak-如何实现","link":"#❓如果让你实现属性的-weak-如何实现","children":[]},{"level":3,"title":"❓runtime 中的 SideTables 了解吗","slug":"❓runtime-中的-sidetables-了解吗","link":"#❓runtime-中的-sidetables-了解吗","children":[]}]},{"level":2,"title":"其它知识点","slug":"其它知识点","link":"#其它知识点","children":[{"level":3,"title":"❓runtime 中的 fastpath、slowpath 是什么","slug":"❓runtime-中的-fastpath、slowpath-是什么","link":"#❓runtime-中的-fastpath、slowpath-是什么","children":[]},{"level":3,"title":"❓OC 运行时在工程中的有过实践运用吗","slug":"❓oc-运行时在工程中的有过实践运用吗","link":"#❓oc-运行时在工程中的有过实践运用吗","children":[]}]}],"git":{"createdTime":1704610269000,"updatedTime":1709600574000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":6}]},"readingTime":{"minutes":32.27,"words":9680},"filePathRelative":"interview/ios/0x06.runtime.md","localizedDate":"2024年1月7日","autoDesc":true}');export{e as data};
