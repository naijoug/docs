import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as e,a as s,f as i}from"./app-R4SeOK86.js";const l={},t=i(`<table><thead><tr><th>组件</th><th>配置组件</th></tr></thead><tbody><tr><td><code>Text</code></td><td><code>DefaultTextStyle</code></td></tr><tr><td><code>Icon</code></td><td><code>IconTheme</code></td></tr><tr><td><code>Scrollable</code></td><td><code>ScrollConfiguration</code></td></tr></tbody></table><h2 id="滚动" tabindex="-1"><a class="header-anchor" href="#滚动" aria-hidden="true">#</a> 滚动</h2><h3 id="scrollable-可滚动" tabindex="-1"><a class="header-anchor" href="#scrollable-可滚动" aria-hidden="true">#</a> Scrollable - “可滚动”</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="scrollview-滚动视图" tabindex="-1"><a class="header-anchor" href="#scrollview-滚动视图" aria-hidden="true">#</a> ScrollView - “滚动视图”</h3><blockquote><p>抽象类</p></blockquote><h3 id="customscrollview-自定义滚动视图" tabindex="-1"><a class="header-anchor" href="#customscrollview-自定义滚动视图" aria-hidden="true">#</a> CustomScrollView - “自定义滚动视图”</h3><blockquote><p><code>ScrollView</code> 的实现类</p></blockquote><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="singlechildscrollview-单个子组件滚动视图" tabindex="-1"><a class="header-anchor" href="#singlechildscrollview-单个子组件滚动视图" aria-hidden="true">#</a> SingleChildScrollView - “单个子组件滚动视图”</h3><blockquote><p>用于控制单个子组件滚动，常用于大图展示、适配小屏幕设备</p></blockquote><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="scrollconfiguration-滚动配置" tabindex="-1"><a class="header-anchor" href="#scrollconfiguration-滚动配置" aria-hidden="true">#</a> ScrollConfiguration - “滚动配置”</h3><blockquote><p>统一配置可滚动子组件的样式</p></blockquote><ul><li>behavior : 滚动行为</li></ul><blockquote><p>ScrollBehavior : 滚动行为，继承该类实现自定义行为</p></blockquote><ul><li>buildViewportChrome : 用于给列表组件添加属性</li><li>getScrollPhysics : 滚动物理效果</li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="notificationlistener-滑动监听" tabindex="-1"><a class="header-anchor" href="#notificationlistener-滑动监听" aria-hidden="true">#</a> NotificationListener - “滑动监听”</h3><blockquote><p>监听子组件滚动事件</p></blockquote><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token class-name">NotificationListener</span><span class="token punctuation">(</span>
  onNotification<span class="token punctuation">:</span> <span class="token punctuation">(</span>notification<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 控制事件是否继续往上传递</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  child<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token comment">// 滚动组件</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="draggablescrollablesheet-可拖拽可滑动底部弹窗" tabindex="-1"><a class="header-anchor" href="#draggablescrollablesheet-可拖拽可滑动底部弹窗" aria-hidden="true">#</a> DraggableScrollableSheet - “可拖拽可滑动底部弹窗”</h3><blockquote><p>默认高度 : ，可拖动范围 : 25% ~ 100%</p></blockquote><ul><li>initialChildSize : 初始子组件高度 (默认 : 0.5, 父组件 50%)</li><li>minChildSize : 最小高度 (默认 : 0.25)</li><li>maxChildSize : 最大高度 (默认 : 1.0)</li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表</h2><h3 id="boxscrollview-盒子滚动视图" tabindex="-1"><a class="header-anchor" href="#boxscrollview-盒子滚动视图" aria-hidden="true">#</a> BoxScrollView - “盒子滚动视图”</h3><blockquote><p>继承于 <code>ScrollView</code> 的抽象类</p></blockquote><h3 id="listview-列表视图" tabindex="-1"><a class="header-anchor" href="#listview-列表视图" aria-hidden="true">#</a> ListView - “列表视图”</h3><blockquote><p><code>BoxScrollView</code> 的实现类，用于线性列表 本质 : 只有一个 <code>SliverList</code> 的 <code>CustomScrollView</code></p></blockquote><blockquote><p>ScrollController : 滚动控制器</p></blockquote><ul><li><p>padding : 内间距</p></li><li><p>offset : 获取当前位置</p></li><li><p>scrollDirection : 滚动方向</p></li><li><p>reverse : 是否反转模式</p></li><li><p>shrinkWrap :</p></li><li><p>physics : 物理属性</p></li><li><p>cacheExtent : 缓冲期高度</p></li><li><p>jumpTo : 跳转到指定位置</p></li><li><p>animateTo : 动画跳转</p></li><li><p>addListener :</p></li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 创建控制器</span>
<span class="token class-name">ScrollController</span> _controller <span class="token operator">=</span> <span class="token class-name">ScrollController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 构建长列表</span>
<span class="token class-name">ListView</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>
  controller<span class="token punctuation">:</span> _controller<span class="token punctuation">;</span> <span class="token comment">// 滚动控制器</span>
  itemExtent<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>  <span class="token comment">// 条目高度 (设置固定高度，可以优化列表滚动性能)</span>
  itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 条目构建</span>
    <span class="token keyword">return</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;item: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">index</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  itemCount<span class="token punctuation">:</span> count<span class="token punctuation">,</span> <span class="token comment">// 条目个数</span>
  separatorBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 分割线构建</span>
    <span class="token keyword">return</span> <span class="token keyword">const</span> <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gridview-网格列表" tabindex="-1"><a class="header-anchor" href="#gridview-网格列表" aria-hidden="true">#</a> GridView - “网格列表”</h2><blockquote><p><code>BoxScrollView</code> 的实现类，用于 2D 网格布局列表</p></blockquote><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// </span>
<span class="token class-name">GridView</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>
  crossAxisCount<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// 交叉轴条目数量</span>
  
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// </span>
<span class="token class-name">GridView</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// </span>
<span class="token class-name">GridView</span><span class="token punctuation">.</span><span class="token function">extent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 自定义</span>
<span class="token class-name">GridView</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="listwheelscrollview-滚轮列表" tabindex="-1"><a class="header-anchor" href="#listwheelscrollview-滚轮列表" aria-hidden="true">#</a> ListWheelScrollView - “滚轮列表”</h3><blockquote><p>三维滚轮效果的列表</p></blockquote><blockquote><p>FixedExtentScrollController : 固定范围的控制器</p></blockquote><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="reorderablelistview-可排序列表" tabindex="-1"><a class="header-anchor" href="#reorderablelistview-可排序列表" aria-hidden="true">#</a> ReorderableListView - “可排序列表”</h3><blockquote><p>可拖动排序的的列表</p></blockquote><ul><li>onReorder : 拖动完成回调</li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="dismissible-侧滑删除" tabindex="-1"><a class="header-anchor" href="#dismissible-侧滑删除" aria-hidden="true">#</a> Dismissible - “侧滑删除”</h3><blockquote><p>用于实现侧滑删除功能</p></blockquote><ul><li><p>direction : 滑动防线</p></li><li><p>dismissThresholds : 清除阈值，滑动到什么比例触发操作</p></li><li><p>confirmDismiss : 确认删除回调</p></li><li><p>onDismissed : 删除完成回调</p></li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="pageview-分页视图" tabindex="-1"><a class="header-anchor" href="#pageview-分页视图" aria-hidden="true">#</a> PageView - “分页视图”</h2><blockquote><p>可以分页整屏滚动的视图</p></blockquote><ul><li><p>scrollDirection : 滚动方向</p></li><li><p>pageSnapping : 是否分页效果</p></li><li><p>onPageChanged : 页面变化回调</p></li></ul><blockquote><p>PageController : 页面控制器</p></blockquote><ul><li>jumpTo() : 跳转到指定偏移</li><li>jumpToPage() : 跳转到指定页面</li><li>animateTo() : 动画跳转到指定便宜</li><li>animateToPage() : 动画跳转到指定页面</li></ul><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 创建控制器</span>
<span class="token class-name">PageController</span> _controller <span class="token operator">=</span> <span class="token class-name">PageController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建分页视图</span>
<span class="token class-name">PageView</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>
  controller<span class="token punctuation">:</span> _controller<span class="token punctuation">,</span>
  itemCount<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
  itemBuilder<span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> 
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sliver" tabindex="-1"><a class="header-anchor" href="#sliver" aria-hidden="true">#</a> Sliver</h2><h3 id="slivertoboxadapter" tabindex="-1"><a class="header-anchor" href="#slivertoboxadapter" aria-hidden="true">#</a> SliverToBoxAdapter</h3><h3 id="sliverlist" tabindex="-1"><a class="header-anchor" href="#sliverlist" aria-hidden="true">#</a> SliverList</h3><h3 id="sliverfixedextentlist" tabindex="-1"><a class="header-anchor" href="#sliverfixedextentlist" aria-hidden="true">#</a> SliverFixedExtentList</h3><h3 id="sliverprototypeextentlist" tabindex="-1"><a class="header-anchor" href="#sliverprototypeextentlist" aria-hidden="true">#</a> SliverPrototypeExtentList</h3><h3 id="slivergrid" tabindex="-1"><a class="header-anchor" href="#slivergrid" aria-hidden="true">#</a> SliverGrid</h3><h3 id="sliverfillviewport" tabindex="-1"><a class="header-anchor" href="#sliverfillviewport" aria-hidden="true">#</a> SliverFillViewport</h3><hr><h3 id="sliverappbar" tabindex="-1"><a class="header-anchor" href="#sliverappbar" aria-hidden="true">#</a> SliverAppBar</h3><h3 id="flexiblespacebar" tabindex="-1"><a class="header-anchor" href="#flexiblespacebar" aria-hidden="true">#</a> FlexibleSpaceBar</h3><h3 id="sliverpersistentheader" tabindex="-1"><a class="header-anchor" href="#sliverpersistentheader" aria-hidden="true">#</a> SliverPersistentHeader</h3><hr><h3 id="sliverfillremaining" tabindex="-1"><a class="header-anchor" href="#sliverfillremaining" aria-hidden="true">#</a> SliverFillRemaining</h3><h3 id="sliversafearea" tabindex="-1"><a class="header-anchor" href="#sliversafearea" aria-hidden="true">#</a> SliverSafeArea</h3><h3 id="sliverpadding" tabindex="-1"><a class="header-anchor" href="#sliverpadding" aria-hidden="true">#</a> SliverPadding</h3><h3 id="sliverlayoutbuilder" tabindex="-1"><a class="header-anchor" href="#sliverlayoutbuilder" aria-hidden="true">#</a> SliverLayoutBuilder</h3><h3 id="sliveropacity" tabindex="-1"><a class="header-anchor" href="#sliveropacity" aria-hidden="true">#</a> SliverOpacity</h3><h3 id="slivervisibility" tabindex="-1"><a class="header-anchor" href="#slivervisibility" aria-hidden="true">#</a> SliverVisibility</h3><h3 id="sliveranimatedlist" tabindex="-1"><a class="header-anchor" href="#sliveranimatedlist" aria-hidden="true">#</a> SliverAnimatedList</h3>`,73);function o(c,r){return n(),e("div",null,[s(" more "),t])}const u=a(l,[["render",o],["__file","0x04.scroll.html.vue"]]);export{u as default};
