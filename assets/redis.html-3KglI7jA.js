import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as p,c as r,a as l,b as s,e as a,d as t,f as c}from"./app-QoRASclm.js";const k={},i=s("h2",{id:"reference",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),a(" Reference")],-1),m={href:"https://github.com/redis/redis",target:"_blank",rel:"noopener noreferrer"},d=s("blockquote",null,[s("p",null,"Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps.")],-1),u={href:"https://www.redisio.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/CN-annotation-team/redis7.0-chinese-annotated",target:"_blank",rel:"noopener noreferrer"},v=s("blockquote",null,[s("p",null,"Redis 7.0.5 版本——中文注释，持续更新！欢迎参与本项目！🍭🍭🍭")],-1),b=c(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># redis cli 连接本地 redis (host: 127.0.0.1 port: 6379)</span>
$ redis-cli 
<span class="token comment"># redis cli 连接指定远程 redis</span>
$ redis-cli <span class="token parameter variable">-h</span> <span class="token operator">&lt;</span>host<span class="token operator">&gt;</span> <span class="token parameter variable">-p</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span> <span class="token parameter variable">-a</span> <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## Key</span>
<span class="token operator">&gt;</span> DEL <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>         <span class="token comment"># 删除一个键值</span>
<span class="token comment">## String </span>
<span class="token comment">## 字符串: 存储一个字符串</span>
<span class="token operator">&gt;</span> SET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>     <span class="token comment"># 设置一个键值</span>
<span class="token operator">&gt;</span> GET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>             <span class="token comment"># 查询一个键值</span>
<span class="token operator">&gt;</span> GETSET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>  <span class="token comment"># 在一个已存在的键上，返回旧的值，设置为新的值</span>
<span class="token operator">&gt;</span> MSET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 设置多个键值</span>
<span class="token operator">&gt;</span> MGET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 查询多个键值</span>
<span class="token operator">&gt;</span> APPEND <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token comment"># 在一个已存在字符串后面追加内容</span>
<span class="token comment">## List</span>
<span class="token comment">##  列表: 存储一个数组类型 [&quot;one&quot;, &quot;two&quot;]</span>
<span class="token operator">&gt;</span> LPUSH <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token punctuation">[</span>value2 <span class="token punctuation">..</span>.<span class="token punctuation">]</span>  <span class="token comment"># 在列表头部添加一个元素</span>
<span class="token operator">&gt;</span> RPUSH <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token punctuation">[</span>value2 <span class="token punctuation">..</span>.<span class="token punctuation">]</span>  <span class="token comment"># 在列表尾部添加一个元素</span>
<span class="token operator">&gt;</span> LPOP <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 在列表头部删除一个元素</span>
<span class="token operator">&gt;</span> RPOP <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 在列表尾部删除一个元素 </span>
<span class="token operator">&gt;</span> LLEN <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 查询列表长度</span>
<span class="token operator">&gt;</span> LRANGE <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>start<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>stop<span class="token operator">&gt;</span> <span class="token comment"># 查询指定范围的列表元素</span>
<span class="token comment">## Set</span>
<span class="token comment">##  无序集合: 存储一个集合类型(元素不能重复)</span>
<span class="token operator">&gt;</span> SADD <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>member<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 添加集合成员</span>
<span class="token operator">&gt;</span> SCARD <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 查询集合数量</span>
<span class="token operator">&gt;</span> SDIFF <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token comment"># 返回两个集合的差异</span>
<span class="token operator">&gt;</span> SMEMBERS <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 查询集合的所有成员</span>
<span class="token operator">&gt;</span> SPOP <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 移除集合中的一个随机元素</span>
<span class="token operator">&gt;</span> SMEMBER <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator">&gt;</span> <span class="token comment"># 判断 member 是否为集合中的元素</span>
<span class="token operator">&gt;</span> SREM <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>member<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 移除集合中的元素</span>
<span class="token comment">## SortedSet</span>
<span class="token comment">##  有序集合: 存储一个有序集合类型(元素不能重复，按照分数从小到大排序)</span>
<span class="token operator">&gt;</span> ZADD <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>score<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>score<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token punctuation">]</span> <span class="token comment"># 添加有序集合成员</span>
<span class="token operator">&gt;</span> ZCARD <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 查询有序集合输了</span>
<span class="token operator">&gt;</span> ZRANGE <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>start<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>stop<span class="token operator">&gt;</span> 
<span class="token operator">&gt;</span> ZREM <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>member<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 移除有序集合中的元素</span>
<span class="token operator">&gt;</span> ZSCORE <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>member<span class="token operator">&gt;</span> <span class="token comment"># 查询有序集合中元素的分数</span>
<span class="token comment">## Hash</span>
<span class="token comment">##  哈希表: 存储一个字典类型 {&quot;field&quot;: &quot;value&quot;}</span>
<span class="token operator">&gt;</span> HSET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token comment"># 设置一个哈希键值对</span>
<span class="token operator">&gt;</span> HMSET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>field<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 设置多个哈希表的字段和值</span>
<span class="token operator">&gt;</span> HEXISTS <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span> <span class="token comment"># 查询哈希表是否存在某个字段名</span>
<span class="token operator">&gt;</span> HGETALL <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>         <span class="token comment"># 查询哈希表所有字段和值</span>
<span class="token operator">&gt;</span> HGET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>    <span class="token comment"># 查询哈希表指定字段名的值</span>
<span class="token operator">&gt;</span> HMGET <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>field<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>field<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># 查询哈希表多个字段名的值</span>
<span class="token operator">&gt;</span> HLEN <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>  <span class="token comment"># 查询哈希表字段数量</span>
<span class="token operator">&gt;</span> HKEYS <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 获取哈希表所有字段名</span>
<span class="token operator">&gt;</span> HVALS <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token comment"># 获取哈希表所有值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(f,y){const n=o("ExternalLinkIcon");return p(),r("div",null,[l(" more "),i,s("ul",null,[s("li",null,[s("a",m,[a("redis"),t(n)]),d]),s("li",null,[s("a",u,[a("Redis 中文文档"),t(n)])]),s("li",null,[s("a",g,[a("redis7.0-chinese-annotated"),t(n)]),v])]),b])}const E=e(k,[["render",h],["__file","redis.html.vue"]]);export{E as default};
