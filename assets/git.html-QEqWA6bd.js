import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as c,c as l,a as p,b as n,e as s,d as e,f as t}from"./app-Ic57kXOs.js";const r={},d=t("<blockquote><p><code>Git</code>是一款自由和开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。是<code>Linus</code>(李纳斯)的第二个伟大作品，2005年由于<code>BitKeeper</code>软件公司对<code>Linux</code>社区停止了免费使用权。<code>Linus</code>迫不得己自己开发了一个分布式版本控制工具，因而开发了<code>Git</code>。</p></blockquote>",1),m=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" reference")],-1),u={href:"https://git-lfs.com/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"},v={href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/flyhigher139/Git-Cheat-Sheet",target:"_blank",rel:"noopener noreferrer"},b={href:"https://oschina.gitee.io/learn-git-branching/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.gerritcodereview.com/",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"repositority",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#repositority","aria-hidden":"true"},"#"),s(" repositority")],-1),$={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},_={href:"https://gitlab.com",target:"_blank",rel:"noopener noreferrer"},x={href:"https://gitee.com",target:"_blank",rel:"noopener noreferrer"},w={href:"https://bitbucket.org/",target:"_blank",rel:"noopener noreferrer"},y=t(`<h2 id="gitignore" tabindex="-1"><a class="header-anchor" href="#gitignore" aria-hidden="true">#</a> .gitignore</h2><blockquote><p>忽略无需使用 git 管理的文件</p></blockquote><ul><li><p><code>.gitignore</code> 文件规则</p><ul><li>所有空格 &amp; <code>#</code>开头的注释 都不会被忽略</li><li>使用glob模式匹配 ( <code>glob</code>模式 : shell使用的简化的正则 )</li><li><code>/</code> : 说明忽略的是目录</li></ul></li><li><p><code>glob</code> 模式</p><ul><li><code>*</code> : 匹配0个或多个任意字符</li><li><code>[abc]</code> : 匹配方括号中的其中一个字符(或)</li><li><code>?</code> : 匹配一个任意字符</li><li><code>[0-9]</code> : 匹配该字符范围的其中一个字符</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*.a     <span class="token comment"># 忽略所有\`.a\`后缀的文件</span>
<span class="token operator">!</span>lib.a  <span class="token comment"># 但是\`lib.a\`除外</span>

/file   <span class="token comment"># 忽略根目录的 \`file\` 文件</span>
dir/        <span class="token comment"># 忽略dir目录下的所有文件</span>
dir/*.txt   <span class="token comment"># 忽略dir目录下的所有\`txt\`后缀的的文件( 不会递归忽略到dir的子目录 )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands" aria-hidden="true">#</a> Commands</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> config <span class="token parameter variable">--list</span>         <span class="token comment"># 显示配置信息</span>
<span class="token comment"># 设置当前 git 项目的配置(用户名 &amp; 邮箱)</span>
$ <span class="token function">git</span> config user.name <span class="token string">&#39;username&#39;</span>
$ <span class="token function">git</span> config user.email <span class="token string">&#39;user@mail.com&#39;</span>
<span class="token comment"># 设置全局用户信息( --global : 设置全局信息，不加设置当前git配置 )</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&#39;naijoug&#39;</span>  
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&#39;naijoug@126.com&#39;</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> color.ui <span class="token boolean">true</span>     <span class="token comment"># git显示颜色</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> alias.st status   <span class="token comment"># 设置命令别名</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> alise.unstage <span class="token string">&#39;reset HEAD&#39;</span> <span class="token comment"># 设置命令串别名</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> alias.lg <span class="token string">&#39;log --color --graph --pretty=format:&#39;</span>%Cred%h%Creset -%C<span class="token punctuation">(</span>yellow<span class="token punctuation">)</span>%d%Creset %s %Cgreen<span class="token punctuation">(</span>%cr<span class="token punctuation">)</span> %C<span class="token punctuation">(</span>bold blue<span class="token punctuation">)</span><span class="token operator">&lt;</span>%an<span class="token operator">&gt;</span>%Creset<span class="token string">&#39; --abbrev-commit&#39;</span>
$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name     <span class="token comment"># 查看指定的配置信息</span>
<span class="token comment"># 设置 github proxy</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.https://github.com.proxy <span class="token comment"># 取消 github 代理</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.https://github.com.proxy socks5://xxx.com:8080 <span class="token comment"># 设置 github 代理</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># git初始化</span>
$ <span class="token function">git</span> init                  <span class="token comment"># 将当前目录初始化为git</span>
$ <span class="token function">git</span> init <span class="token parameter variable">--bare</span>           <span class="token comment"># </span>
<span class="token comment"># git 添加</span>
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token function">file</span>              <span class="token comment"># 添加文件</span>
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>                 <span class="token comment"># 添加所有文件</span>
$ <span class="token function">git</span> stage <span class="token builtin class-name">.</span>               <span class="token comment"># 等价于 git add .</span>
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-f</span> <span class="token function">file</span>           <span class="token comment"># 强制添加文件( file文件被\`.gitignore\`忽略 )</span>
$ <span class="token function">git</span> check-ignore <span class="token parameter variable">-v</span> <span class="token function">file</span>  <span class="token comment"># 可以查看( file文件被忽略 是\`.gitignore\`文件那一行的原因 )</span>
$ <span class="token function">git</span> status                <span class="token comment"># 查看状态</span>
<span class="token comment"># git 提交</span>
$ <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;commit info&#39;</span>   <span class="token comment"># 提交变动</span>
$ <span class="token function">git</span> commit <span class="token parameter variable">--amend</span>            <span class="token comment"># 修改最后一次提交</span>
<span class="token comment"># git 查看变动</span>
$ <span class="token function">git</span> <span class="token function">diff</span>                    <span class="token comment"># 查看工作区文件变化</span>
$ <span class="token function">git</span> <span class="token function">diff</span> <span class="token function">file</span>               <span class="token comment"># 查看工作区指定文件变化</span>
$ <span class="token function">git</span> <span class="token function">diff</span> <span class="token parameter variable">--staged</span>           <span class="token comment"># 查看暂存区文件变化</span>
$ <span class="token function">git</span> <span class="token function">diff</span> <span class="token parameter variable">--cached</span>           <span class="token comment"># 查看暂存区文件变化</span>
$ <span class="token function">git</span> <span class="token function">diff</span> HEAD -- <span class="token function">file</span>       <span class="token comment"># 查看版本库和工作区指定文件变化</span>
<span class="token comment"># git log</span>
$ <span class="token function">git</span> log                     <span class="token comment"># 查看历史记录</span>
$ <span class="token function">git</span> log <span class="token parameter variable">-p</span> <span class="token parameter variable">-2</span>               <span class="token comment"># 显示最后两次提交记录 ( -p : 显示每次提交差异 )</span>
$ <span class="token function">git</span> log <span class="token parameter variable">--stat</span>              <span class="token comment"># 显示增改行数统计</span>
$ <span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline    <span class="token comment"># 将提交信息显示在一行中</span>
$ <span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>format<span class="token operator">=</span><span class="token string">&#39;%h - %an, %ar : %s&#39;</span> <span class="token comment"># 格式化提交信息</span>
$ <span class="token function">git</span> log <span class="token parameter variable">--graph</span>             <span class="token comment"># 查看历史分支合并图</span>
$ <span class="token function">git</span> log --abbrev-commit     <span class="token comment"># 缩写(commit id)</span>
$ <span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline --abbrev-commit <span class="token comment"># 多参数显示历史记录</span>
<span class="token comment"># git 回退</span>
$ <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD^      <span class="token comment"># 回退到上一版本 ( HEAD: 当前版本 HEAD^: 上一版本 HEAD^^: 上上版本  HEAD~100:上100个版本)</span>
$ <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> b317a3     <span class="token comment"># 会退到指定版本 (commit id , 可以不写全只写前几位)</span>
$ <span class="token function">git</span> reset HEAD <span class="token function">file</span>         <span class="token comment"># 把暂存区的修改撤销(撤销到工作区)</span>
$ <span class="token function">git</span> reflog                  <span class="token comment"># 记录每一次git的命令    </span>
$ <span class="token function">git</span> checkout -- <span class="token function">file</span>        <span class="token comment"># 撤销文件工作区的全部修改</span>
$ <span class="token function">git</span> restore <span class="token parameter variable">--staged</span> <span class="token function">file</span>   <span class="token comment"># 插销暂存文件</span>
$ <span class="token function">git</span> restore <span class="token parameter variable">--staged</span> <span class="token builtin class-name">.</span>      <span class="token comment"># 撤销所有暂存文件</span>
$ <span class="token function">git</span> restore <span class="token builtin class-name">.</span>               <span class="token comment"># 撤销工作区所有修改</span>
<span class="token comment"># git 远程操作</span>
$ <span class="token function">git</span> remote                <span class="token comment"># 查看远程仓库信息</span>
$ <span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:naijoug/NGKit.git    <span class="token comment"># 添加名为\`origin\`的仓库</span>
$ <span class="token function">git</span> remote set-url origin https://<span class="token operator">&lt;</span>Token<span class="token operator">&gt;</span>@github.com/<span class="token operator">&lt;</span>Username<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>Repo<span class="token operator">&gt;</span>.git
$ <span class="token function">git</span> remote <span class="token parameter variable">-v</span>             <span class="token comment"># 查看当前remote远程仓库详细信息</span>
$ <span class="token function">git</span> remote show origin    <span class="token comment"># 查看\`origin\`远程仓库的详细信息</span>
$ <span class="token function">git</span> remote <span class="token function">rename</span> origin name <span class="token comment"># 重命名\`origin\`为\`name\`</span>
$ <span class="token function">git</span> remote <span class="token function">rm</span> origin      <span class="token comment"># 删除名为\`origin\`的远程仓库</span>
$ <span class="token function">git</span> push origin master    <span class="token comment"># 推动master到origin远程仓库</span>
$ <span class="token function">git</span> push origin dev:dev   <span class="token comment"># 推送本地分支 dev 到远程 origin </span>
$ <span class="token function">git</span> push origin https://<span class="token operator">&lt;</span>Username<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>Token<span class="token operator">&gt;</span>@github.com/<span class="token operator">&lt;</span>Username<span class="token operator">&gt;</span>/<span class="token operator">&lt;</span>Repo<span class="token operator">&gt;</span>.git
$ <span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master <span class="token comment"># 设定 master 分支的远程 origin 的 upstream 分支</span>
<span class="token comment">#       -u : --set-upstream</span>
$ <span class="token function">git</span> clone git@github.com:naijoug/NGKit/NGKit.git <span class="token comment"># 从远程仓库clone项目到本地</span>
$ <span class="token function">git</span> fetch origin          <span class="token comment"># 下载服务器代码到本地,不影响本地代码(在/origin/master远程分支)</span>
$ <span class="token function">git</span> pull                  <span class="token comment"># 从远程仓库，抓取最新代码到本地</span>
$ <span class="token function">git</span> pull --allow-unrelated-histories
<span class="token comment"># git 分支管理</span>
$ <span class="token function">git</span> branch                <span class="token comment"># 查看分支</span>
$ <span class="token function">git</span> branch dev            <span class="token comment"># 创建名为\`dev\`的分支</span>
$ <span class="token function">git</span> branch <span class="token parameter variable">-d</span> dev         <span class="token comment"># 删除分支 </span>
$ <span class="token function">git</span> branch <span class="token parameter variable">-D</span> dev         <span class="token comment"># 强制删除分支</span>
$ <span class="token function">git</span> branch --set-upstream dev origin/dev  <span class="token comment"># 设置本地\`dev\`分支与远程分支\`origin/dev\`的链接</span>
$ <span class="token function">git</span> branch <span class="token parameter variable">--merged</span>       <span class="token comment"># 查看已合并的分支</span>
$ <span class="token function">git</span> branch --no-merged    <span class="token comment"># 查看未合并的分支</span>
$ <span class="token function">git</span> checkout dev          <span class="token comment"># 切换分支</span>
$ <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> dev       <span class="token comment"># 创建 &amp; 切换分支</span>
$ <span class="token function">git</span> checkout <span class="token parameter variable">-b</span> dev origin/dev    <span class="token comment"># 创建与远程分支\`origin/dev\`对应的的本地分支\`dev\`</span>
$ <span class="token function">git</span> merge dev             <span class="token comment"># 合并\`dev\`分支到当前分支( Fast Forward 模式合并 )</span>
$ <span class="token function">git</span> merge --no-ff <span class="token parameter variable">-m</span> <span class="token string">&#39;merge no-ff&#39;</span> dev <span class="token comment"># 不用( Fast Forward )模式进行合并</span>
<span class="token comment"># fork 之后</span>
$ <span class="token function">git</span> remote <span class="token function">add</span> upstream https://github.com/xxx/xxx <span class="token comment"># 添加上游仓库地址</span>
$ <span class="token function">git</span> fetch upstream <span class="token comment"># 拉取上游仓库代码</span>
$ <span class="token function">git</span> merge upstream/master <span class="token comment"># 合并上游仓库(fork 的原有仓库)</span>

<span class="token comment"># git 状态存储</span>
$ <span class="token function">git</span> stash                 <span class="token comment"># 保存当前工作状态</span>
$ <span class="token function">git</span> stash list            <span class="token comment"># 显示当前存储的工作状态栈</span>
$ <span class="token function">git</span> stash apply           <span class="token comment"># 恢复栈顶的工作状态( stash状态未删除 )</span>
$ <span class="token function">git</span> stash drop            <span class="token comment"># 删除栈顶的工作状态</span>
$ <span class="token function">git</span> stash apply stash@<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span> <span class="token comment"># 恢复指定的stash</span>
$ <span class="token function">git</span> stash pop             <span class="token comment"># 恢复栈顶工作状态，并删除stash状态</span>
<span class="token comment"># git 标签管理</span>
$ <span class="token function">git</span> tag                   <span class="token comment"># 查看所有便签</span>
$ <span class="token function">git</span> tag v1.0              <span class="token comment"># 为当前分支打一个标签</span>
$ <span class="token function">git</span> tag v2.0 4d02a0a      <span class="token comment"># 为指定的( commit id )打标签</span>
$ <span class="token function">git</span> tag <span class="token parameter variable">-a</span> v3.0 <span class="token parameter variable">-m</span> <span class="token string">&#39;version 3.0&#39;</span>  <span class="token comment"># 打标签 &amp; 说明文字</span>
$ <span class="token function">git</span> tag <span class="token parameter variable">-d</span> v1.0           <span class="token comment"># 删除标签</span>
$ <span class="token function">git</span> push origin v1.0      <span class="token comment"># 推送指定tag到远程</span>
$ <span class="token function">git</span> push origin <span class="token parameter variable">--tags</span>    <span class="token comment"># 推送所有的tag到远程</span>
$ <span class="token function">git</span> push origin :refs/tags/v1.0   <span class="token comment"># 删除远程库中的标签</span>
$ <span class="token function">git</span> show v1.0             <span class="token comment"># 显示指定标签的提交信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>git log</code> 常用选项</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>-p</code></td><td>按补丁格式显示每个更新之间的差异。</td></tr><tr><td><code>--stat</code></td><td>显示每次更新的文件修改统计信息。</td></tr><tr><td><code>--shortstat</code></td><td>只显示 --stat 中最后的行数修改添加移除统计。</td></tr><tr><td><code>--name-only</code></td><td>仅在提交信息后显示已修改的文件清单。</td></tr><tr><td><code>--name-status</code></td><td>显示新增、修改、删除的文件清单。</td></tr><tr><td><code>--abbrev-commit</code></td><td>仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。</td></tr><tr><td><code>--relative-date</code></td><td>使用较短的相对时间显示（比如，“2 weeks ago”）。</td></tr><tr><td><code>--graph</code></td><td>显示 ASCII 图形表示的分支合并历史。</td></tr><tr><td><code>--pretty</code></td><td>使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。</td></tr></tbody></table></li><li><p><code>--pretty=format</code> 格式化占位符说明</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>%H</code></td><td>提交对象（commit）的完整哈希字串</td></tr><tr><td><code>%h</code></td><td>提交对象的简短哈希字串</td></tr><tr><td><code>%T</code></td><td>树对象（tree）的完整哈希字串</td></tr><tr><td><code>%t</code></td><td>树对象的简短哈希字串</td></tr><tr><td><code>%P</code></td><td>父对象（parent）的完整哈希字串</td></tr><tr><td><code>%p</code></td><td>父对象的简短哈希字串</td></tr><tr><td><code>%an</code></td><td>作者（author）的名字</td></tr><tr><td><code>%ae</code></td><td>作者的电子邮件地址</td></tr><tr><td><code>%ad</code></td><td>作者修订日期（可以用 -date= 选项定制格式）</td></tr><tr><td><code>%ar</code></td><td>作者修订日期，按多久以前的方式显示</td></tr><tr><td><code>%cn</code></td><td>提交者(committer)的名字</td></tr><tr><td><code>%ce</code></td><td>提交者的电子邮件地址</td></tr><tr><td><code>%cd</code></td><td>提交日期</td></tr><tr><td><code>%cr</code></td><td>提交日期，按多久以前的方式显示</td></tr><tr><td><code>%s</code></td><td>提交说明</td></tr></tbody></table></li></ul><h2 id="mercurial" tabindex="-1"><a class="header-anchor" href="#mercurial" aria-hidden="true">#</a> Mercurial</h2>`,8),C={href:"https://www.mercurial-scm.org/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://www.mercurial-scm.org/wiki/CategoryChinese",target:"_blank",rel:"noopener noreferrer"};function A(E,H){const a=i("ExternalLinkIcon");return c(),l("div",null,[d,p(" more "),m,n("ul",null,[n("li",null,[n("a",u,[s("Git Large File Storage"),e(a)])]),n("li",null,[n("a",k,[s("Git Pro 2nd"),e(a)])]),n("li",null,[n("a",v,[s("Git 教程"),e(a)])]),n("li",null,[n("a",g,[s("Git Cheat Sheet 中文版"),e(a)])]),n("li",null,[n("a",b,[s("Learn Git Branching"),e(a)])]),n("li",null,[n("a",f,[s("Gerrit"),e(a)]),s(" : A git serve for code review.")])]),h,n("ul",null,[n("li",null,[n("a",$,[s("GitHub"),e(a)])]),n("li",null,[n("a",_,[s("Gitlab"),e(a)])]),n("li",null,[n("a",x,[s("Gitee"),e(a)])]),n("li",null,[n("a",w,[s("Bitbucket"),e(a)])])]),y,n("ul",null,[n("li",null,[n("a",C,[s("Mercurial"),e(a)])]),n("li",null,[n("a",G,[s("Mercurial 中文 Wiki"),e(a)])])])])}const L=o(r,[["render",A],["__file","git.html.vue"]]);export{L as default};
