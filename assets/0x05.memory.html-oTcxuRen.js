const t=JSON.parse('{"key":"v-02de5171","path":"/interview/flutter/0x05.memory.html","title":"Memory - “内存管理”","lang":"zh-CN","frontmatter":{"title":"Memory - “内存管理”","icon":"hashtag","index":true,"description":"❓Flutter 的内存管理 ::: details 💡 Flutter 的内存管理机制主要依赖于它所使用的 Dart 语言的内存管理。 1. 内存分配：在 Dart 语言中，对象是在堆中分配的。Dart 使用一种名为新生代（New Space）和老生代（Old Space）的概念来组织堆内存，新创建的对象首先进入到新生代，随着垃圾回收和对象的存活时...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/flutter/0x05.memory.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Memory - “内存管理”"}],["meta",{"property":"og:description","content":"❓Flutter 的内存管理 ::: details 💡 Flutter 的内存管理机制主要依赖于它所使用的 Dart 语言的内存管理。 1. 内存分配：在 Dart 语言中，对象是在堆中分配的。Dart 使用一种名为新生代（New Space）和老生代（Old Space）的概念来组织堆内存，新创建的对象首先进入到新生代，随着垃圾回收和对象的存活时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-16T13:40:50.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-01-16T13:40:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Memory - “内存管理”\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-16T13:40:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"❓Flutter 的内存管理","slug":"❓flutter-的内存管理","link":"#❓flutter-的内存管理","children":[]}],"git":{"createdTime":1705412450000,"updatedTime":1705412450000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":1}]},"readingTime":{"minutes":2.11,"words":632},"filePathRelative":"interview/flutter/0x05.memory.md","localizedDate":"2024年1月16日","autoDesc":true}');export{t as data};
