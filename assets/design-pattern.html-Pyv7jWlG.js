import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as a,c as i,a as c,b as e,e as t,d as n,f as s}from"./app-NWzcul-W.js";const l={},h=e("h1",{id:"design-pattern",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#design-pattern","aria-hidden":"true"},"#"),t(" Design Pattern")],-1),_=e("blockquote",null,[e("p",null,"设计模式")],-1),p=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),t(" Reference")],-1),u={href:"https://refactoringguru.cn/design-patterns/catalog",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/me115/design_patterns",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/youlookwhat/DesignPattern",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/quanke/design-pattern-java",target:"_blank",rel:"noopener noreferrer"},m=s('<h2 id="solid-设计原则" tabindex="-1"><a class="header-anchor" href="#solid-设计原则" aria-hidden="true">#</a> SOLID 设计原则</h2><table><thead><tr><th>设计原则</th><th>英文名</th><th>中文名</th><th>说明</th></tr></thead><tbody><tr><td><code>SRP</code></td><td>Single Responsibility Principle</td><td>单一职责原则</td><td>一个类只负责一件事。</td></tr><tr><td><code>OCP</code></td><td>Open Closed Principle</td><td>开放封闭原则</td><td>对修改关闭，对扩展开放。</td></tr><tr><td><code>LSP</code></td><td>Liskov Substitution Principle</td><td>里式替换原则</td><td>父类可以被子类替换，且功能不受影响</td></tr><tr><td><code>ISP</code></td><td>Interface Segregation Principle</td><td>接口隔离原则</td><td>根据功能设计单独的接口，不要设置一个臃肿的接口</td></tr><tr><td><code>DIP</code></td><td>Dependency Inversion Principle</td><td>依赖倒置原则</td><td>抽象不依赖具体，具体依赖于抽象</td></tr></tbody></table><ul><li><code>LoD</code> : Law of Demeter 迪米特法则 (LKP Least Knowledge Principle 最少知识原则) 高内聚，低耦合</li></ul>',3);function P(k,x){const r=o("ExternalLinkIcon");return a(),i("div",null,[h,_,c(" more "),p,e("ul",null,[e("li",null,[e("a",u,[t("设计模式"),n(r)])]),e("li",null,[e("a",f,[t("图说设计模式"),n(r)])]),e("li",null,[e("a",g,[t("📚 Java 23种设计模式全归纳"),n(r)])]),e("li",null,[e("a",b,[t("设计模式 Java版本"),n(r)])])]),m])}const S=d(l,[["render",P],["__file","design-pattern.html.vue"]]);export{S as default};
