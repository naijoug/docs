const t=JSON.parse('{"key":"v-1aa41cef","path":"/interview/flutter/0x01.dart.html","title":"Dart","lang":"zh-CN","frontmatter":{"title":"Dart","icon":"hashtag","index":true,"description":"数据类型 ❓ const vs final 💡 final 和 const 都用于表示一个值是常量，也就是说这个值一旦被设置就不能被更改。 主要区别： 赋值时机：; const 的赋值必须在编译期完成，因此 const 的值必须是一个编译期常量。; final 的赋值在第一次使用时计算，它的初始值可以通过计算而来，但只能赋值一次。; 内存内常量的处理...","head":[["meta",{"property":"og:url","content":"https://naijoug.github.io/docs/docs/interview/flutter/0x01.dart.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Dart"}],["meta",{"property":"og:description","content":"数据类型 ❓ const vs final 💡 final 和 const 都用于表示一个值是常量，也就是说这个值一旦被设置就不能被更改。 主要区别： 赋值时机：; const 的赋值必须在编译期完成，因此 const 的值必须是一个编译期常量。; final 的赋值在第一次使用时计算，它的初始值可以通过计算而来，但只能赋值一次。; 内存内常量的处理..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T01:11:06.000Z"}],["meta",{"property":"article:author","content":"naijoug"}],["meta",{"property":"article:modified_time","content":"2024-03-26T01:11:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dart\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-26T01:11:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"naijoug\\",\\"url\\":\\"https://github.com/naijoug\\"}]}"]]},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"❓ const vs final","slug":"❓-const-vs-final","link":"#❓-const-vs-final","children":[]},{"level":3,"title":"❓var vs Object vs dynamic","slug":"❓var-vs-object-vs-dynamic","link":"#❓var-vs-object-vs-dynamic","children":[]}]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"❓Dart 中 .. 表示什么意思","slug":"❓dart-中-表示什么意思","link":"#❓dart-中-表示什么意思","children":[]},{"level":3,"title":"❓Dart 的作用域","slug":"❓dart-的作用域","link":"#❓dart-的作用域","children":[]}]},{"level":2,"title":"类","slug":"类","link":"#类","children":[{"level":3,"title":"❓Dart 中的 callable 了解吗","slug":"❓dart-中的-callable-了解吗","link":"#❓dart-中的-callable-了解吗","children":[]},{"level":3,"title":"❓Dart 中使用抽象类 extends 和 implements 的区别","slug":"❓dart-中使用抽象类-extends-和-implements-的区别","link":"#❓dart-中使用抽象类-extends-和-implements-的区别","children":[]},{"level":3,"title":"❓说一下 mixin","slug":"❓说一下-mixin","link":"#❓说一下-mixin","children":[]},{"level":3,"title":"❓mixin extends implement 之间的关系","slug":"❓mixin-extends-implement-之间的关系","link":"#❓mixin-extends-implement-之间的关系","children":[]},{"level":3,"title":"❓Dart 为啥没有反射","slug":"❓dart-为啥没有反射","link":"#❓dart-为啥没有反射","children":[]},{"level":3,"title":"❓Dart 中如何使用反射","slug":"❓dart-中如何使用反射","link":"#❓dart-中如何使用反射","children":[]},{"level":3,"title":"❓Dart 中单例如何实现","slug":"❓dart-中单例如何实现","link":"#❓dart-中单例如何实现","children":[]}]},{"level":2,"title":"异步编程","slug":"异步编程","link":"#异步编程","children":[{"level":3,"title":"❓说一下 Future","slug":"❓说一下-future","link":"#❓说一下-future","children":[]},{"level":3,"title":"❓说一下 Stream","slug":"❓说一下-stream","link":"#❓说一下-stream","children":[]},{"level":3,"title":"❓await for 如何使用","slug":"❓await-for-如何使用","link":"#❓await-for-如何使用","children":[]}]}],"git":{"createdTime":1705412450000,"updatedTime":1711415466000,"contributors":[{"name":"naijoug","email":"naijoug@outlook.com","commits":4}]},"readingTime":{"minutes":8.42,"words":2526},"filePathRelative":"interview/flutter/0x01.dart.md","localizedDate":"2024年1月16日","autoDesc":true}');export{t as data};
