import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as k,c as d,a as p,b as n,e as s,d as o,w as a,f as u}from"./app-TLKbS0Xy.js";const m={},b=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" reference")],-1),v={href:"https://visualgo.net/zh/polygon/print",target:"_blank",rel:"noopener noreferrer"},h={href:"https://visualgo.net/zh/convexhull/print",target:"_blank",rel:"noopener noreferrer"},_={href:"https://visualgo.net/zh/reductions/print",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"常用的数学函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#常用的数学函数","aria-hidden":"true"},"#"),s(" 常用的数学函数")],-1),y=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"abs"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("     "),n("span",{class:"token comment"},"// 返回 x 的绝对值。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ceil"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("    "),n("span",{class:"token comment"},"// 对x进行向上取整，返回大于或等于 x 的最小的整数。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"floor"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("   "),n("span",{class:"token comment"},"// 对x进行向下取整，返回小于或等于 x 的最大的整数。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"round"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("   "),n("span",{class:"token comment"},"// 将 x 四舍五入到最近的整数，并返回该整数。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sqrt"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("    "),n("span",{class:"token comment"},"// 返回 x 的平方根。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pow"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 返回 x 的 y 次幂。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 返回 x 和 y 中的最大值。"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"min"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 返回 x 和 y 中的最小值."),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s("   "),n("span",{class:"token comment"},"// 返回一个在 0.0（包含）和 1.0（不包含）之间的随机数。"),s(`
`),n("span",{class:"token comment"},"// 三角函数（x 是以弧度表示的角度）"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sin"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("     "),n("span",{class:"token comment"},"// 正弦"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cos"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("     "),n("span",{class:"token comment"},"// 余弦"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"tan"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("     "),n("span",{class:"token comment"},"// 正切"),s(`
`),n("span",{class:"token comment"},"// 返回的角度以弧度表示"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asin"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("    "),n("span",{class:"token comment"},"// 反正弦"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"acos"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("    "),n("span",{class:"token comment"},"// 反余弦"),s(`
`),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"atan"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("    "),n("span",{class:"token comment"},"// 反正切"),s(`

`),n("span",{class:"token comment"},"// 随机数生成"),s(`
`),n("span",{class:"token class-name"},"Random"),s(" rand "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"// 生成 [0, 50) 之间的整数"),s(`
`),n("span",{class:"token keyword"},"float"),s(" f "),n("span",{class:"token operator"},"="),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextFloat"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"// 生成 [0, 1) 之间的浮点数"),s(`
`),n("span",{class:"token keyword"},"double"),s(" d "),n("span",{class:"token operator"},"="),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextDouble"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 生成 [0, 1) 之间的浮点数"),s(`
`),n("span",{class:"token keyword"},"boolean"),s(" b "),n("span",{class:"token operator"},"="),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextBoolean"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 生成一个布尔值"),s(`
`),n("span",{class:"token comment"},"// 生成指定范围随机数"),s(`
`),n("span",{class:"token keyword"},"int"),s(" min "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" max "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},"="),s(" min "),n("span",{class:"token operator"},"+"),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"next"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("max "),n("span",{class:"token operator"},"-"),s(" min"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 生成 [20, 50] 之间的随机数"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("hr",null,null,-1),g=n("h2",{id:"整除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#整除","aria-hidden":"true"},"#"),s(" 整除")],-1),j=n("h3",{id:"判断整除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#判断整除","aria-hidden":"true"},"#"),s(" 判断整除")],-1),x={class:"hint-container details"},A=u("<summary>💡</summary><p>如果你想判断一个数能否被另一个数整除，最直接的办法就是使用求模运算（%）。如果一个数N除以另一个数M得到的余数为0，那么就可以说N能被M整除。如果余数不为0，那么N不能被M整除。</p><p>对于整除性判断，有一些数学技巧可以应用：</p><table><thead><tr><th>除数</th><th>技巧</th></tr></thead><tbody><tr><td>2</td><td>其个位数为0、2、4、6、8。</td></tr><tr><td>3</td><td>其各位数之和能被3整除。</td></tr><tr><td>4</td><td>看该数的末两位组成的数能否被4整除。</td></tr><tr><td>5</td><td>个位数为0或5。</td></tr><tr><td>6</td><td>同时被2和3整除。</td></tr><tr><td>7</td><td>有个复杂的规则，将其倒数的三位数乘以2，然后减去前面的数，得出的结果若是7的倍数，则该数就可以被7整除。</td></tr><tr><td>8</td><td>看该数的末三位数能否被8整除。</td></tr><tr><td>9</td><td>其各位数之和能被9整除。</td></tr><tr><td>10</td><td>末位为0。</td></tr><tr><td>11</td><td>奇数位的和与偶数位的和之差是11的倍数。</td></tr><tr><td>12</td><td>同时被3和4整除。</td></tr><tr><td>13</td><td>🈚️ 没有一个简单的规则，常规判断方法是进行除法或求模运算。</td></tr><tr><td>14</td><td>同时被2和7整除。</td></tr><tr><td>15</td><td>同时被3和5整除。</td></tr><tr><td>16</td><td>看该数的末四位组成的数能否被16整除。</td></tr><tr><td>17</td><td>🈚️ 没有一个简单的规则，常规判断方法是进行除法或求模运算。</td></tr><tr><td>18</td><td>同时被2和9整除。</td></tr><tr><td>19</td><td>🈚️ 没有一个简单的规则，常规判断方法是进行除法或求模运算。</td></tr><tr><td>20</td><td>末位为0，且倒数第二位为偶数。</td></tr></tbody></table><p>这些只是一些技巧，并非所有的整除情况都有一个快速的方法。对于那些复杂的数字（例如13、17、19等），常规的方法是通过实际的除法或求模运算来判断。</p>",5),S={href:"https://www.cnblogs.com/xz816111/p/4580491.html",target:"_blank",rel:"noopener noreferrer"},N=u(`<h3 id="一千位的数字字符串-判断是否能被-6-整除" tabindex="-1"><a class="header-anchor" href="#一千位的数字字符串-判断是否能被-6-整除" aria-hidden="true">#</a> 一千位的数字字符串，判断是否能被 6 整除</h3><details class="hint-container details"><summary>💡</summary><p>一个整数能被6整除，当且仅当这个数既能被2整除，又能被3整除。对于一个一千位的字符串，我们无法将其直接转换为整数，因为这将超出整数的最大范围。但是，我们可以独立地判断这个字符串表示的数是否能被2整除和被3整除。</p><p>1、能被2整除的数，其最后一位数字一定是偶数。因此，我们只需要查看字符串的最后一个字符，也就是字符串的最后一位数字，如果是偶数则可以被2整除。</p><p>2、一个数能被3整除，则这个数的各位数字之和一定能被3整除。因此，我们只需要求出字符串每个字符（数字）的和，再判断这个和是否能被3整除。</p><p>如果这个字符串表示的整数能被2整除并且能被3整除，那么这个数就能被6整除。</p><p>以下是一个实现的代码示例（Python语言）：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">isDivisibleBySix</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>   <span class="token comment"># check if divisible by 2</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> digit <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>   <span class="token comment"># check if divisible by 3</span>
        <span class="token builtin">sum</span> <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>digit<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">sum</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以调用函数<code>isDivisibleBySix</code>并传入你的一千位字符串，如果返回值为True，则代表这个字符串表示的整数能被6整除，如果返回值为False，则代表不能被6整除。</p></details><hr><h2 id="幂次方" tabindex="-1"><a class="header-anchor" href="#幂次方" aria-hidden="true">#</a> 幂次方</h2>`,4),M={href:"https://leetcode.cn/problems/power-of-two",target:"_blank",rel:"noopener noreferrer"},L=n("blockquote",null,[n("p",null,"判断一个整数是否为 2 的幂次方")],-1),q={class:"hint-container details"},R=n("summary",null,"💡",-1),I=n("p",null,"【思路1】除余法，对 2 进行不停的除法，如果最后余数结果等于 1 则表明是 2 的幂次。",-1),O=n("p",null,"【思路2】位运算，如果 n 是 2 的幂次方，那么 n & (n - 1) == 0",-1),T=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfTwo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
            n `),n("span",{class:"token operator"},"/="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfTwo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"isPowerOfTwo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" n"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"guard"),s(" n "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),s(),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B={href:"https://leetcode.cn/problems/power-of-three",target:"_blank",rel:"noopener noreferrer"},F=n("blockquote",null,[n("p",null,"判断一个整数是否为 3 的幂次方")],-1),C={class:"hint-container details"},D=n("summary",null,"💡",-1),V=n("p",null,"【思路】求余法",-1),E=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfThree"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 如果对 3 取模不为0，则肯定不是 3 的幂次"),s(`
            n `),n("span",{class:"token operator"},"="),s(" n"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 求余"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 结果为 1，则表示是 3 的幂次"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Y={href:"https://leetcode.cn/problems/power-of-four",target:"_blank",rel:"noopener noreferrer"},G=n("blockquote",null,[n("p",null,"判断一个整数是否为 4 的幂次方")],-1),K={class:"hint-container details"},H=n("summary",null,"💡",-1),W=n("p",null,"【思路1】除余法，进行除 4 运算直到值不大于 1。如果最后余数是 1 则表明是 4 的幂次。",-1),J=n("p",null,[s("【思路2】位运算，由于 4 = 2*2，则肯定满足第一个条件 "),n("code",null,"n & n-1 == 0"),s(" (二进制仅存在一个 1)；比 2 的幂次还要多一个条件，这个仅存在的一个 1，必须在偶数位上。那么第二个条件可以使用一个偶数位均为 1 的二进制与当前数进行与运算，如果结果不是 0，则表明存在的 1 在偶数位上。")],-1),Q=n("p",null,[s("【思路3】取模法，借用思路2 的前半部分思路，剩下的需要区分是 2 还是 4 的幂次。 4 = (3 + 1) % 3 = 1 4"),n("em",null,"4 = 4 * (3 + 1) = (4"),s("3 + (3 + 1)) % 3 = 1 ... 所以 4 的幂次对 3 取模的结果是 1，而 2的次幂对 3 取模的结果不存在这个规律。")],-1),U=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfFour"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
            n `),n("span",{class:"token operator"},"="),s(" n "),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfFour"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 偶数位上都是 1 的二进制数"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" mask "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0b01010101010101010101010101010101"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"&"),s(" mask"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Z=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isPowerOfFour"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"&&"),s(),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"3"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$=n("hr",null,null,-1),nn=n("h2",{id:"阶乘",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#阶乘","aria-hidden":"true"},"#"),s(" 阶乘")],-1),sn={href:"https://leetcode.cn/problems/factorial-trailing-zeroes",target:"_blank",rel:"noopener noreferrer"},an=n("details",{class:"hint-container details"},[n("summary",null,"💡")],-1),tn={href:"https://leetcode.cn/problems/preimage-size-of-factorial-zeroes-function",target:"_blank",rel:"noopener noreferrer"},en=u('<details class="hint-container details"><summary>💡</summary></details><hr><h2 id="求和" tabindex="-1"><a class="header-anchor" href="#求和" aria-hidden="true">#</a> 求和</h2><h3 id="等差数列" tabindex="-1"><a class="header-anchor" href="#等差数列" aria-hidden="true">#</a> 等差数列</h3><blockquote><p>求和公式: <code>(首项 + 尾项) * 项数 / 2</code></p></blockquote>',5),on={href:"https://leetcode.cn/problems/missing-number",target:"_blank",rel:"noopener noreferrer"},ln=n("blockquote",null,[n("p",null,"给定一个包含 [0, n] 中的 n 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的那个数。")],-1),cn={class:"hint-container details"},pn=n("summary",null,"💡",-1),un=n("p",null,"【思路1】缺失的数 = 等差数列求和 - 数组的和",-1),rn=n("p",null,[s("【思路2】位运算 由于这个数组的值范围为[0, n]，则表明刚好是长度为 n+1 长度的数组。数字刚好与所在的索引的位置匹配，而缺失的数表明该位置没有数。那么使用 "),n("code",null,"x ^ x = 0"),s(" 的特性。只要将数组中数值与所有的索引进行异或操作，那么结果刚好就是缺失的那个数。 代码实现时，必须要构造一个 0~n 的数组，可以在循环变量数组时，直接使用索引值。需要注意的是 nums 长度为 n，不是 n+1。所以遍历时索引值只能到 n-1，所以可以将进行异或操作的结果值初始值设置为 n。")],-1),kn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"missingNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" sum "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 数组的和"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},":"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            sum `),n("span",{class:"token operator"},"+="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 缺失的数 = 数学等差数列求和 - 数组的和"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" len "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},"+"),s(" len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"*"),s("len"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"-"),s(" sum"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dn=n("div",{class:"language-swift line-numbers-mode","data-ext":"swift"},[n("pre",{class:"language-swift"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function-definition function"},"missingNumber"),n("span",{class:"token punctuation"},"("),n("span",{class:"token omit keyword"},"_"),s(" nums"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token class-name"},"Int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Int"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"let"),s(" count "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s(`count
        `),n("span",{class:"token keyword"},"var"),s(" result "),n("span",{class:"token operator"},"="),s(` count
        `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token operator"},"..<"),s("count "),n("span",{class:"token punctuation"},"{"),s(`
            result `),n("span",{class:"token operator"},"^="),s(` i
            result `),n("span",{class:"token operator"},"^="),s(" nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(` result
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),mn=n("blockquote",null,[n("p",null,"升级版 给定一个包含 [0, n] 中的 n-1 个数的数组 nums，找出 [0, n] 这个范围中没有出现在数组中的两个数。")],-1),bn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),vn=n("hr",null,null,-1),hn=n("h2",{id:"博弈论",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#博弈论","aria-hidden":"true"},"#"),s(" 博弈论")],-1),_n={href:"https://leetcode.cn/problems/nim-game",target:"_blank",rel:"noopener noreferrer"},wn=n("blockquote",null,[n("p",null,"抓石头游戏，一堆石头，每人每回合能拿 1 ~ 3 个石头，最后拿完石头者获胜。给定一个石头数，判断是否能获胜？")],-1),yn={class:"hint-container details"},fn=n("summary",null,"💡",-1),gn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"canWinNim"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" n "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 当石头数是不是 4 的倍数时，必赢"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),jn={href:"https://leetcode.cn/problems/stone-game",target:"_blank",rel:"noopener noreferrer"},xn=n("blockquote",null,[n("p",null,"石头的总数为奇数，被分成偶数份，每次只能从分好数组的左边或者右边拿取。给定分割后的偶数数组，判断先手是否能获胜？")],-1),An={class:"hint-container details"},Sn=n("summary",null,"💡",-1),Nn=n("p",null,"【思路】先手必胜！先手者可以控制对手只能拿奇数或者偶数索引下的石头，先手只需要计算好是奇数索引下的石头多还是偶数索引下的石头多，先手只要拿数更多即可必胜。",-1),Mn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"stoneGame"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" piles"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 先手必胜"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ln={href:"https://leetcode.cn/problems/chalkboard-xor-game",target:"_blank",rel:"noopener noreferrer"},qn={class:"hint-container details"},Rn=n("summary",null,"💡",-1),In=n("p",null,"【思路】博弈论",-1),On=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"xorGame"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 偶数，必胜"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"%"),s(),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 异或结果为零，必胜"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" xor "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" num "),n("span",{class:"token operator"},":"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            xor `),n("span",{class:"token operator"},"^="),s(" num"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" xor "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Tn=n("hr",null,null,-1),zn=n("h2",{id:"数论",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数论","aria-hidden":"true"},"#"),s(" 数论")],-1),Pn={href:"https://leetcode.cn/problems/bulb-switcher",target:"_blank",rel:"noopener noreferrer"},Bn=n("blockquote",null,[n("p",null,"有 n 个灯泡，初始化时都为关闭状态。第一轮均打开；第二轮，没两个灯泡开关状态反转；第三轮，每三个灯泡开关状态反转...；直到第 n 轮，每 n 个灯泡开关状态反转。请问最后开灯的数量是多少？")],-1),Fn=n("pre",null,[n("code",null,`  🌰
      输入：n = 3
      输出：1 
      解释：
      初始时, 灯泡状态 [关闭, 关闭, 关闭].
      第一轮后, 灯泡状态 [开启, 开启, 开启].
      第二轮后, 灯泡状态 [开启, 关闭, 开启].
      第三轮后, 灯泡状态 [开启, 关闭, 关闭]. 
`)],-1),Cn={class:"hint-container details"},Dn=n("summary",null,"💡",-1),Vn=n("p",null,"【思路1】暴力解法，通过 n 次遍历，通过灯的索引倍数控制灯的开关，最后统计开灯数量",-1),En=n("p",null,"【思路2】数学规律，",-1),Yn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"bulbSwitch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 初始所有等关闭"),s(`
        `),n("span",{class:"token keyword"},"boolean"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" bulb "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"boolean"),n("span",{class:"token punctuation"},"["),s("n "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" j "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" j "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" j"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("j "),n("span",{class:"token operator"},"%"),s(" i "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 通过 n 轮开关灯泡"),s(`
                    bulb`),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"!"),s("bulb"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token comment"},"// 统计开灯数量"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" count "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("bulb"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(" count "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" count"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Gn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"bulbSwitch"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},")"),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sqrt"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 求平方根取整"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Kn={href:"https://leetcode.cn/problems/bulb-switcher-ii",target:"_blank",rel:"noopener noreferrer"},Hn=n("blockquote",null,[n("p",null,[s("有 n 个灯泡，四个开关。开关1，控制所有灯泡反转(开变为关，关变为开)；开关2，控制所有偶数灯泡反转；开关3，控制所有奇数灯泡反转；开关4，控制 "),n("code",null,"3*i + 1"),s(" 的灯泡反转。给定按压次数，请问一种能按出几种可能开关状态？")])],-1),Wn=n("pre",null,[n("code",null,`  🌰
      输入：n = 3, presses = 1
      输出：4
      解释：状态可以是：
      - 按压开关 1 ，[关, 关, 关]
      - 按压开关 2 ，[关, 开, 关]
      - 按压开关 3 ，[开, 关, 开]
      - 按压开关 4 ，[关, 开, 开]
`)],-1),Jn={class:"hint-container details"},Qn=n("summary",null,"💡",-1),Un=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Xn=n("hr",null,null,-1),Zn=n("h2",{id:"随机数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#随机数","aria-hidden":"true"},"#"),s(" 随机数")],-1),$n=n("h3",{id:"洗牌算法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#洗牌算法","aria-hidden":"true"},"#"),s(" 洗牌算法")],-1),ns={href:"https://leetcode.cn/problems/shuffle-an-array",target:"_blank",rel:"noopener noreferrer"},ss=n("blockquote",null,[n("p",null,"给你一个整数数组 nums ，设计算法来打乱一个没有重复元素的数组。打乱后，数组的所有排列应该是等可能的。")],-1),as=n("pre",null,[n("code",null,`  实现 Solution class:
      Solution(int[] nums) 使用整数数组 nums 初始化对象
      int[] reset() 重设数组到它的初始状态并返回
      int[] shuffle() 返回数组随机打乱后的结果
`)],-1),ts={class:"hint-container details"},es=n("summary",null,"💡",-1),os=n("p",null,"【思路】洗牌算法，遍历数组，每次生产一个随机索引，进行两个元素的交换。",-1),ls=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("nums "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token function"},"reset"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" nums"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token function"},"shuffle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" len "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" copy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"copyOf"),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},","),s(" len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Random"),s(" rand "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" len"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// 选择一个 i 后面的随机索引"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" r "),n("span",{class:"token operator"},"="),s(" i "),n("span",{class:"token operator"},"+"),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),s("len "),n("span",{class:"token operator"},"-"),s(" i"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 
            `),n("span",{class:"token comment"},"// 交换元素位置"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" temp "),n("span",{class:"token operator"},"="),s(" copy"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            copy`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" copy"),n("span",{class:"token punctuation"},"["),s("r"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
            copy`),n("span",{class:"token punctuation"},"["),s("r"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" temp"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" copy"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int[] param_1 = obj.reset();
 * int[] param_2 = obj.shuffle();
 */`),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cs=n("h3",{id:"reservoir-sampling-水塘抽样算法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reservoir-sampling-水塘抽样算法","aria-hidden":"true"},"#"),s(),n("code",null,"Reservoir Sampling"),s(" - “水塘抽样算法”")],-1),ps={href:"https://leetcode.cn/problems/linked-list-random-node",target:"_blank",rel:"noopener noreferrer"},us=n("blockquote",null,[n("p",null,"给你一个单链表，随机选择链表的一个节点，并返回相应的节点值。每个节点被选中的概率一样。")],-1),is={class:"hint-container details"},rs=n("summary",null,"💡",-1),ks=n("p",null,"【思路】根据链表长度，选取随机索引，然后遍历链表得到随机节点。",-1),ds=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * Definition for singly-linked list.
 * public class ListNode `),n("span",{class:"token punctuation"},"{"),s(`
 *     int val;
 *     ListNode next;
 *     ListNode() `),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; "),n("span",{class:"token punctuation"},"}"),s(`
 *     ListNode(int val, ListNode next) `),n("span",{class:"token punctuation"},"{"),s(" this.val = val; this.next = next; "),n("span",{class:"token punctuation"},"}"),s(`
 * `),n("span",{class:"token punctuation"},"}"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"int"),s(" len "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 链表长度"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Random"),s(" rand "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("head "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" node "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 初始化是统计链表长度"),s(`
            len `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            node `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getRandom"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" r "),n("span",{class:"token operator"},"="),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),s("len"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 根据链表长度选取随机索引位置"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" node "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("r "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            node `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
            r `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */`),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ms=n("blockquote",null,[n("p",null,"只能遍历一次链表，如何处理？")],-1),bs={class:"hint-container details"},vs=n("summary",null,"💡",-1),hs=n("p",null,"【思路】水塘抽样算法",-1),_s=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ListNode"),s(" head"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("head "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getRandom"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"Random"),s(" rand "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ListNode"),s(" node "),n("span",{class:"token operator"},"="),s(" head"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" count "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"int"),s(" r "),n("span",{class:"token operator"},"="),s(" rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),s("count"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// [0, count) 随机数"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"=="),s(" r"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 1/count 概率进行结果替换 (匹配 0 ~ count-1 任意一个都行)"),s(`
                result `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("val"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
            count `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            node `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("next"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ws={href:"https://leetcode.cn/problems/random-pick-index",target:"_blank",rel:"noopener noreferrer"},ys=n("blockquote",null,[n("p",null,"给你一个可能含有重复元素的整数数组 nums ，请你随机输出给定的目标数字 target 的索引。你可以假设给定的数字一定存在于数组中。")],-1),fs=n("pre",null,[n("code",null,`  实现 Solution 类：
      Solution(int[] nums) 用数组 nums 初始化对象。
      int pick(int target) 从 nums 中选出一个满足 nums[i] == target 的随机索引 i 。如果存在多个有效的索引，则每个索引的返回概率应当相等。
`)],-1),gs={class:"hint-container details"},js=n("summary",null,"💡",-1),xs=n("p",null,"【思路1】数据预处理，使用哈希表将值作为键，索引值集合作为值，进行预处理。查询时，根据索引列表进行随机返回。",-1),As=n("p",null,"【思路】水塘抽样算法，当匹配到目标值时，进行水塘抽样算法处理。",-1),Ss=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Map"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" map "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Random"),s(" rand "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("nums "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" list "),n("span",{class:"token operator"},"="),s(" map"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrDefault"),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            list`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("i"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            map`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(" list"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"pick"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" target"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" list "),n("span",{class:"token operator"},"="),s(" map"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("target"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" list"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),s("list"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int param_1 = obj.pick(target);
 */`),s("```\n\n")])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ns=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Solution"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Random"),s(" rand "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Random"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"Solution"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nums"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("nums "),n("span",{class:"token operator"},"="),s(" nums"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"pick"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" target"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" result "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"int"),s(" count "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" nums"),n("span",{class:"token punctuation"},"."),s("length"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("nums"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"!="),s(" target"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"continue"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"// 匹配目标值"),s(`
            count `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("rand"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"nextInt"),n("span",{class:"token punctuation"},"("),s("count"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token comment"},"// 1/count 概率，进行结果索引替换"),s(`
                result `),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function Ms(Ls,qs){const l=i("ExternalLinkIcon"),c=i("CodeTabs");return k(),d("div",null,[p(" more "),b,n("ul",null,[n("li",null,[n("a",v,[s("多边形和多边形上的算法"),o(l)])]),n("li",null,[n("a",h,[s("凸边形"),o(l)])]),n("li",null,[n("a",_,[s("问题简化"),o(l)])])]),w,o(c,{id:"24",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[y]),_:1}),f,g,j,n("details",x,[A,n("p",null,[n("a",S,[s("👉🏻"),o(l)])])]),N,p(" 2 的幂 "),n("ul",null,[n("li",null,[n("a",M,[s("🟢 231 - 2 的幂"),o(l)]),L])]),n("details",q,[R,I,O,o(c,{id:"265",data:[{id:"java 解法1"},{id:"java 解法2"},{id:"swift 解法2"}]},{title0:a(({value:t,isActive:e})=>[s("java 解法1")]),title1:a(({value:t,isActive:e})=>[s("java 解法2")]),title2:a(({value:t,isActive:e})=>[s("swift 解法2")]),tab0:a(({value:t,isActive:e})=>[T]),tab1:a(({value:t,isActive:e})=>[z]),tab2:a(({value:t,isActive:e})=>[P]),_:1})]),p(" 3 的幂 "),n("ul",null,[n("li",null,[n("a",B,[s("🟢 326 - 3 的幂"),o(l)]),F])]),n("details",C,[D,V,o(c,{id:"296",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[E]),_:1})]),p(" 4的幂 "),n("ul",null,[n("li",null,[n("a",Y,[s("🟢 342 - 4 的幂"),o(l)]),G])]),n("details",K,[H,W,J,Q,o(c,{id:"327",data:[{id:"java 解法1"},{id:"java 解法2"},{id:"java 解法3"}]},{title0:a(({value:t,isActive:e})=>[s("java 解法1")]),title1:a(({value:t,isActive:e})=>[s("java 解法2")]),title2:a(({value:t,isActive:e})=>[s("java 解法3")]),tab0:a(({value:t,isActive:e})=>[U]),tab1:a(({value:t,isActive:e})=>[X]),tab2:a(({value:t,isActive:e})=>[Z]),_:1})]),$,nn,p(" 阶乘后的零 "),n("ul",null,[n("li",null,[n("a",sn,[s("🟠 172 - 阶乘后的零"),o(l)])])]),an,p(" 阶乘函数后 K 个零 "),n("ul",null,[n("li",null,[n("a",tn,[s("🔴 793 - 阶乘函数后 K 个零"),o(l)])])]),en,p(" 丢失的数字 "),n("ul",null,[n("li",null,[n("a",on,[s("🟢 268 - 丢失的数字"),o(l)]),ln])]),n("details",cn,[pn,un,rn,o(c,{id:"401",data:[{id:"java 解法1"},{id:"swift 解法2"}]},{title0:a(({value:t,isActive:e})=>[s("java 解法1")]),title1:a(({value:t,isActive:e})=>[s("swift 解法2")]),tab0:a(({value:t,isActive:e})=>[kn]),tab1:a(({value:t,isActive:e})=>[dn]),_:1})]),mn,o(c,{id:"415",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[bn]),_:1}),vn,hn,p(" Nim 游戏 "),n("ul",null,[n("li",null,[n("a",_n,[s("🟢 292 - Nim 游戏"),o(l)]),wn])]),n("details",yn,[fn,o(c,{id:"440",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[gn]),_:1})]),p(" 石子游戏 "),n("ul",null,[n("li",null,[n("a",jn,[s("🟠 877 - 石子游戏"),o(l)]),xn])]),n("details",An,[Sn,Nn,o(c,{id:"468",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[Mn]),_:1})]),p(" 黑板异或游戏 "),n("ul",null,[n("li",null,[n("a",Ln,[s("🔴 810 - 黑板异或游戏"),o(l)])])]),n("details",qn,[Rn,In,o(c,{id:"488",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[On]),_:1})]),Tn,zn,p(" 灯泡开关 "),n("ul",null,[n("li",null,[n("p",null,[n("a",Pn,[s("🟠 319 - 灯泡开关"),o(l)])]),Bn,Fn])]),n("details",Cn,[Dn,Vn,En,o(c,{id:"521",data:[{id:"java 解法1"},{id:"java 解法2"}]},{title0:a(({value:t,isActive:e})=>[s("java 解法1")]),title1:a(({value:t,isActive:e})=>[s("java 解法2")]),tab0:a(({value:t,isActive:e})=>[Yn]),tab1:a(({value:t,isActive:e})=>[Gn]),_:1})]),p(" 灯泡开关 Ⅱ "),n("ul",null,[n("li",null,[n("p",null,[n("a",Kn,[s("🟠 672 - 灯泡开关 Ⅱ"),o(l)])]),Hn,Wn])]),n("details",Jn,[Qn,o(c,{id:"547",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[Un]),_:1})]),Xn,Zn,$n,p(" 打乱数组 "),n("ul",null,[n("li",null,[n("p",null,[n("a",ns,[s("🟠 384 - 打乱数组"),o(l)])]),ss,as])]),n("details",ts,[es,os,o(c,{id:"580",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[ls]),_:1})]),cs,p(" 链表随机节点 "),n("ul",null,[n("li",null,[n("a",ps,[s("🟠 382 - 链表随机节点"),o(l)]),us])]),n("details",is,[rs,ks,o(c,{id:"608",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[ds]),_:1})]),ms,n("details",bs,[vs,hs,o(c,{id:"623",data:[{id:"java"}]},{title0:a(({value:t,isActive:e})=>[s("java")]),tab0:a(({value:t,isActive:e})=>[_s]),_:1})]),p(" 随机数索引 "),n("ul",null,[n("li",null,[n("p",null,[n("a",ws,[s("🟠 398 - 随机数索引"),o(l)])]),ys,fs])]),n("details",gs,[js,xs,As,o(c,{id:"652",data:[{id:"java 解法1"},{id:"java 解法2"}]},{title0:a(({value:t,isActive:e})=>[s("java 解法1")]),title1:a(({value:t,isActive:e})=>[s("java 解法2")]),tab0:a(({value:t,isActive:e})=>[Ss]),tab1:a(({value:t,isActive:e})=>[Ns]),_:1})])])}const Os=r(m,[["render",Ms],["__file","0x09.math.html.vue"]]);export{Os as default};
