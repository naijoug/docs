import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as l,c,a as i,b as n,e as s,d as e,f as t}from"./app-NWzcul-W.js";const r={},d={id:"python",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#python","aria-hidden":"true"},"#",-1),m={href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"},k=n("blockquote",null,[n("p",null,"Python")],-1),v=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" Reference")],-1),b={href:"https://github.com/pypa/pip",target:"_blank",rel:"noopener noreferrer"},h=n("blockquote",null,[n("p",null,"The Python Package Installer")],-1),y={href:"https://docs.python.org/zh-cn/3/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/xianhu/LearnPython",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/jackfrued/Python-100-Days",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.liaoxuefeng.com/wiki/1016959663602400",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/yidao620c/python3-cookbook",target:"_blank",rel:"noopener noreferrer"},w=n("blockquote",null,[n("p",null,"《Python Cookbook in Chinese》 3rd Edition 翻译")],-1),x={href:"https://github.com/Prodesire/Python-Guide-CN",target:"_blank",rel:"noopener noreferrer"},P=n("blockquote",null,[n("p",null,`Python最佳实践指南。 The chinese translation of "Hitchhiker's Guide to Python".`)],-1),q={href:"https://github.com/eastlakeside/interpy-zh",target:"_blank",rel:"noopener noreferrer"},N=n("blockquote",null,[n("p",null,"📘《Python进阶》（Intermediate Python - Chinese Version）")],-1),E={href:"http://www.pythondoc.com/",target:"_blank",rel:"noopener noreferrer"},L=n("h2",{id:"package-management",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#package-management","aria-hidden":"true"},"#"),s(" Package Management")],-1),F={href:"https://github.com/mitsuhiko/rye",target:"_blank",rel:"noopener noreferrer"},T=n("blockquote",null,[n("p",null,"An Experimental Package Management Solution for Python")],-1),V=t(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># pip</span>
$ pip <span class="token parameter variable">--version</span>         <span class="token comment"># 查看 pip 版本</span>
$ pip <span class="token function">install</span> <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span> <span class="token comment"># 安装 Python 包</span>
<span class="token comment"># 临时使用镜像安装 Python 包</span>
$ pip <span class="token function">install</span> <span class="token parameter variable">-i</span> https://mirrors.aliyun.com/pypi/simple <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span>
$ pip list              <span class="token comment"># 查看已安装的 Python 包</span>
<span class="token comment"># pip config</span>
<span class="token comment"># pip 设置阿里镜像源 &gt; https://developer.aliyun.com/mirror/pypi</span>
$ pip config <span class="token builtin class-name">set</span> global.index-url https://mirrors.aliyun.com/pypi/simple/
$ pip config <span class="token builtin class-name">set</span> install.trusted-host mirrors.aliyun.com
<span class="token comment"># pip 取消设置阿里镜像源</span>
$ pip config <span class="token builtin class-name">unset</span> global.index-url
$ pip config <span class="token builtin class-name">unset</span> install.trusted-host
<span class="token comment"># 显示 pip 配置设置</span>
$ pip config list       
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python2-vs-python3" tabindex="-1"><a class="header-anchor" href="#python2-vs-python3" aria-hidden="true">#</a> Python2 vs Python3</h2><table><thead><tr><th>Python2</th><th>Python3</th></tr></thead><tbody><tr><td><code>print</code></td><td><code>print()</code></td></tr><tr><td><code>xrange()</code></td><td><code>range()</code></td></tr><tr><td><code>except IOError, (errno, strerror)</code></td><td><code>except IOError as (errno, strerror)</code></td></tr><tr><td><code>3 / 2 = 1</code></td><td><code>3 / 2 = 1.5</code></td></tr></tbody></table><h2 id="virtual-environment" tabindex="-1"><a class="header-anchor" href="#virtual-environment" aria-hidden="true">#</a> Virtual Environment</h2><blockquote><p><code>venv</code> &amp; <code>pyenv</code> &amp; <code>pipenv</code> &amp; <code>virtualenv</code> &amp; <code>Anaconda</code></p></blockquote>`,6),C={href:"https://github.com/pyenv/pyenv",target:"_blank",rel:"noopener noreferrer"},z=n("blockquote",null,[n("p",null,"Simple Python version management")],-1),I={href:"https://github.com/pypa/pipenv",target:"_blank",rel:"noopener noreferrer"},M=n("blockquote",null,[n("p",null,"Python Development Workflow for Humans.")],-1),D={href:"https://github.com/pypa/virtualenv",target:"_blank",rel:"noopener noreferrer"},A=n("blockquote",null,[n("p",null,"Virtual Python Environment builder")],-1),O={href:"https://www.anaconda.com",target:"_blank",rel:"noopener noreferrer"},S=n("blockquote",null,[n("p",null,"Data science technology for a better world.")],-1),B=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># venv (Python 3.3)</span>
$ python <span class="token parameter variable">-m</span> venv .env <span class="token comment"># 创建虚拟环境</span>
$ <span class="token builtin class-name">source</span> .env/bin/activate <span class="token comment"># 激活虚拟空间</span>
$ deactivate <span class="token comment"># 关闭虚拟空间</span>

<span class="token comment"># pyenv</span>
$ brew <span class="token function">install</span> pyenv    <span class="token comment"># 安装 pyenv</span>
$ pyenv versions        <span class="token comment"># 查看 python 版本</span>

<span class="token comment"># pipenv</span>
$ pipenv <span class="token parameter variable">--python</span> <span class="token number">3.10</span>      <span class="token comment"># 设置项目使用 python 版本</span>
$ pipenv <span class="token function">install</span> <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span>  <span class="token comment"># 安装依赖包</span>

<span class="token comment"># virtualenv</span>
$ pip <span class="token function">install</span> virtualenv    <span class="token comment"># 安装 virtualenv</span>
$ virtualenv test_env                       <span class="token comment"># 在当前目录建立一个 python 虚拟环境</span>
$ virtualenv --no-site-packages test_env    <span class="token comment"># 不复制系统 python 环境的第三方包</span>
$ virtualenv <span class="token parameter variable">-p</span> /usr/bin/python2.7 test_env <span class="token comment"># 指定 python 版本</span>
$ <span class="token builtin class-name">source</span> test_env/bin/activate <span class="token comment"># 激活虚拟空间</span>
$ deactivate <span class="token comment"># 关闭虚拟空间</span>

<span class="token comment"># conda</span>
$ conda <span class="token parameter variable">-V</span>          <span class="token comment"># conda版本</span>
$ conda list        <span class="token comment"># 查看当前环境安装包</span>
$ conda list <span class="token parameter variable">-n</span> <span class="token function">env</span> <span class="token comment"># 指定环境安装包</span>
$ conda info        <span class="token comment"># 查看conda信息</span>
<span class="token comment"># 查看已创建虚拟环境</span>
$ conda info <span class="token parameter variable">-e</span>
$ conda <span class="token function">env</span> list    
<span class="token comment"># 创建</span>
$ conda create <span class="token parameter variable">--name</span> <span class="token variable">$ENVIRONMENT_NAME</span> <span class="token punctuation">[</span>package<span class="token punctuation">]</span>
$ conda create <span class="token parameter variable">-n</span> py3 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3</span> <span class="token comment"># 创建python3环境</span>
$ conda create <span class="token parameter variable">-n</span> py2 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">2</span> <span class="token comment"># 创建python2环境</span>
$ conda create <span class="token parameter variable">--name</span> python34 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.4</span>   <span class="token comment"># 创建指定版本环境</span>
<span class="token comment"># 激活</span>
$ <span class="token builtin class-name">source</span> activate py3
<span class="token comment"># 关闭</span>
$ <span class="token builtin class-name">source</span> deactivate
<span class="token comment"># 包</span>
$ conda search <span class="token punctuation">[</span>package<span class="token punctuation">]</span>            <span class="token comment"># 搜索包</span>
$ conda <span class="token function">install</span> <span class="token parameter variable">-n</span> <span class="token function">env</span> <span class="token punctuation">[</span>package<span class="token punctuation">]</span>    <span class="token comment"># 安装包</span>
$ conda update <span class="token parameter variable">-n</span> <span class="token function">env</span> <span class="token punctuation">[</span>package<span class="token punctuation">]</span>     <span class="token comment"># 更新包        </span>
$ conda remove <span class="token parameter variable">--name</span> <span class="token function">env</span> <span class="token punctuation">[</span>package<span class="token punctuation">]</span> <span class="token comment"># 删除包</span>
<span class="token comment"># 删除虚拟环境</span>
$ conda remove <span class="token parameter variable">-n</span> <span class="token function">env</span> <span class="token parameter variable">--all</span>
$ conda <span class="token function">env</span> remove <span class="token parameter variable">-n</span> <span class="token function">env</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interactive-mode" tabindex="-1"><a class="header-anchor" href="#interactive-mode" aria-hidden="true">#</a> Interactive Mode</h2><blockquote><p>Python 交互模式</p></blockquote><ul><li><code>&gt;&gt;&gt;</code> : 主提示符(primary prompt)</li><li><code>...</code> : 从属提示符，输入多行结构时出现从属提示符</li></ul><h2 id="main-main" tabindex="-1"><a class="header-anchor" href="#main-main" aria-hidden="true">#</a> <code>main</code> &amp; <code>__main__</code></h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3      # 大部分 .py 文件不必使用 Shebang，main 文件应该使用</span>
<span class="token comment"># Shebang : 一个由井号和叹号构成的字符串行(#!)，用于帮助内核找到 Python 解释器</span>
<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># TODO</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span> <span class="token comment"># 作用 : 当作为模块被导入时，主程序不会被执行</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="str-bytes" tabindex="-1"><a class="header-anchor" href="#str-bytes" aria-hidden="true">#</a> <code>str</code> &amp; <code>bytes</code></h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span>
b <span class="token operator">=</span> <span class="token string">b&#39;test&#39;</span>
<span class="token comment"># str -&gt; bytes</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># bytes -&gt; str</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="conditional-expression" tabindex="-1"><a class="header-anchor" href="#conditional-expression" aria-hidden="true">#</a> Conditional Expression</h2><blockquote><p>条件表达式</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span>
 
<span class="token comment"># 1.常规</span>
<span class="token keyword">if</span> a<span class="token operator">&gt;</span>b<span class="token punctuation">:</span>
    c <span class="token operator">=</span> a
<span class="token keyword">else</span><span class="token punctuation">:</span>
    c <span class="token operator">=</span> b
 
<span class="token comment"># 2.表达式</span>
c <span class="token operator">=</span> a <span class="token keyword">if</span> a<span class="token operator">&gt;</span>b <span class="token keyword">else</span> b <span class="token comment"># 先执行中间的if，如果返回True，就是左边，False是右边。</span>
 
<span class="token comment"># 3.二维列表</span>
c <span class="token operator">=</span> <span class="token punctuation">[</span>b<span class="token punctuation">,</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token operator">&gt;</span>b<span class="token punctuation">]</span> <span class="token comment">#实际是[b,a][False]，因为False被转换为0，所以是[1,2][0]，也就是[1]</span>
                      <span class="token comment"># False返回第一个，True 返回第一个。</span>
 
<span class="token comment"># 4</span>
c <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">&gt;</span>b <span class="token keyword">and</span> <span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment"># 这个比较好玩，False and [1] or [2]，因为and的优先级高于or，先算and</span>
<span class="token comment"># False和[1] and之后还是False，和[2]or之后却成了[2]</span>
<span class="token comment"># True 和[1] and之后是[1]，[1]和[2]or结果是[1]</span>
<span class="token comment"># 也就是False和True在和别人做boolean运算的时候，根据and还是or，F和T在前在后有不一样的数据转换规则。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><ul><li><p>默认参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 默认参数</span>
<span class="token keyword">def</span> <span class="token function">test1</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c
test1<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment"># 10 + 1 + 2 = 13</span>
<span class="token comment"># 默认参数的值等于定义域的值</span>
i <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">def</span> <span class="token function">test2</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c
i <span class="token operator">=</span> <span class="token number">20</span>
test2<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   <span class="token comment"># 10 + 1 + 10 = 21</span>
<span class="token comment"># 默认参数为可变对象时，需要注意。</span>
<span class="token keyword">def</span> <span class="token function">test3</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">)</span>
    <span class="token keyword">return</span> L
test3<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   <span class="token comment"># [13]</span>
test3<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   <span class="token comment"># [13, 13]</span>
test3<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   <span class="token comment"># [13, 13, 13]</span>
<span class="token comment"># 解决方案: 函数内对可变对象进行初始化</span>
<span class="token keyword">def</span> <span class="token function">test4</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> L <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> L <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    L<span class="token punctuation">.</span>append<span class="token punctuation">(</span>a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">)</span>
    <span class="token keyword">return</span> L
test4<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   <span class="token comment"># [13]</span>
test4<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   <span class="token comment"># [13]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>任意参数</p><ul><li><code>*name</code> : 不常用，传递的参数被包装成一个元组，在其后面的参数必须是关键字参数</li><li><code>**name</code> : 必须作为最后一个参数，包含剩余所有的关键字参数</li></ul></li></ul><h2 id="error" tabindex="-1"><a class="header-anchor" href="#error" aria-hidden="true">#</a> Error</h2><ul><li><code>ModuleNotFoundError: No module named &#39;_ctypes&#39;</code></li></ul><blockquote><p>没有安装外部函数库(<code>libffi</code>)的开发链接库软件包</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># &gt; ubuntu</span>
$ <span class="token function">apt-get</span> <span class="token function">install</span> libffi-dev
<span class="token comment"># &gt; centos</span>
$ yum <span class="token function">install</span> libffi-devel <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>ModuleNotFoundError: No module named &#39;_lzma&#39;</code></li></ul><blockquote><p>没有安装(<code>lzma-dev</code> - LZMA 压缩是一种数据压缩算法)的开发链接库软件包</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># &gt; ubuntu</span>
$ <span class="token function">apt-get</span> <span class="token function">install</span> liblzma-dev <span class="token parameter variable">-y</span>
<span class="token comment"># &gt; centos</span>
$ yum <span class="token function">install</span> xz-devel <span class="token parameter variable">-y</span>
$ yum <span class="token function">install</span> python-backports-lzma <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function G(R,H){const a=p("ExternalLinkIcon");return l(),c("div",null,[i(" more "),n("h1",d,[u,s(),n("a",m,[s("Python"),e(a)])]),k,v,n("ul",null,[n("li",null,[n("a",b,[s("pip"),e(a)]),h]),n("li",null,[n("a",y,[s("Python Docs"),e(a)])]),n("li",null,[n("a",g,[s("Learn Python"),e(a)])]),n("li",null,[n("a",f,[s("Python 100 Days"),e(a)])]),n("li",null,[n("a",_,[s("Python 教程"),e(a)])]),n("li",null,[n("a",$,[s("Python Cookbook"),e(a)]),w]),n("li",null,[n("a",x,[s("Python-Guide-CN"),e(a)]),P]),n("li",null,[n("a",q,[s("interpy-zh"),e(a)]),N]),n("li",null,[n("a",E,[s("Python 中文学习大本营"),e(a)])])]),L,n("ul",null,[n("li",null,[n("a",F,[s("Rye"),e(a)]),T])]),V,n("ul",null,[n("li",null,[n("a",C,[s("pyenv"),e(a)]),z]),n("li",null,[n("a",I,[s("pipenv"),e(a)]),M]),n("li",null,[n("a",D,[s("virtualenv"),e(a)]),A]),n("li",null,[n("a",O,[s("Anaconda"),e(a)]),S])]),B])}const W=o(r,[["render",G],["__file","python.html.vue"]]);export{W as default};
